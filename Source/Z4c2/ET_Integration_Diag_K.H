#ifndef ET_INTEGRATION_DIAG_K_H
#define ET_INTEGRATION_DIAG_K_H

#include <AMReX_REAL.H> 
#include <AMReX_Array4.H> 
#include <ET_Integration_Setup_K.H> 

AMREX_GPU_DEVICE 
inline 
void 
state_diagnostics(int i, int j, int k, 
        amrex::Array4<amrex::Real> const& diag, 
        amrex::Array4<amrex::Real const> const& state_fab,
        const amrex::Real time_lev,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        const auto domain_xlo = geom.ProbLo();
        
        amrex::Real x_U_0 = (i + 0.5)*geom.CellSize(0) + domain_xlo[0]; 
        amrex::Real x_U_1 = (j + 0.5)*geom.CellSize(1) + domain_xlo[1]; 
        amrex::Real x_U_2 = (k + 0.5)*geom.CellSize(2) + domain_xlo[2]; 
        
        {
        amrex::Real KOSigma = 0.32000000000000001;

        amrex::Real lambda = 2.0;

        amrex::Real v = 0.050000000000000003;

        amrex::Real echarge = 1.0;

        amrex::Real kappa1 = 0.02;

        amrex::Real kappa2 = 0;

        amrex::Real eta = 0.05;

        amrex::Real kappaEM = 0.01;

        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real gamtilde_LL_00 = state_fab(i, j, k, Idx::gamtilde_LL_00);
        amrex::Real gamtilde_LL_01 = state_fab(i, j, k, Idx::gamtilde_LL_01);
        amrex::Real gamtilde_LL_02 = state_fab(i, j, k, Idx::gamtilde_LL_02);
        amrex::Real gamtilde_LL_11 = state_fab(i, j, k, Idx::gamtilde_LL_11);
        amrex::Real gamtilde_LL_12 = state_fab(i, j, k, Idx::gamtilde_LL_12);
        amrex::Real gamtilde_LL_22 = state_fab(i, j, k, Idx::gamtilde_LL_22);

        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);

        amrex::Real Atilde_LL_00 = state_fab(i, j, k, Idx::Atilde_LL_00);
        amrex::Real Atilde_LL_01 = state_fab(i, j, k, Idx::Atilde_LL_01);
        amrex::Real Atilde_LL_02 = state_fab(i, j, k, Idx::Atilde_LL_02);
        amrex::Real Atilde_LL_11 = state_fab(i, j, k, Idx::Atilde_LL_11);
        amrex::Real Atilde_LL_12 = state_fab(i, j, k, Idx::Atilde_LL_12);
        amrex::Real Atilde_LL_22 = state_fab(i, j, k, Idx::Atilde_LL_22);

        amrex::Real theta = state_fab(i, j, k, Idx::theta);

        amrex::Real Gamtilde_U_0 = state_fab(i, j, k, Idx::Gamtilde_U_0);
        amrex::Real Gamtilde_U_1 = state_fab(i, j, k, Idx::Gamtilde_U_1);
        amrex::Real Gamtilde_U_2 = state_fab(i, j, k, Idx::Gamtilde_U_2);

        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);

        amrex::Real beta_U_0 = state_fab(i, j, k, Idx::beta_U_0);
        amrex::Real beta_U_1 = state_fab(i, j, k, Idx::beta_U_1);
        amrex::Real beta_U_2 = state_fab(i, j, k, Idx::beta_U_2);

        amrex::Real E_U_0 = state_fab(i, j, k, Idx::E_U_0);
        amrex::Real E_U_1 = state_fab(i, j, k, Idx::E_U_1);
        amrex::Real E_U_2 = state_fab(i, j, k, Idx::E_U_2);

        amrex::Real A = state_fab(i, j, k, Idx::A);

        amrex::Real A_L_0 = state_fab(i, j, k, Idx::A_L_0);
        amrex::Real A_L_1 = state_fab(i, j, k, Idx::A_L_1);
        amrex::Real A_L_2 = state_fab(i, j, k, Idx::A_L_2);

        amrex::Real Z = state_fab(i, j, k, Idx::Z);

        amrex::Real phi1 = state_fab(i, j, k, Idx::phi1);

        amrex::Real phi2 = state_fab(i, j, k, Idx::phi2);

        amrex::Real Pi1 = state_fab(i, j, k, Idx::Pi1);

        amrex::Real Pi2 = state_fab(i, j, k, Idx::Pi2);

        amrex::Real dDchi_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::chi))/dx[0];
        amrex::Real dDchi_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::chi))/dx[1];
        amrex::Real dDchi_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::chi))/dx[2];

        amrex::Real dupDchi_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/2.0*state_fab(i + 2, j, k, Idx::chi) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::chi) - 1.0/4.0*state_fab(i - 1, j, k, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[0];
        amrex::Real dupDchi_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/2.0*state_fab(i, j + 2, k, Idx::chi) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::chi) - 1.0/4.0*state_fab(i, j - 1, k, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[1];
        amrex::Real dupDchi_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/2.0*state_fab(i, j, k + 2, Idx::chi) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::chi) - 1.0/4.0*state_fab(i, j, k - 1, Idx::chi) - 5.0/6.0*state_fab(i, j, k, Idx::chi))/dx[2];

        amrex::Real ddnDchi_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::chi) - 3.0/2.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 3, j, k, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[0];
        amrex::Real ddnDchi_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::chi) - 3.0/2.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 3, k, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[1];
        amrex::Real ddnDchi_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::chi) - 3.0/2.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 3, Idx::chi) + (5.0/6.0)*state_fab(i, j, k, Idx::chi))/dx[2];

        amrex::Real dDDchi_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[0], 2);
        amrex::Real dDDchi_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real dDDchi_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real dDDchi_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[1], 2);
        amrex::Real dDDchi_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real dDDchi_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[2], 2);

        amrex::Real dKODchi = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::chi) - 3.0/32.0*state_fab(i, j, k + 2, Idx::chi) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::chi) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::chi) - 3.0/32.0*state_fab(i, j, k - 2, Idx::chi) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::chi) - 5.0/16.0*state_fab(i, j, k, Idx::chi))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::chi) - 3.0/32.0*state_fab(i, j + 2, k, Idx::chi) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::chi) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::chi) - 3.0/32.0*state_fab(i, j - 2, k, Idx::chi) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::chi) - 5.0/16.0*state_fab(i, j, k, Idx::chi))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::chi) - 3.0/32.0*state_fab(i + 2, j, k, Idx::chi) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::chi) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::chi) - 3.0/32.0*state_fab(i - 2, j, k, Idx::chi) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::chi) - 5.0/16.0*state_fab(i, j, k, Idx::chi))/dx[0];

        amrex::Real AdvDbetachi = beta_U_0*((beta_U_0<0)*ddnDchi_L_0 + (beta_U_0>0)*dupDchi_L_0) + beta_U_1*((beta_U_1<0)*ddnDchi_L_1 + (beta_U_1>0)*dupDchi_L_1) + beta_U_2*((beta_U_2<0)*ddnDchi_L_2 + (beta_U_2>0)*dupDchi_L_2);

        amrex::Real dDgamtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dDgamtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dDgamtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dDgamtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dDgamtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dDgamtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dDgamtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dDgamtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dDgamtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dDgamtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dDgamtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dDgamtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dDgamtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dDgamtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dDgamtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dDgamtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dDgamtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dDgamtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dupDgamtilde_LLL_000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dupDgamtilde_LLL_001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dupDgamtilde_LLL_002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dupDgamtilde_LLL_010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dupDgamtilde_LLL_011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dupDgamtilde_LLL_012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dupDgamtilde_LLL_020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dupDgamtilde_LLL_021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dupDgamtilde_LLL_022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dupDgamtilde_LLL_110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dupDgamtilde_LLL_111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dupDgamtilde_LLL_112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dupDgamtilde_LLL_120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dupDgamtilde_LLL_121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dupDgamtilde_LLL_122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dupDgamtilde_LLL_220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dupDgamtilde_LLL_221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dupDgamtilde_LLL_222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real ddnDgamtilde_LLL_000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real ddnDgamtilde_LLL_001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real ddnDgamtilde_LLL_002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real ddnDgamtilde_LLL_010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real ddnDgamtilde_LLL_011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real ddnDgamtilde_LLL_012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real ddnDgamtilde_LLL_020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real ddnDgamtilde_LLL_021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real ddnDgamtilde_LLL_022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real ddnDgamtilde_LLL_110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real ddnDgamtilde_LLL_111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real ddnDgamtilde_LLL_112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real ddnDgamtilde_LLL_120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real ddnDgamtilde_LLL_121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real ddnDgamtilde_LLL_122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real ddnDgamtilde_LLL_220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real ddnDgamtilde_LLL_221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real ddnDgamtilde_LLL_222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::gamtilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dDDgamtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dKODgamtilde_LL_00 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_00) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dKODgamtilde_LL_01 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_01) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dKODgamtilde_LL_02 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_02) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dKODgamtilde_LL_11 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_11) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dKODgamtilde_LL_12 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_12) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dKODgamtilde_LL_22 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::gamtilde_LL_22) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 3.0/32.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::gamtilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/dx[0];

        amrex::Real AdvDbetagamtilde_LL_00 = beta_U_0*((beta_U_0<0)*ddnDgamtilde_LLL_000 + (beta_U_0>0)*dupDgamtilde_LLL_000) + beta_U_1*((beta_U_1<0)*ddnDgamtilde_LLL_001 + (beta_U_1>0)*dupDgamtilde_LLL_001) + beta_U_2*((beta_U_2<0)*ddnDgamtilde_LLL_002 + (beta_U_2>0)*dupDgamtilde_LLL_002);
        amrex::Real AdvDbetagamtilde_LL_01 = beta_U_0*((beta_U_0<0)*ddnDgamtilde_LLL_010 + (beta_U_0>0)*dupDgamtilde_LLL_010) + beta_U_1*((beta_U_1<0)*ddnDgamtilde_LLL_011 + (beta_U_1>0)*dupDgamtilde_LLL_011) + beta_U_2*((beta_U_2<0)*ddnDgamtilde_LLL_012 + (beta_U_2>0)*dupDgamtilde_LLL_012);
        amrex::Real AdvDbetagamtilde_LL_02 = beta_U_0*((beta_U_0<0)*ddnDgamtilde_LLL_020 + (beta_U_0>0)*dupDgamtilde_LLL_020) + beta_U_1*((beta_U_1<0)*ddnDgamtilde_LLL_021 + (beta_U_1>0)*dupDgamtilde_LLL_021) + beta_U_2*((beta_U_2<0)*ddnDgamtilde_LLL_022 + (beta_U_2>0)*dupDgamtilde_LLL_022);
        amrex::Real AdvDbetagamtilde_LL_11 = beta_U_0*((beta_U_0<0)*ddnDgamtilde_LLL_110 + (beta_U_0>0)*dupDgamtilde_LLL_110) + beta_U_1*((beta_U_1<0)*ddnDgamtilde_LLL_111 + (beta_U_1>0)*dupDgamtilde_LLL_111) + beta_U_2*((beta_U_2<0)*ddnDgamtilde_LLL_112 + (beta_U_2>0)*dupDgamtilde_LLL_112);
        amrex::Real AdvDbetagamtilde_LL_12 = beta_U_0*((beta_U_0<0)*ddnDgamtilde_LLL_120 + (beta_U_0>0)*dupDgamtilde_LLL_120) + beta_U_1*((beta_U_1<0)*ddnDgamtilde_LLL_121 + (beta_U_1>0)*dupDgamtilde_LLL_121) + beta_U_2*((beta_U_2<0)*ddnDgamtilde_LLL_122 + (beta_U_2>0)*dupDgamtilde_LLL_122);
        amrex::Real AdvDbetagamtilde_LL_22 = beta_U_0*((beta_U_0<0)*ddnDgamtilde_LLL_220 + (beta_U_0>0)*dupDgamtilde_LLL_220) + beta_U_1*((beta_U_1<0)*ddnDgamtilde_LLL_221 + (beta_U_1>0)*dupDgamtilde_LLL_221) + beta_U_2*((beta_U_2<0)*ddnDgamtilde_LLL_222 + (beta_U_2>0)*dupDgamtilde_LLL_222);

        amrex::Real dDKhat_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Khat))/dx[0];
        amrex::Real dDKhat_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Khat))/dx[1];
        amrex::Real dDKhat_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Khat))/dx[2];

        amrex::Real dupDKhat_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Khat) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real dupDKhat_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Khat) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[1];
        amrex::Real dupDKhat_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Khat) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Khat) - 5.0/6.0*state_fab(i, j, k, Idx::Khat))/dx[2];

        amrex::Real ddnDKhat_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Khat) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Khat) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[0];
        amrex::Real ddnDKhat_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Khat) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Khat) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[1];
        amrex::Real ddnDKhat_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Khat) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Khat) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Khat) + (5.0/6.0)*state_fab(i, j, k, Idx::Khat))/dx[2];

        amrex::Real dDDKhat_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Khat) - 5.0/2.0*state_fab(i, j, k, Idx::Khat))/std::pow(dx[0], 2);
        amrex::Real dDDKhat_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Khat) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Khat) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Khat) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Khat) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Khat) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Khat) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Khat) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Khat) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Khat) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Khat) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Khat) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Khat) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Khat) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Khat) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Khat) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Khat))/(dx[0]*dx[1]);
        amrex::Real dDDKhat_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Khat) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Khat) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Khat) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Khat) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Khat) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Khat) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Khat) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Khat) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Khat) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Khat) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Khat) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Khat) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Khat) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Khat) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Khat) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Khat))/(dx[0]*dx[2]);
        amrex::Real dDDKhat_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Khat) - 5.0/2.0*state_fab(i, j, k, Idx::Khat))/std::pow(dx[1], 2);
        amrex::Real dDDKhat_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Khat) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Khat) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Khat) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Khat) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Khat) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Khat) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Khat) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Khat) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Khat) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Khat) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Khat) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Khat) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Khat) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Khat) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Khat) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Khat))/(dx[1]*dx[2]);
        amrex::Real dDDKhat_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Khat) - 5.0/2.0*state_fab(i, j, k, Idx::Khat))/std::pow(dx[2], 2);

        amrex::Real dKODKhat = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Khat) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Khat) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Khat) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Khat) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Khat) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Khat) - 5.0/16.0*state_fab(i, j, k, Idx::Khat))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Khat) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Khat) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Khat) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Khat) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Khat) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Khat) - 5.0/16.0*state_fab(i, j, k, Idx::Khat))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Khat) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Khat) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Khat) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Khat) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Khat) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Khat) - 5.0/16.0*state_fab(i, j, k, Idx::Khat))/dx[0];

        amrex::Real AdvDbetaKhat = beta_U_0*((beta_U_0<0)*ddnDKhat_L_0 + (beta_U_0>0)*dupDKhat_L_0) + beta_U_1*((beta_U_1<0)*ddnDKhat_L_1 + (beta_U_1>0)*dupDKhat_L_1) + beta_U_2*((beta_U_2<0)*ddnDKhat_L_2 + (beta_U_2>0)*dupDKhat_L_2);

        amrex::Real dDAtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dDAtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dDAtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dDAtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dDAtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dDAtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dDAtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dDAtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dDAtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dDAtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dDAtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dDAtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dDAtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dDAtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dDAtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dDAtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dDAtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dDAtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dupDAtilde_LLL_000 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dupDAtilde_LLL_001 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dupDAtilde_LLL_002 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_00) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dupDAtilde_LLL_010 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dupDAtilde_LLL_011 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dupDAtilde_LLL_012 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_01) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dupDAtilde_LLL_020 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dupDAtilde_LLL_021 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dupDAtilde_LLL_022 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_02) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dupDAtilde_LLL_110 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dupDAtilde_LLL_111 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dupDAtilde_LLL_112 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_11) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dupDAtilde_LLL_120 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dupDAtilde_LLL_121 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dupDAtilde_LLL_122 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_12) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dupDAtilde_LLL_220 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dupDAtilde_LLL_221 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dupDAtilde_LLL_222 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_22) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 5.0/6.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2];

        amrex::Real ddnDAtilde_LLL_000 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real ddnDAtilde_LLL_001 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real ddnDAtilde_LLL_002 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_00) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2];
        amrex::Real ddnDAtilde_LLL_010 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real ddnDAtilde_LLL_011 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real ddnDAtilde_LLL_012 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_01) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2];
        amrex::Real ddnDAtilde_LLL_020 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real ddnDAtilde_LLL_021 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real ddnDAtilde_LLL_022 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_02) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2];
        amrex::Real ddnDAtilde_LLL_110 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real ddnDAtilde_LLL_111 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real ddnDAtilde_LLL_112 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_11) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2];
        amrex::Real ddnDAtilde_LLL_120 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real ddnDAtilde_LLL_121 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real ddnDAtilde_LLL_122 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_12) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2];
        amrex::Real ddnDAtilde_LLL_220 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real ddnDAtilde_LLL_221 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real ddnDAtilde_LLL_222 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Atilde_LL_22) + (5.0/6.0)*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dDDAtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDAtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDAtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Atilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDAtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Atilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDAtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDAtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Atilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Atilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Atilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Atilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Atilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Atilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Atilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDAtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Atilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::Atilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dKODAtilde_LL_00 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_00) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_00) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_00) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_00) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dKODAtilde_LL_01 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_01) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_01) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_01) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_01) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dKODAtilde_LL_02 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_02) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_02) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_02) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_02) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dKODAtilde_LL_11 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_11) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_11) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_11) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_11) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dKODAtilde_LL_12 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_12) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_12) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_12) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_12) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dKODAtilde_LL_22 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Atilde_LL_22) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Atilde_LL_22) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Atilde_LL_22) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Atilde_LL_22) - 5.0/16.0*state_fab(i, j, k, Idx::Atilde_LL_22))/dx[0];

        amrex::Real AdvDbetaAtilde_LL_00 = beta_U_0*((beta_U_0<0)*ddnDAtilde_LLL_000 + (beta_U_0>0)*dupDAtilde_LLL_000) + beta_U_1*((beta_U_1<0)*ddnDAtilde_LLL_001 + (beta_U_1>0)*dupDAtilde_LLL_001) + beta_U_2*((beta_U_2<0)*ddnDAtilde_LLL_002 + (beta_U_2>0)*dupDAtilde_LLL_002);
        amrex::Real AdvDbetaAtilde_LL_01 = beta_U_0*((beta_U_0<0)*ddnDAtilde_LLL_010 + (beta_U_0>0)*dupDAtilde_LLL_010) + beta_U_1*((beta_U_1<0)*ddnDAtilde_LLL_011 + (beta_U_1>0)*dupDAtilde_LLL_011) + beta_U_2*((beta_U_2<0)*ddnDAtilde_LLL_012 + (beta_U_2>0)*dupDAtilde_LLL_012);
        amrex::Real AdvDbetaAtilde_LL_02 = beta_U_0*((beta_U_0<0)*ddnDAtilde_LLL_020 + (beta_U_0>0)*dupDAtilde_LLL_020) + beta_U_1*((beta_U_1<0)*ddnDAtilde_LLL_021 + (beta_U_1>0)*dupDAtilde_LLL_021) + beta_U_2*((beta_U_2<0)*ddnDAtilde_LLL_022 + (beta_U_2>0)*dupDAtilde_LLL_022);
        amrex::Real AdvDbetaAtilde_LL_11 = beta_U_0*((beta_U_0<0)*ddnDAtilde_LLL_110 + (beta_U_0>0)*dupDAtilde_LLL_110) + beta_U_1*((beta_U_1<0)*ddnDAtilde_LLL_111 + (beta_U_1>0)*dupDAtilde_LLL_111) + beta_U_2*((beta_U_2<0)*ddnDAtilde_LLL_112 + (beta_U_2>0)*dupDAtilde_LLL_112);
        amrex::Real AdvDbetaAtilde_LL_12 = beta_U_0*((beta_U_0<0)*ddnDAtilde_LLL_120 + (beta_U_0>0)*dupDAtilde_LLL_120) + beta_U_1*((beta_U_1<0)*ddnDAtilde_LLL_121 + (beta_U_1>0)*dupDAtilde_LLL_121) + beta_U_2*((beta_U_2<0)*ddnDAtilde_LLL_122 + (beta_U_2>0)*dupDAtilde_LLL_122);
        amrex::Real AdvDbetaAtilde_LL_22 = beta_U_0*((beta_U_0<0)*ddnDAtilde_LLL_220 + (beta_U_0>0)*dupDAtilde_LLL_220) + beta_U_1*((beta_U_1<0)*ddnDAtilde_LLL_221 + (beta_U_1>0)*dupDAtilde_LLL_221) + beta_U_2*((beta_U_2<0)*ddnDAtilde_LLL_222 + (beta_U_2>0)*dupDAtilde_LLL_222);

        amrex::Real dDtheta_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dDtheta_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dDtheta_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];

        amrex::Real dupDtheta_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/2.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::theta) - 1.0/4.0*state_fab(i - 1, j, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real dupDtheta_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/2.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::theta) - 1.0/4.0*state_fab(i, j - 1, k, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real dupDtheta_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/2.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::theta) - 1.0/4.0*state_fab(i, j, k - 1, Idx::theta) - 5.0/6.0*state_fab(i, j, k, Idx::theta))/dx[2];

        amrex::Real ddnDtheta_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/2.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 3, j, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[0];
        amrex::Real ddnDtheta_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/2.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 3, k, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[1];
        amrex::Real ddnDtheta_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/2.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 3, Idx::theta) + (5.0/6.0)*state_fab(i, j, k, Idx::theta))/dx[2];

        amrex::Real dDDtheta_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i - 2, j, k, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[0], 2);
        amrex::Real dDDtheta_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::theta) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::theta) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::theta) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::theta) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::theta) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::theta) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::theta) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::theta) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::theta) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::theta) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::theta) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::theta) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::theta) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::theta) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::theta) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::theta))/(dx[0]*dx[1]);
        amrex::Real dDDtheta_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::theta) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::theta) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::theta) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::theta) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::theta) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::theta) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::theta) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::theta) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::theta) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::theta) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::theta) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::theta) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::theta) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::theta) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::theta) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::theta))/(dx[0]*dx[2]);
        amrex::Real dDDtheta_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j - 2, k, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[1], 2);
        amrex::Real dDDtheta_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::theta) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::theta) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::theta) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::theta) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::theta) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::theta) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::theta) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::theta) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::theta) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::theta) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::theta) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::theta) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::theta) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::theta) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::theta) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::theta))/(dx[1]*dx[2]);
        amrex::Real dDDtheta_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k - 2, Idx::theta) - 5.0/2.0*state_fab(i, j, k, Idx::theta))/std::pow(dx[2], 2);

        amrex::Real dKODtheta = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::theta) - 3.0/32.0*state_fab(i, j, k + 2, Idx::theta) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::theta) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::theta) - 3.0/32.0*state_fab(i, j, k - 2, Idx::theta) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::theta) - 3.0/32.0*state_fab(i, j + 2, k, Idx::theta) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::theta) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::theta) - 3.0/32.0*state_fab(i, j - 2, k, Idx::theta) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::theta) - 3.0/32.0*state_fab(i + 2, j, k, Idx::theta) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::theta) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::theta) - 3.0/32.0*state_fab(i - 2, j, k, Idx::theta) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::theta) - 5.0/16.0*state_fab(i, j, k, Idx::theta))/dx[0];

        amrex::Real AdvDbetatheta = beta_U_0*((beta_U_0<0)*ddnDtheta_L_0 + (beta_U_0>0)*dupDtheta_L_0) + beta_U_1*((beta_U_1<0)*ddnDtheta_L_1 + (beta_U_1>0)*dupDtheta_L_1) + beta_U_2*((beta_U_2<0)*ddnDtheta_L_2 + (beta_U_2>0)*dupDtheta_L_2);

        amrex::Real dDGamtilde_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real dDGamtilde_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_0))/dx[1];
        amrex::Real dDGamtilde_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_0))/dx[2];
        amrex::Real dDGamtilde_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real dDGamtilde_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_1))/dx[1];
        amrex::Real dDGamtilde_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_1))/dx[2];
        amrex::Real dDGamtilde_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_2))/dx[0];
        amrex::Real dDGamtilde_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_2))/dx[1];
        amrex::Real dDGamtilde_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_2))/dx[2];

        amrex::Real dupDGamtilde_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real dupDGamtilde_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[1];
        amrex::Real dupDGamtilde_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[2];
        amrex::Real dupDGamtilde_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real dupDGamtilde_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[1];
        amrex::Real dupDGamtilde_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[2];
        amrex::Real dupDGamtilde_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[0];
        amrex::Real dupDGamtilde_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[1];
        amrex::Real dupDGamtilde_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[2];

        amrex::Real ddnDGamtilde_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamtilde_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real ddnDGamtilde_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamtilde_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[1];
        amrex::Real ddnDGamtilde_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamtilde_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[2];
        amrex::Real ddnDGamtilde_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamtilde_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real ddnDGamtilde_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamtilde_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[1];
        amrex::Real ddnDGamtilde_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamtilde_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[2];
        amrex::Real ddnDGamtilde_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Gamtilde_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[0];
        amrex::Real ddnDGamtilde_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Gamtilde_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[1];
        amrex::Real ddnDGamtilde_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Gamtilde_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[2];

        amrex::Real dDDGamtilde_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDGamtilde_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamtilde_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamtilde_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDGamtilde_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamtilde_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamtilde_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDGamtilde_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDGamtilde_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamtilde_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamtilde_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamtilde_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamtilde_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamtilde_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamtilde_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamtilde_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDGamtilde_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDGamtilde_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDGamtilde_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamtilde_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamtilde_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDGamtilde_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamtilde_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamtilde_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDGamtilde_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDGamtilde_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamtilde_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamtilde_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamtilde_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamtilde_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamtilde_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamtilde_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamtilde_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDGamtilde_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDGamtilde_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDGamtilde_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Gamtilde_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Gamtilde_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDGamtilde_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Gamtilde_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Gamtilde_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDGamtilde_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDGamtilde_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Gamtilde_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Gamtilde_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Gamtilde_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Gamtilde_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Gamtilde_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Gamtilde_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Gamtilde_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDGamtilde_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODGamtilde_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamtilde_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamtilde_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamtilde_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_0))/dx[0];
        amrex::Real dKODGamtilde_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamtilde_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamtilde_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamtilde_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_1))/dx[0];
        amrex::Real dKODGamtilde_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Gamtilde_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Gamtilde_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Gamtilde_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Gamtilde_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Gamtilde_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Gamtilde_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Gamtilde_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Gamtilde_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::Gamtilde_U_2))/dx[0];

        amrex::Real AdvDbetaGamtilde_U_0 = beta_U_0*((beta_U_0<0)*ddnDGamtilde_UL_00 + (beta_U_0>0)*dupDGamtilde_UL_00) + beta_U_1*((beta_U_1<0)*ddnDGamtilde_UL_01 + (beta_U_1>0)*dupDGamtilde_UL_01) + beta_U_2*((beta_U_2<0)*ddnDGamtilde_UL_02 + (beta_U_2>0)*dupDGamtilde_UL_02);
        amrex::Real AdvDbetaGamtilde_U_1 = beta_U_0*((beta_U_0<0)*ddnDGamtilde_UL_10 + (beta_U_0>0)*dupDGamtilde_UL_10) + beta_U_1*((beta_U_1<0)*ddnDGamtilde_UL_11 + (beta_U_1>0)*dupDGamtilde_UL_11) + beta_U_2*((beta_U_2<0)*ddnDGamtilde_UL_12 + (beta_U_2>0)*dupDGamtilde_UL_12);
        amrex::Real AdvDbetaGamtilde_U_2 = beta_U_0*((beta_U_0<0)*ddnDGamtilde_UL_20 + (beta_U_0>0)*dupDGamtilde_UL_20) + beta_U_1*((beta_U_1<0)*ddnDGamtilde_UL_21 + (beta_U_1>0)*dupDGamtilde_UL_21) + beta_U_2*((beta_U_2<0)*ddnDGamtilde_UL_22 + (beta_U_2>0)*dupDGamtilde_UL_22);

        amrex::Real dDalpha_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) - 2.0/3.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::alpha))/dx[0];
        amrex::Real dDalpha_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) - 2.0/3.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::alpha))/dx[1];
        amrex::Real dDalpha_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) - 2.0/3.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::alpha))/dx[2];

        amrex::Real dupDalpha_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/2.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::alpha) - 1.0/4.0*state_fab(i - 1, j, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real dupDalpha_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/2.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::alpha) - 1.0/4.0*state_fab(i, j - 1, k, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real dupDalpha_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/2.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::alpha) - 1.0/4.0*state_fab(i, j, k - 1, Idx::alpha) - 5.0/6.0*state_fab(i, j, k, Idx::alpha))/dx[2];

        amrex::Real ddnDalpha_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/2.0*state_fab(i - 1, j, k, Idx::alpha) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 3, j, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[0];
        amrex::Real ddnDalpha_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/2.0*state_fab(i, j - 1, k, Idx::alpha) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 3, k, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[1];
        amrex::Real ddnDalpha_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/2.0*state_fab(i, j, k - 1, Idx::alpha) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 3, Idx::alpha) + (5.0/6.0)*state_fab(i, j, k, Idx::alpha))/dx[2];

        amrex::Real dDDalpha_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i + 2, j, k, Idx::alpha) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::alpha) - 1.0/12.0*state_fab(i - 2, j, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[0], 2);
        amrex::Real dDDalpha_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::alpha))/(dx[0]*dx[1]);
        amrex::Real dDDalpha_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::alpha))/(dx[0]*dx[2]);
        amrex::Real dDDalpha_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j + 2, k, Idx::alpha) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::alpha) - 1.0/12.0*state_fab(i, j - 2, k, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[1], 2);
        amrex::Real dDDalpha_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::alpha) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::alpha) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::alpha) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::alpha) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::alpha) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::alpha) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::alpha) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::alpha) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::alpha) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::alpha) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::alpha) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::alpha))/(dx[1]*dx[2]);
        amrex::Real dDDalpha_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k + 2, Idx::alpha) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::alpha) - 1.0/12.0*state_fab(i, j, k - 2, Idx::alpha) - 5.0/2.0*state_fab(i, j, k, Idx::alpha))/std::pow(dx[2], 2);

        amrex::Real dKODalpha = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::alpha) - 3.0/32.0*state_fab(i, j, k + 2, Idx::alpha) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::alpha) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::alpha) - 3.0/32.0*state_fab(i, j, k - 2, Idx::alpha) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::alpha) - 3.0/32.0*state_fab(i, j + 2, k, Idx::alpha) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::alpha) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::alpha) - 3.0/32.0*state_fab(i, j - 2, k, Idx::alpha) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::alpha) - 3.0/32.0*state_fab(i + 2, j, k, Idx::alpha) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::alpha) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::alpha) - 3.0/32.0*state_fab(i - 2, j, k, Idx::alpha) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::alpha) - 5.0/16.0*state_fab(i, j, k, Idx::alpha))/dx[0];

        amrex::Real AdvDbetaalpha = beta_U_0*((beta_U_0<0)*ddnDalpha_L_0 + (beta_U_0>0)*dupDalpha_L_0) + beta_U_1*((beta_U_1<0)*ddnDalpha_L_1 + (beta_U_1>0)*dupDalpha_L_1) + beta_U_2*((beta_U_2<0)*ddnDalpha_L_2 + (beta_U_2>0)*dupDalpha_L_2);

        amrex::Real dDbeta_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dDbeta_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_0))/dx[1];
        amrex::Real dDbeta_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_0))/dx[2];
        amrex::Real dDbeta_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dDbeta_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_1))/dx[1];
        amrex::Real dDbeta_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_1))/dx[2];
        amrex::Real dDbeta_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real dDbeta_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::beta_U_2))/dx[1];
        amrex::Real dDbeta_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::beta_U_2))/dx[2];

        amrex::Real dupDbeta_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dupDbeta_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[1];
        amrex::Real dupDbeta_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_0))/dx[2];
        amrex::Real dupDbeta_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dupDbeta_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[1];
        amrex::Real dupDbeta_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_1))/dx[2];
        amrex::Real dupDbeta_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::beta_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real dupDbeta_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::beta_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[1];
        amrex::Real dupDbeta_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::beta_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::beta_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::beta_U_2))/dx[2];

        amrex::Real ddnDbeta_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real ddnDbeta_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[1];
        amrex::Real ddnDbeta_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_0))/dx[2];
        amrex::Real ddnDbeta_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real ddnDbeta_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[1];
        amrex::Real ddnDbeta_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_1))/dx[2];
        amrex::Real ddnDbeta_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::beta_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[0];
        amrex::Real ddnDbeta_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::beta_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[1];
        amrex::Real ddnDbeta_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::beta_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::beta_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::beta_U_2))/dx[2];

        amrex::Real dDDbeta_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDbeta_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDbeta_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDbeta_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::beta_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::beta_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::beta_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::beta_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::beta_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::beta_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::beta_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::beta_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDbeta_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::beta_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::beta_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDbeta_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDbeta_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::beta_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::beta_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::beta_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::beta_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::beta_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::beta_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::beta_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDbeta_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::beta_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::beta_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::beta_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODbeta_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_0))/dx[0];
        amrex::Real dKODbeta_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_1))/dx[0];
        amrex::Real dKODbeta_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::beta_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::beta_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::beta_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::beta_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::beta_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::beta_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::beta_U_2))/dx[0];

        amrex::Real AdvDbetabeta_U_0 = beta_U_0*((beta_U_0<0)*ddnDbeta_UL_00 + (beta_U_0>0)*dupDbeta_UL_00) + beta_U_1*((beta_U_1<0)*ddnDbeta_UL_01 + (beta_U_1>0)*dupDbeta_UL_01) + beta_U_2*((beta_U_2<0)*ddnDbeta_UL_02 + (beta_U_2>0)*dupDbeta_UL_02);
        amrex::Real AdvDbetabeta_U_1 = beta_U_0*((beta_U_0<0)*ddnDbeta_UL_10 + (beta_U_0>0)*dupDbeta_UL_10) + beta_U_1*((beta_U_1<0)*ddnDbeta_UL_11 + (beta_U_1>0)*dupDbeta_UL_11) + beta_U_2*((beta_U_2<0)*ddnDbeta_UL_12 + (beta_U_2>0)*dupDbeta_UL_12);
        amrex::Real AdvDbetabeta_U_2 = beta_U_0*((beta_U_0<0)*ddnDbeta_UL_20 + (beta_U_0>0)*dupDbeta_UL_20) + beta_U_1*((beta_U_1<0)*ddnDbeta_UL_21 + (beta_U_1>0)*dupDbeta_UL_21) + beta_U_2*((beta_U_2<0)*ddnDbeta_UL_22 + (beta_U_2>0)*dupDbeta_UL_22);

        amrex::Real dDE_UL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::E_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::E_U_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::E_U_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::E_U_0))/dx[0];
        amrex::Real dDE_UL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::E_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::E_U_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::E_U_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::E_U_0))/dx[1];
        amrex::Real dDE_UL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::E_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::E_U_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::E_U_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::E_U_0))/dx[2];
        amrex::Real dDE_UL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::E_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::E_U_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::E_U_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::E_U_1))/dx[0];
        amrex::Real dDE_UL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::E_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::E_U_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::E_U_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::E_U_1))/dx[1];
        amrex::Real dDE_UL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::E_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::E_U_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::E_U_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::E_U_1))/dx[2];
        amrex::Real dDE_UL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::E_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::E_U_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::E_U_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::E_U_2))/dx[0];
        amrex::Real dDE_UL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::E_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::E_U_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::E_U_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::E_U_2))/dx[1];
        amrex::Real dDE_UL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::E_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::E_U_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::E_U_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::E_U_2))/dx[2];

        amrex::Real dupDE_UL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::E_U_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::E_U_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::E_U_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::E_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_0))/dx[0];
        amrex::Real dupDE_UL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::E_U_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::E_U_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::E_U_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::E_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_0))/dx[1];
        amrex::Real dupDE_UL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::E_U_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::E_U_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::E_U_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::E_U_0) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_0))/dx[2];
        amrex::Real dupDE_UL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::E_U_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::E_U_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::E_U_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::E_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_1))/dx[0];
        amrex::Real dupDE_UL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::E_U_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::E_U_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::E_U_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::E_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_1))/dx[1];
        amrex::Real dupDE_UL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::E_U_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::E_U_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::E_U_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::E_U_1) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_1))/dx[2];
        amrex::Real dupDE_UL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::E_U_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::E_U_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::E_U_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::E_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_2))/dx[0];
        amrex::Real dupDE_UL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::E_U_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::E_U_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::E_U_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::E_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_2))/dx[1];
        amrex::Real dupDE_UL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::E_U_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::E_U_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::E_U_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::E_U_2) - 5.0/6.0*state_fab(i, j, k, Idx::E_U_2))/dx[2];

        amrex::Real ddnDE_UL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::E_U_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::E_U_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::E_U_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::E_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_0))/dx[0];
        amrex::Real ddnDE_UL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::E_U_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::E_U_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::E_U_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::E_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_0))/dx[1];
        amrex::Real ddnDE_UL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::E_U_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::E_U_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::E_U_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::E_U_0) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_0))/dx[2];
        amrex::Real ddnDE_UL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::E_U_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::E_U_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::E_U_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::E_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_1))/dx[0];
        amrex::Real ddnDE_UL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::E_U_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::E_U_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::E_U_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::E_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_1))/dx[1];
        amrex::Real ddnDE_UL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::E_U_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::E_U_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::E_U_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::E_U_1) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_1))/dx[2];
        amrex::Real ddnDE_UL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::E_U_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::E_U_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::E_U_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::E_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_2))/dx[0];
        amrex::Real ddnDE_UL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::E_U_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::E_U_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::E_U_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::E_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_2))/dx[1];
        amrex::Real ddnDE_UL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::E_U_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::E_U_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::E_U_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::E_U_2) + (5.0/6.0)*state_fab(i, j, k, Idx::E_U_2))/dx[2];

        amrex::Real dDDE_ULL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::E_U_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::E_U_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::E_U_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::E_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_0))/std::pow(dx[0], 2);
        amrex::Real dDDE_ULL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::E_U_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::E_U_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::E_U_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::E_U_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::E_U_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::E_U_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::E_U_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::E_U_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::E_U_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::E_U_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::E_U_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::E_U_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::E_U_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::E_U_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::E_U_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::E_U_0))/(dx[0]*dx[1]);
        amrex::Real dDDE_ULL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::E_U_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::E_U_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::E_U_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::E_U_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::E_U_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::E_U_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::E_U_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::E_U_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::E_U_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::E_U_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::E_U_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::E_U_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::E_U_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::E_U_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::E_U_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::E_U_0))/(dx[0]*dx[2]);
        amrex::Real dDDE_ULL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::E_U_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::E_U_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::E_U_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::E_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_0))/std::pow(dx[1], 2);
        amrex::Real dDDE_ULL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::E_U_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::E_U_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::E_U_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::E_U_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::E_U_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::E_U_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::E_U_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::E_U_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::E_U_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::E_U_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::E_U_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::E_U_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::E_U_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::E_U_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::E_U_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::E_U_0))/(dx[1]*dx[2]);
        amrex::Real dDDE_ULL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::E_U_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::E_U_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::E_U_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::E_U_0) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_0))/std::pow(dx[2], 2);
        amrex::Real dDDE_ULL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::E_U_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::E_U_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::E_U_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::E_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_1))/std::pow(dx[0], 2);
        amrex::Real dDDE_ULL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::E_U_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::E_U_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::E_U_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::E_U_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::E_U_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::E_U_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::E_U_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::E_U_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::E_U_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::E_U_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::E_U_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::E_U_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::E_U_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::E_U_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::E_U_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::E_U_1))/(dx[0]*dx[1]);
        amrex::Real dDDE_ULL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::E_U_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::E_U_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::E_U_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::E_U_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::E_U_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::E_U_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::E_U_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::E_U_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::E_U_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::E_U_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::E_U_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::E_U_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::E_U_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::E_U_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::E_U_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::E_U_1))/(dx[0]*dx[2]);
        amrex::Real dDDE_ULL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::E_U_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::E_U_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::E_U_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::E_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_1))/std::pow(dx[1], 2);
        amrex::Real dDDE_ULL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::E_U_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::E_U_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::E_U_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::E_U_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::E_U_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::E_U_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::E_U_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::E_U_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::E_U_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::E_U_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::E_U_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::E_U_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::E_U_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::E_U_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::E_U_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::E_U_1))/(dx[1]*dx[2]);
        amrex::Real dDDE_ULL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::E_U_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::E_U_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::E_U_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::E_U_1) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_1))/std::pow(dx[2], 2);
        amrex::Real dDDE_ULL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::E_U_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::E_U_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::E_U_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::E_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_2))/std::pow(dx[0], 2);
        amrex::Real dDDE_ULL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::E_U_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::E_U_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::E_U_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::E_U_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::E_U_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::E_U_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::E_U_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::E_U_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::E_U_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::E_U_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::E_U_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::E_U_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::E_U_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::E_U_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::E_U_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::E_U_2))/(dx[0]*dx[1]);
        amrex::Real dDDE_ULL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::E_U_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::E_U_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::E_U_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::E_U_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::E_U_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::E_U_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::E_U_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::E_U_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::E_U_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::E_U_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::E_U_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::E_U_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::E_U_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::E_U_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::E_U_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::E_U_2))/(dx[0]*dx[2]);
        amrex::Real dDDE_ULL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::E_U_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::E_U_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::E_U_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::E_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_2))/std::pow(dx[1], 2);
        amrex::Real dDDE_ULL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::E_U_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::E_U_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::E_U_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::E_U_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::E_U_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::E_U_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::E_U_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::E_U_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::E_U_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::E_U_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::E_U_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::E_U_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::E_U_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::E_U_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::E_U_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::E_U_2))/(dx[1]*dx[2]);
        amrex::Real dDDE_ULL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::E_U_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::E_U_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::E_U_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::E_U_2) - 5.0/2.0*state_fab(i, j, k, Idx::E_U_2))/std::pow(dx[2], 2);

        amrex::Real dKODE_U_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::E_U_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::E_U_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::E_U_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::E_U_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::E_U_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::E_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::E_U_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::E_U_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::E_U_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::E_U_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::E_U_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::E_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::E_U_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::E_U_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::E_U_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::E_U_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::E_U_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::E_U_0) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_0))/dx[0];
        amrex::Real dKODE_U_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::E_U_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::E_U_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::E_U_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::E_U_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::E_U_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::E_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::E_U_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::E_U_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::E_U_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::E_U_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::E_U_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::E_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::E_U_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::E_U_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::E_U_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::E_U_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::E_U_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::E_U_1) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_1))/dx[0];
        amrex::Real dKODE_U_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::E_U_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::E_U_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::E_U_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::E_U_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::E_U_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::E_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::E_U_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::E_U_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::E_U_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::E_U_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::E_U_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::E_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::E_U_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::E_U_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::E_U_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::E_U_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::E_U_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::E_U_2) - 5.0/16.0*state_fab(i, j, k, Idx::E_U_2))/dx[0];

        amrex::Real AdvDbetaE_U_0 = beta_U_0*((beta_U_0<0)*ddnDE_UL_00 + (beta_U_0>0)*dupDE_UL_00) + beta_U_1*((beta_U_1<0)*ddnDE_UL_01 + (beta_U_1>0)*dupDE_UL_01) + beta_U_2*((beta_U_2<0)*ddnDE_UL_02 + (beta_U_2>0)*dupDE_UL_02);
        amrex::Real AdvDbetaE_U_1 = beta_U_0*((beta_U_0<0)*ddnDE_UL_10 + (beta_U_0>0)*dupDE_UL_10) + beta_U_1*((beta_U_1<0)*ddnDE_UL_11 + (beta_U_1>0)*dupDE_UL_11) + beta_U_2*((beta_U_2<0)*ddnDE_UL_12 + (beta_U_2>0)*dupDE_UL_12);
        amrex::Real AdvDbetaE_U_2 = beta_U_0*((beta_U_0<0)*ddnDE_UL_20 + (beta_U_0>0)*dupDE_UL_20) + beta_U_1*((beta_U_1<0)*ddnDE_UL_21 + (beta_U_1>0)*dupDE_UL_21) + beta_U_2*((beta_U_2<0)*ddnDE_UL_22 + (beta_U_2>0)*dupDE_UL_22);

        amrex::Real dDA_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::A) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A) - 2.0/3.0*state_fab(i - 1, j, k, Idx::A) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::A))/dx[0];
        amrex::Real dDA_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::A) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A) - 2.0/3.0*state_fab(i, j - 1, k, Idx::A) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::A))/dx[1];
        amrex::Real dDA_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::A) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A) - 2.0/3.0*state_fab(i, j, k - 1, Idx::A) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::A))/dx[2];

        amrex::Real dupDA_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::A) - 1.0/2.0*state_fab(i + 2, j, k, Idx::A) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::A) - 1.0/4.0*state_fab(i - 1, j, k, Idx::A) - 5.0/6.0*state_fab(i, j, k, Idx::A))/dx[0];
        amrex::Real dupDA_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::A) - 1.0/2.0*state_fab(i, j + 2, k, Idx::A) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::A) - 1.0/4.0*state_fab(i, j - 1, k, Idx::A) - 5.0/6.0*state_fab(i, j, k, Idx::A))/dx[1];
        amrex::Real dupDA_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::A) - 1.0/2.0*state_fab(i, j, k + 2, Idx::A) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::A) - 1.0/4.0*state_fab(i, j, k - 1, Idx::A) - 5.0/6.0*state_fab(i, j, k, Idx::A))/dx[2];

        amrex::Real ddnDA_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::A) - 3.0/2.0*state_fab(i - 1, j, k, Idx::A) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::A) - 1.0/12.0*state_fab(i - 3, j, k, Idx::A) + (5.0/6.0)*state_fab(i, j, k, Idx::A))/dx[0];
        amrex::Real ddnDA_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::A) - 3.0/2.0*state_fab(i, j - 1, k, Idx::A) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::A) - 1.0/12.0*state_fab(i, j - 3, k, Idx::A) + (5.0/6.0)*state_fab(i, j, k, Idx::A))/dx[1];
        amrex::Real ddnDA_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::A) - 3.0/2.0*state_fab(i, j, k - 1, Idx::A) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::A) - 1.0/12.0*state_fab(i, j, k - 3, Idx::A) + (5.0/6.0)*state_fab(i, j, k, Idx::A))/dx[2];

        amrex::Real dDDA_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::A) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::A) - 1.0/12.0*state_fab(i - 2, j, k, Idx::A) - 5.0/2.0*state_fab(i, j, k, Idx::A))/std::pow(dx[0], 2);
        amrex::Real dDDA_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::A) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::A) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::A) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::A) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::A) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::A) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::A) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::A) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::A) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::A) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::A) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::A) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::A) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::A) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::A) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::A))/(dx[0]*dx[1]);
        amrex::Real dDDA_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::A) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::A) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::A) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::A) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::A) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::A) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::A) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::A) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::A) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::A) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::A) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::A) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::A) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::A) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::A) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::A))/(dx[0]*dx[2]);
        amrex::Real dDDA_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::A) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::A) - 1.0/12.0*state_fab(i, j - 2, k, Idx::A) - 5.0/2.0*state_fab(i, j, k, Idx::A))/std::pow(dx[1], 2);
        amrex::Real dDDA_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::A) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::A) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::A) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::A) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::A) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::A) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::A) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::A) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::A) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::A) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::A) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::A) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::A) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::A) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::A) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::A))/(dx[1]*dx[2]);
        amrex::Real dDDA_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::A) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::A) - 1.0/12.0*state_fab(i, j, k - 2, Idx::A) - 5.0/2.0*state_fab(i, j, k, Idx::A))/std::pow(dx[2], 2);

        amrex::Real dKODA = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::A) - 3.0/32.0*state_fab(i, j, k + 2, Idx::A) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::A) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::A) - 3.0/32.0*state_fab(i, j, k - 2, Idx::A) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::A) - 5.0/16.0*state_fab(i, j, k, Idx::A))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::A) - 3.0/32.0*state_fab(i, j + 2, k, Idx::A) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::A) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::A) - 3.0/32.0*state_fab(i, j - 2, k, Idx::A) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::A) - 5.0/16.0*state_fab(i, j, k, Idx::A))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::A) - 3.0/32.0*state_fab(i + 2, j, k, Idx::A) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::A) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::A) - 3.0/32.0*state_fab(i - 2, j, k, Idx::A) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::A) - 5.0/16.0*state_fab(i, j, k, Idx::A))/dx[0];

        amrex::Real AdvDbetaA = beta_U_0*((beta_U_0<0)*ddnDA_L_0 + (beta_U_0>0)*dupDA_L_0) + beta_U_1*((beta_U_1<0)*ddnDA_L_1 + (beta_U_1>0)*dupDA_L_1) + beta_U_2*((beta_U_2<0)*ddnDA_L_2 + (beta_U_2>0)*dupDA_L_2);

        amrex::Real dDA_LL_00 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::A_L_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A_L_0) - 2.0/3.0*state_fab(i - 1, j, k, Idx::A_L_0) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::A_L_0))/dx[0];
        amrex::Real dDA_LL_01 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::A_L_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A_L_0) - 2.0/3.0*state_fab(i, j - 1, k, Idx::A_L_0) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::A_L_0))/dx[1];
        amrex::Real dDA_LL_02 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::A_L_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A_L_0) - 2.0/3.0*state_fab(i, j, k - 1, Idx::A_L_0) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::A_L_0))/dx[2];
        amrex::Real dDA_LL_10 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::A_L_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A_L_1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::A_L_1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::A_L_1))/dx[0];
        amrex::Real dDA_LL_11 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::A_L_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A_L_1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::A_L_1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::A_L_1))/dx[1];
        amrex::Real dDA_LL_12 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::A_L_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A_L_1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::A_L_1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::A_L_1))/dx[2];
        amrex::Real dDA_LL_20 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::A_L_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A_L_2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::A_L_2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::A_L_2))/dx[0];
        amrex::Real dDA_LL_21 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::A_L_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A_L_2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::A_L_2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::A_L_2))/dx[1];
        amrex::Real dDA_LL_22 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::A_L_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A_L_2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::A_L_2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::A_L_2))/dx[2];

        amrex::Real dupDA_LL_00 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::A_L_0) - 1.0/2.0*state_fab(i + 2, j, k, Idx::A_L_0) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::A_L_0) - 1.0/4.0*state_fab(i - 1, j, k, Idx::A_L_0) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_0))/dx[0];
        amrex::Real dupDA_LL_01 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::A_L_0) - 1.0/2.0*state_fab(i, j + 2, k, Idx::A_L_0) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::A_L_0) - 1.0/4.0*state_fab(i, j - 1, k, Idx::A_L_0) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_0))/dx[1];
        amrex::Real dupDA_LL_02 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::A_L_0) - 1.0/2.0*state_fab(i, j, k + 2, Idx::A_L_0) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::A_L_0) - 1.0/4.0*state_fab(i, j, k - 1, Idx::A_L_0) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_0))/dx[2];
        amrex::Real dupDA_LL_10 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::A_L_1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::A_L_1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::A_L_1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::A_L_1) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_1))/dx[0];
        amrex::Real dupDA_LL_11 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::A_L_1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::A_L_1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::A_L_1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::A_L_1) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_1))/dx[1];
        amrex::Real dupDA_LL_12 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::A_L_1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::A_L_1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::A_L_1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::A_L_1) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_1))/dx[2];
        amrex::Real dupDA_LL_20 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::A_L_2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::A_L_2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::A_L_2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::A_L_2) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_2))/dx[0];
        amrex::Real dupDA_LL_21 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::A_L_2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::A_L_2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::A_L_2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::A_L_2) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_2))/dx[1];
        amrex::Real dupDA_LL_22 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::A_L_2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::A_L_2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::A_L_2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::A_L_2) - 5.0/6.0*state_fab(i, j, k, Idx::A_L_2))/dx[2];

        amrex::Real ddnDA_LL_00 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::A_L_0) - 3.0/2.0*state_fab(i - 1, j, k, Idx::A_L_0) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::A_L_0) - 1.0/12.0*state_fab(i - 3, j, k, Idx::A_L_0) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_0))/dx[0];
        amrex::Real ddnDA_LL_01 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::A_L_0) - 3.0/2.0*state_fab(i, j - 1, k, Idx::A_L_0) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::A_L_0) - 1.0/12.0*state_fab(i, j - 3, k, Idx::A_L_0) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_0))/dx[1];
        amrex::Real ddnDA_LL_02 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::A_L_0) - 3.0/2.0*state_fab(i, j, k - 1, Idx::A_L_0) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::A_L_0) - 1.0/12.0*state_fab(i, j, k - 3, Idx::A_L_0) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_0))/dx[2];
        amrex::Real ddnDA_LL_10 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::A_L_1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::A_L_1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::A_L_1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::A_L_1) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_1))/dx[0];
        amrex::Real ddnDA_LL_11 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::A_L_1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::A_L_1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::A_L_1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::A_L_1) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_1))/dx[1];
        amrex::Real ddnDA_LL_12 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::A_L_1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::A_L_1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::A_L_1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::A_L_1) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_1))/dx[2];
        amrex::Real ddnDA_LL_20 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::A_L_2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::A_L_2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::A_L_2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::A_L_2) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_2))/dx[0];
        amrex::Real ddnDA_LL_21 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::A_L_2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::A_L_2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::A_L_2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::A_L_2) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_2))/dx[1];
        amrex::Real ddnDA_LL_22 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::A_L_2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::A_L_2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::A_L_2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::A_L_2) + (5.0/6.0)*state_fab(i, j, k, Idx::A_L_2))/dx[2];

        amrex::Real dDDA_LLL_000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::A_L_0) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A_L_0) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::A_L_0) - 1.0/12.0*state_fab(i - 2, j, k, Idx::A_L_0) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_0))/std::pow(dx[0], 2);
        amrex::Real dDDA_LLL_001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::A_L_0) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::A_L_0) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::A_L_0) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::A_L_0) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::A_L_0) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::A_L_0) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::A_L_0) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::A_L_0) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::A_L_0) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::A_L_0) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::A_L_0) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::A_L_0) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::A_L_0) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::A_L_0) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::A_L_0) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::A_L_0))/(dx[0]*dx[1]);
        amrex::Real dDDA_LLL_002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::A_L_0) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::A_L_0) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::A_L_0) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::A_L_0) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::A_L_0) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::A_L_0) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::A_L_0) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::A_L_0) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::A_L_0) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::A_L_0) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::A_L_0) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::A_L_0) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::A_L_0) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::A_L_0) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::A_L_0) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::A_L_0))/(dx[0]*dx[2]);
        amrex::Real dDDA_LLL_011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::A_L_0) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A_L_0) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::A_L_0) - 1.0/12.0*state_fab(i, j - 2, k, Idx::A_L_0) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_0))/std::pow(dx[1], 2);
        amrex::Real dDDA_LLL_012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::A_L_0) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::A_L_0) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::A_L_0) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::A_L_0) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::A_L_0) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::A_L_0) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::A_L_0) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::A_L_0) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::A_L_0) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::A_L_0) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::A_L_0) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::A_L_0) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::A_L_0) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::A_L_0) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::A_L_0) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::A_L_0))/(dx[1]*dx[2]);
        amrex::Real dDDA_LLL_022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::A_L_0) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A_L_0) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::A_L_0) - 1.0/12.0*state_fab(i, j, k - 2, Idx::A_L_0) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_0))/std::pow(dx[2], 2);
        amrex::Real dDDA_LLL_100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::A_L_1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A_L_1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::A_L_1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::A_L_1) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_1))/std::pow(dx[0], 2);
        amrex::Real dDDA_LLL_101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::A_L_1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::A_L_1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::A_L_1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::A_L_1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::A_L_1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::A_L_1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::A_L_1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::A_L_1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::A_L_1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::A_L_1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::A_L_1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::A_L_1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::A_L_1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::A_L_1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::A_L_1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::A_L_1))/(dx[0]*dx[1]);
        amrex::Real dDDA_LLL_102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::A_L_1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::A_L_1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::A_L_1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::A_L_1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::A_L_1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::A_L_1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::A_L_1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::A_L_1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::A_L_1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::A_L_1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::A_L_1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::A_L_1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::A_L_1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::A_L_1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::A_L_1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::A_L_1))/(dx[0]*dx[2]);
        amrex::Real dDDA_LLL_111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::A_L_1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A_L_1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::A_L_1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::A_L_1) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_1))/std::pow(dx[1], 2);
        amrex::Real dDDA_LLL_112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::A_L_1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::A_L_1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::A_L_1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::A_L_1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::A_L_1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::A_L_1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::A_L_1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::A_L_1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::A_L_1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::A_L_1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::A_L_1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::A_L_1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::A_L_1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::A_L_1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::A_L_1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::A_L_1))/(dx[1]*dx[2]);
        amrex::Real dDDA_LLL_122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::A_L_1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A_L_1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::A_L_1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::A_L_1) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_1))/std::pow(dx[2], 2);
        amrex::Real dDDA_LLL_200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::A_L_2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::A_L_2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::A_L_2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::A_L_2) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_2))/std::pow(dx[0], 2);
        amrex::Real dDDA_LLL_201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::A_L_2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::A_L_2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::A_L_2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::A_L_2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::A_L_2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::A_L_2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::A_L_2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::A_L_2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::A_L_2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::A_L_2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::A_L_2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::A_L_2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::A_L_2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::A_L_2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::A_L_2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::A_L_2))/(dx[0]*dx[1]);
        amrex::Real dDDA_LLL_202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::A_L_2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::A_L_2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::A_L_2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::A_L_2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::A_L_2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::A_L_2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::A_L_2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::A_L_2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::A_L_2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::A_L_2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::A_L_2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::A_L_2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::A_L_2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::A_L_2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::A_L_2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::A_L_2))/(dx[0]*dx[2]);
        amrex::Real dDDA_LLL_211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::A_L_2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::A_L_2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::A_L_2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::A_L_2) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_2))/std::pow(dx[1], 2);
        amrex::Real dDDA_LLL_212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::A_L_2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::A_L_2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::A_L_2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::A_L_2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::A_L_2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::A_L_2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::A_L_2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::A_L_2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::A_L_2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::A_L_2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::A_L_2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::A_L_2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::A_L_2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::A_L_2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::A_L_2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::A_L_2))/(dx[1]*dx[2]);
        amrex::Real dDDA_LLL_222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::A_L_2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::A_L_2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::A_L_2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::A_L_2) - 5.0/2.0*state_fab(i, j, k, Idx::A_L_2))/std::pow(dx[2], 2);

        amrex::Real dKODA_L_0 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::A_L_0) - 3.0/32.0*state_fab(i, j, k + 2, Idx::A_L_0) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::A_L_0) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::A_L_0) - 3.0/32.0*state_fab(i, j, k - 2, Idx::A_L_0) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::A_L_0) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_0))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::A_L_0) - 3.0/32.0*state_fab(i, j + 2, k, Idx::A_L_0) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::A_L_0) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::A_L_0) - 3.0/32.0*state_fab(i, j - 2, k, Idx::A_L_0) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::A_L_0) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_0))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::A_L_0) - 3.0/32.0*state_fab(i + 2, j, k, Idx::A_L_0) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::A_L_0) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::A_L_0) - 3.0/32.0*state_fab(i - 2, j, k, Idx::A_L_0) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::A_L_0) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_0))/dx[0];
        amrex::Real dKODA_L_1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::A_L_1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::A_L_1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::A_L_1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::A_L_1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::A_L_1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::A_L_1) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::A_L_1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::A_L_1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::A_L_1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::A_L_1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::A_L_1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::A_L_1) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::A_L_1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::A_L_1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::A_L_1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::A_L_1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::A_L_1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::A_L_1) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_1))/dx[0];
        amrex::Real dKODA_L_2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::A_L_2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::A_L_2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::A_L_2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::A_L_2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::A_L_2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::A_L_2) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::A_L_2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::A_L_2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::A_L_2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::A_L_2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::A_L_2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::A_L_2) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::A_L_2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::A_L_2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::A_L_2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::A_L_2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::A_L_2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::A_L_2) - 5.0/16.0*state_fab(i, j, k, Idx::A_L_2))/dx[0];

        amrex::Real AdvDbetaA_L_0 = beta_U_0*((beta_U_0<0)*ddnDA_LL_00 + (beta_U_0>0)*dupDA_LL_00) + beta_U_1*((beta_U_1<0)*ddnDA_LL_01 + (beta_U_1>0)*dupDA_LL_01) + beta_U_2*((beta_U_2<0)*ddnDA_LL_02 + (beta_U_2>0)*dupDA_LL_02);
        amrex::Real AdvDbetaA_L_1 = beta_U_0*((beta_U_0<0)*ddnDA_LL_10 + (beta_U_0>0)*dupDA_LL_10) + beta_U_1*((beta_U_1<0)*ddnDA_LL_11 + (beta_U_1>0)*dupDA_LL_11) + beta_U_2*((beta_U_2<0)*ddnDA_LL_12 + (beta_U_2>0)*dupDA_LL_12);
        amrex::Real AdvDbetaA_L_2 = beta_U_0*((beta_U_0<0)*ddnDA_LL_20 + (beta_U_0>0)*dupDA_LL_20) + beta_U_1*((beta_U_1<0)*ddnDA_LL_21 + (beta_U_1>0)*dupDA_LL_21) + beta_U_2*((beta_U_2<0)*ddnDA_LL_22 + (beta_U_2>0)*dupDA_LL_22);

        amrex::Real dDZ_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Z) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Z) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Z) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Z))/dx[0];
        amrex::Real dDZ_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Z) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Z) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Z) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Z))/dx[1];
        amrex::Real dDZ_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Z) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Z) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Z) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Z))/dx[2];

        amrex::Real dupDZ_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Z) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Z) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Z) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Z) - 5.0/6.0*state_fab(i, j, k, Idx::Z))/dx[0];
        amrex::Real dupDZ_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Z) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Z) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Z) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Z) - 5.0/6.0*state_fab(i, j, k, Idx::Z))/dx[1];
        amrex::Real dupDZ_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Z) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Z) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Z) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Z) - 5.0/6.0*state_fab(i, j, k, Idx::Z))/dx[2];

        amrex::Real ddnDZ_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Z) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Z) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Z) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Z) + (5.0/6.0)*state_fab(i, j, k, Idx::Z))/dx[0];
        amrex::Real ddnDZ_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Z) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Z) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Z) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Z) + (5.0/6.0)*state_fab(i, j, k, Idx::Z))/dx[1];
        amrex::Real ddnDZ_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Z) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Z) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Z) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Z) + (5.0/6.0)*state_fab(i, j, k, Idx::Z))/dx[2];

        amrex::Real dDDZ_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Z) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Z) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Z) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Z) - 5.0/2.0*state_fab(i, j, k, Idx::Z))/std::pow(dx[0], 2);
        amrex::Real dDDZ_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Z) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Z) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Z) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Z) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Z) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Z) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Z) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Z) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Z) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Z) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Z) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Z) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Z) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Z) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Z) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Z))/(dx[0]*dx[1]);
        amrex::Real dDDZ_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Z) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Z) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Z) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Z) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Z) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Z) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Z) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Z) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Z) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Z) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Z) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Z) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Z) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Z) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Z) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Z))/(dx[0]*dx[2]);
        amrex::Real dDDZ_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Z) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Z) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Z) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Z) - 5.0/2.0*state_fab(i, j, k, Idx::Z))/std::pow(dx[1], 2);
        amrex::Real dDDZ_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Z) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Z) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Z) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Z) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Z) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Z) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Z) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Z) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Z) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Z) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Z) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Z) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Z) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Z) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Z) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Z))/(dx[1]*dx[2]);
        amrex::Real dDDZ_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Z) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Z) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Z) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Z) - 5.0/2.0*state_fab(i, j, k, Idx::Z))/std::pow(dx[2], 2);

        amrex::Real dKODZ = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Z) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Z) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Z) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Z) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Z) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Z) - 5.0/16.0*state_fab(i, j, k, Idx::Z))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Z) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Z) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Z) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Z) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Z) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Z) - 5.0/16.0*state_fab(i, j, k, Idx::Z))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Z) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Z) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Z) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Z) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Z) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Z) - 5.0/16.0*state_fab(i, j, k, Idx::Z))/dx[0];

        amrex::Real AdvDbetaZ = beta_U_0*((beta_U_0<0)*ddnDZ_L_0 + (beta_U_0>0)*dupDZ_L_0) + beta_U_1*((beta_U_1<0)*ddnDZ_L_1 + (beta_U_1>0)*dupDZ_L_1) + beta_U_2*((beta_U_2<0)*ddnDZ_L_2 + (beta_U_2>0)*dupDZ_L_2);

        amrex::Real dDphi1_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::phi1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::phi1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::phi1))/dx[0];
        amrex::Real dDphi1_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::phi1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::phi1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::phi1))/dx[1];
        amrex::Real dDphi1_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::phi1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::phi1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::phi1))/dx[2];

        amrex::Real dupDphi1_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::phi1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::phi1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::phi1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::phi1) - 5.0/6.0*state_fab(i, j, k, Idx::phi1))/dx[0];
        amrex::Real dupDphi1_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::phi1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::phi1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::phi1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::phi1) - 5.0/6.0*state_fab(i, j, k, Idx::phi1))/dx[1];
        amrex::Real dupDphi1_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::phi1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::phi1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::phi1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::phi1) - 5.0/6.0*state_fab(i, j, k, Idx::phi1))/dx[2];

        amrex::Real ddnDphi1_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::phi1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::phi1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::phi1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::phi1) + (5.0/6.0)*state_fab(i, j, k, Idx::phi1))/dx[0];
        amrex::Real ddnDphi1_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::phi1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::phi1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::phi1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::phi1) + (5.0/6.0)*state_fab(i, j, k, Idx::phi1))/dx[1];
        amrex::Real ddnDphi1_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::phi1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::phi1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::phi1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::phi1) + (5.0/6.0)*state_fab(i, j, k, Idx::phi1))/dx[2];

        amrex::Real dDDphi1_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::phi1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::phi1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::phi1) - 5.0/2.0*state_fab(i, j, k, Idx::phi1))/std::pow(dx[0], 2);
        amrex::Real dDDphi1_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi1))/(dx[0]*dx[1]);
        amrex::Real dDDphi1_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi1))/(dx[0]*dx[2]);
        amrex::Real dDDphi1_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::phi1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::phi1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::phi1) - 5.0/2.0*state_fab(i, j, k, Idx::phi1))/std::pow(dx[1], 2);
        amrex::Real dDDphi1_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi1))/(dx[1]*dx[2]);
        amrex::Real dDDphi1_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::phi1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::phi1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::phi1) - 5.0/2.0*state_fab(i, j, k, Idx::phi1))/std::pow(dx[2], 2);

        amrex::Real dKODphi1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::phi1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::phi1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::phi1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::phi1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::phi1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::phi1) - 5.0/16.0*state_fab(i, j, k, Idx::phi1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::phi1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::phi1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::phi1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::phi1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::phi1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::phi1) - 5.0/16.0*state_fab(i, j, k, Idx::phi1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::phi1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::phi1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::phi1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::phi1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::phi1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::phi1) - 5.0/16.0*state_fab(i, j, k, Idx::phi1))/dx[0];

        amrex::Real AdvDbetaphi1 = beta_U_0*((beta_U_0<0)*ddnDphi1_L_0 + (beta_U_0>0)*dupDphi1_L_0) + beta_U_1*((beta_U_1<0)*ddnDphi1_L_1 + (beta_U_1>0)*dupDphi1_L_1) + beta_U_2*((beta_U_2<0)*ddnDphi1_L_2 + (beta_U_2>0)*dupDphi1_L_2);

        amrex::Real dDphi2_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::phi2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::phi2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::phi2))/dx[0];
        amrex::Real dDphi2_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::phi2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::phi2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::phi2))/dx[1];
        amrex::Real dDphi2_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::phi2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::phi2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::phi2))/dx[2];

        amrex::Real dupDphi2_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::phi2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::phi2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::phi2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::phi2) - 5.0/6.0*state_fab(i, j, k, Idx::phi2))/dx[0];
        amrex::Real dupDphi2_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::phi2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::phi2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::phi2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::phi2) - 5.0/6.0*state_fab(i, j, k, Idx::phi2))/dx[1];
        amrex::Real dupDphi2_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::phi2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::phi2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::phi2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::phi2) - 5.0/6.0*state_fab(i, j, k, Idx::phi2))/dx[2];

        amrex::Real ddnDphi2_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::phi2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::phi2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::phi2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::phi2) + (5.0/6.0)*state_fab(i, j, k, Idx::phi2))/dx[0];
        amrex::Real ddnDphi2_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::phi2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::phi2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::phi2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::phi2) + (5.0/6.0)*state_fab(i, j, k, Idx::phi2))/dx[1];
        amrex::Real ddnDphi2_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::phi2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::phi2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::phi2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::phi2) + (5.0/6.0)*state_fab(i, j, k, Idx::phi2))/dx[2];

        amrex::Real dDDphi2_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::phi2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::phi2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::phi2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::phi2) - 5.0/2.0*state_fab(i, j, k, Idx::phi2))/std::pow(dx[0], 2);
        amrex::Real dDDphi2_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::phi2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::phi2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::phi2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::phi2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::phi2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::phi2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::phi2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::phi2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::phi2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::phi2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::phi2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::phi2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::phi2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::phi2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::phi2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::phi2))/(dx[0]*dx[1]);
        amrex::Real dDDphi2_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::phi2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::phi2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::phi2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::phi2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::phi2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::phi2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::phi2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::phi2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::phi2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::phi2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::phi2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::phi2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::phi2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::phi2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::phi2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::phi2))/(dx[0]*dx[2]);
        amrex::Real dDDphi2_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::phi2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::phi2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::phi2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::phi2) - 5.0/2.0*state_fab(i, j, k, Idx::phi2))/std::pow(dx[1], 2);
        amrex::Real dDDphi2_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::phi2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::phi2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::phi2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::phi2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::phi2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::phi2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::phi2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::phi2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::phi2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::phi2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::phi2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::phi2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::phi2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::phi2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::phi2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::phi2))/(dx[1]*dx[2]);
        amrex::Real dDDphi2_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::phi2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::phi2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::phi2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::phi2) - 5.0/2.0*state_fab(i, j, k, Idx::phi2))/std::pow(dx[2], 2);

        amrex::Real dKODphi2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::phi2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::phi2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::phi2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::phi2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::phi2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::phi2) - 5.0/16.0*state_fab(i, j, k, Idx::phi2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::phi2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::phi2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::phi2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::phi2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::phi2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::phi2) - 5.0/16.0*state_fab(i, j, k, Idx::phi2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::phi2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::phi2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::phi2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::phi2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::phi2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::phi2) - 5.0/16.0*state_fab(i, j, k, Idx::phi2))/dx[0];

        amrex::Real AdvDbetaphi2 = beta_U_0*((beta_U_0<0)*ddnDphi2_L_0 + (beta_U_0>0)*dupDphi2_L_0) + beta_U_1*((beta_U_1<0)*ddnDphi2_L_1 + (beta_U_1>0)*dupDphi2_L_1) + beta_U_2*((beta_U_2<0)*ddnDphi2_L_2 + (beta_U_2>0)*dupDphi2_L_2);

        amrex::Real dDPi1_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Pi1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Pi1) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Pi1) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Pi1))/dx[0];
        amrex::Real dDPi1_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Pi1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Pi1) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Pi1) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Pi1))/dx[1];
        amrex::Real dDPi1_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Pi1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Pi1) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Pi1) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Pi1))/dx[2];

        amrex::Real dupDPi1_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Pi1) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Pi1) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Pi1) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Pi1) - 5.0/6.0*state_fab(i, j, k, Idx::Pi1))/dx[0];
        amrex::Real dupDPi1_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Pi1) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Pi1) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Pi1) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Pi1) - 5.0/6.0*state_fab(i, j, k, Idx::Pi1))/dx[1];
        amrex::Real dupDPi1_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Pi1) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Pi1) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Pi1) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Pi1) - 5.0/6.0*state_fab(i, j, k, Idx::Pi1))/dx[2];

        amrex::Real ddnDPi1_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Pi1) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Pi1) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Pi1) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Pi1) + (5.0/6.0)*state_fab(i, j, k, Idx::Pi1))/dx[0];
        amrex::Real ddnDPi1_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Pi1) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Pi1) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Pi1) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Pi1) + (5.0/6.0)*state_fab(i, j, k, Idx::Pi1))/dx[1];
        amrex::Real ddnDPi1_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Pi1) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Pi1) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Pi1) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Pi1) + (5.0/6.0)*state_fab(i, j, k, Idx::Pi1))/dx[2];

        amrex::Real dDDPi1_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Pi1) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Pi1) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Pi1) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Pi1) - 5.0/2.0*state_fab(i, j, k, Idx::Pi1))/std::pow(dx[0], 2);
        amrex::Real dDDPi1_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Pi1) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Pi1) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Pi1) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Pi1) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Pi1) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Pi1) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Pi1) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Pi1) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Pi1) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Pi1) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Pi1) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Pi1) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Pi1) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Pi1) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Pi1) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Pi1))/(dx[0]*dx[1]);
        amrex::Real dDDPi1_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Pi1) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Pi1) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Pi1) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Pi1) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Pi1) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Pi1) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Pi1) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Pi1) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Pi1) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Pi1) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Pi1) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Pi1) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Pi1) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Pi1) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Pi1) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Pi1))/(dx[0]*dx[2]);
        amrex::Real dDDPi1_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Pi1) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Pi1) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Pi1) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Pi1) - 5.0/2.0*state_fab(i, j, k, Idx::Pi1))/std::pow(dx[1], 2);
        amrex::Real dDDPi1_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Pi1) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Pi1) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Pi1) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Pi1) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Pi1) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Pi1) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Pi1) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Pi1) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Pi1) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Pi1) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Pi1) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Pi1) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Pi1) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Pi1) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Pi1) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Pi1))/(dx[1]*dx[2]);
        amrex::Real dDDPi1_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Pi1) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Pi1) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Pi1) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Pi1) - 5.0/2.0*state_fab(i, j, k, Idx::Pi1))/std::pow(dx[2], 2);

        amrex::Real dKODPi1 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Pi1) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Pi1) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Pi1) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Pi1) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Pi1) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Pi1) - 5.0/16.0*state_fab(i, j, k, Idx::Pi1))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Pi1) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Pi1) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Pi1) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Pi1) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Pi1) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Pi1) - 5.0/16.0*state_fab(i, j, k, Idx::Pi1))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Pi1) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Pi1) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Pi1) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Pi1) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Pi1) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Pi1) - 5.0/16.0*state_fab(i, j, k, Idx::Pi1))/dx[0];

        amrex::Real AdvDbetaPi1 = beta_U_0*((beta_U_0<0)*ddnDPi1_L_0 + (beta_U_0>0)*dupDPi1_L_0) + beta_U_1*((beta_U_1<0)*ddnDPi1_L_1 + (beta_U_1>0)*dupDPi1_L_1) + beta_U_2*((beta_U_2<0)*ddnDPi1_L_2 + (beta_U_2>0)*dupDPi1_L_2);

        amrex::Real dDPi2_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Pi2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Pi2) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Pi2) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Pi2))/dx[0];
        amrex::Real dDPi2_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Pi2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Pi2) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Pi2) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Pi2))/dx[1];
        amrex::Real dDPi2_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Pi2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Pi2) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Pi2) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Pi2))/dx[2];

        amrex::Real dupDPi2_L_0 = ((3.0/2.0)*state_fab(i + 1, j, k, Idx::Pi2) - 1.0/2.0*state_fab(i + 2, j, k, Idx::Pi2) + (1.0/12.0)*state_fab(i + 3, j, k, Idx::Pi2) - 1.0/4.0*state_fab(i - 1, j, k, Idx::Pi2) - 5.0/6.0*state_fab(i, j, k, Idx::Pi2))/dx[0];
        amrex::Real dupDPi2_L_1 = ((3.0/2.0)*state_fab(i, j + 1, k, Idx::Pi2) - 1.0/2.0*state_fab(i, j + 2, k, Idx::Pi2) + (1.0/12.0)*state_fab(i, j + 3, k, Idx::Pi2) - 1.0/4.0*state_fab(i, j - 1, k, Idx::Pi2) - 5.0/6.0*state_fab(i, j, k, Idx::Pi2))/dx[1];
        amrex::Real dupDPi2_L_2 = ((3.0/2.0)*state_fab(i, j, k + 1, Idx::Pi2) - 1.0/2.0*state_fab(i, j, k + 2, Idx::Pi2) + (1.0/12.0)*state_fab(i, j, k + 3, Idx::Pi2) - 1.0/4.0*state_fab(i, j, k - 1, Idx::Pi2) - 5.0/6.0*state_fab(i, j, k, Idx::Pi2))/dx[2];

        amrex::Real ddnDPi2_L_0 = ((1.0/4.0)*state_fab(i + 1, j, k, Idx::Pi2) - 3.0/2.0*state_fab(i - 1, j, k, Idx::Pi2) + (1.0/2.0)*state_fab(i - 2, j, k, Idx::Pi2) - 1.0/12.0*state_fab(i - 3, j, k, Idx::Pi2) + (5.0/6.0)*state_fab(i, j, k, Idx::Pi2))/dx[0];
        amrex::Real ddnDPi2_L_1 = ((1.0/4.0)*state_fab(i, j + 1, k, Idx::Pi2) - 3.0/2.0*state_fab(i, j - 1, k, Idx::Pi2) + (1.0/2.0)*state_fab(i, j - 2, k, Idx::Pi2) - 1.0/12.0*state_fab(i, j - 3, k, Idx::Pi2) + (5.0/6.0)*state_fab(i, j, k, Idx::Pi2))/dx[1];
        amrex::Real ddnDPi2_L_2 = ((1.0/4.0)*state_fab(i, j, k + 1, Idx::Pi2) - 3.0/2.0*state_fab(i, j, k - 1, Idx::Pi2) + (1.0/2.0)*state_fab(i, j, k - 2, Idx::Pi2) - 1.0/12.0*state_fab(i, j, k - 3, Idx::Pi2) + (5.0/6.0)*state_fab(i, j, k, Idx::Pi2))/dx[2];

        amrex::Real dDDPi2_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::Pi2) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Pi2) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::Pi2) - 1.0/12.0*state_fab(i - 2, j, k, Idx::Pi2) - 5.0/2.0*state_fab(i, j, k, Idx::Pi2))/std::pow(dx[0], 2);
        amrex::Real dDDPi2_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::Pi2) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::Pi2) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::Pi2) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::Pi2) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::Pi2) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::Pi2) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::Pi2) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::Pi2) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::Pi2) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::Pi2) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::Pi2) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::Pi2) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::Pi2) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::Pi2) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::Pi2) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::Pi2))/(dx[0]*dx[1]);
        amrex::Real dDDPi2_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::Pi2) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::Pi2) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::Pi2) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::Pi2) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::Pi2) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::Pi2) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::Pi2) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::Pi2) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::Pi2) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::Pi2) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::Pi2) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::Pi2) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::Pi2) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::Pi2) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::Pi2) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::Pi2))/(dx[0]*dx[2]);
        amrex::Real dDDPi2_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::Pi2) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Pi2) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::Pi2) - 1.0/12.0*state_fab(i, j - 2, k, Idx::Pi2) - 5.0/2.0*state_fab(i, j, k, Idx::Pi2))/std::pow(dx[1], 2);
        amrex::Real dDDPi2_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::Pi2) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::Pi2) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::Pi2) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::Pi2) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::Pi2) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::Pi2) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::Pi2) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::Pi2) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::Pi2) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::Pi2) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::Pi2) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::Pi2) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::Pi2) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::Pi2) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::Pi2) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::Pi2))/(dx[1]*dx[2]);
        amrex::Real dDDPi2_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::Pi2) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Pi2) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::Pi2) - 1.0/12.0*state_fab(i, j, k - 2, Idx::Pi2) - 5.0/2.0*state_fab(i, j, k, Idx::Pi2))/std::pow(dx[2], 2);

        amrex::Real dKODPi2 = ((15.0/64.0)*state_fab(i, j, k + 1, Idx::Pi2) - 3.0/32.0*state_fab(i, j, k + 2, Idx::Pi2) + (1.0/64.0)*state_fab(i, j, k + 3, Idx::Pi2) + (15.0/64.0)*state_fab(i, j, k - 1, Idx::Pi2) - 3.0/32.0*state_fab(i, j, k - 2, Idx::Pi2) + (1.0/64.0)*state_fab(i, j, k - 3, Idx::Pi2) - 5.0/16.0*state_fab(i, j, k, Idx::Pi2))/dx[2] + ((15.0/64.0)*state_fab(i, j + 1, k, Idx::Pi2) - 3.0/32.0*state_fab(i, j + 2, k, Idx::Pi2) + (1.0/64.0)*state_fab(i, j + 3, k, Idx::Pi2) + (15.0/64.0)*state_fab(i, j - 1, k, Idx::Pi2) - 3.0/32.0*state_fab(i, j - 2, k, Idx::Pi2) + (1.0/64.0)*state_fab(i, j - 3, k, Idx::Pi2) - 5.0/16.0*state_fab(i, j, k, Idx::Pi2))/dx[1] + ((15.0/64.0)*state_fab(i + 1, j, k, Idx::Pi2) - 3.0/32.0*state_fab(i + 2, j, k, Idx::Pi2) + (1.0/64.0)*state_fab(i + 3, j, k, Idx::Pi2) + (15.0/64.0)*state_fab(i - 1, j, k, Idx::Pi2) - 3.0/32.0*state_fab(i - 2, j, k, Idx::Pi2) + (1.0/64.0)*state_fab(i - 3, j, k, Idx::Pi2) - 5.0/16.0*state_fab(i, j, k, Idx::Pi2))/dx[0];

        amrex::Real AdvDbetaPi2 = beta_U_0*((beta_U_0<0)*ddnDPi2_L_0 + (beta_U_0>0)*dupDPi2_L_0) + beta_U_1*((beta_U_1<0)*ddnDPi2_L_1 + (beta_U_1>0)*dupDPi2_L_1) + beta_U_2*((beta_U_2<0)*ddnDPi2_L_2 + (beta_U_2>0)*dupDPi2_L_2);

        amrex::Real invgamtilde_UU_00 = (gamtilde_LL_11*gamtilde_LL_22 - std::pow(gamtilde_LL_12, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_01 = (-gamtilde_LL_01*gamtilde_LL_22 + gamtilde_LL_02*gamtilde_LL_12)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_02 = (gamtilde_LL_01*gamtilde_LL_12 - gamtilde_LL_02*gamtilde_LL_11)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_11 = (gamtilde_LL_00*gamtilde_LL_22 - std::pow(gamtilde_LL_02, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_12 = (-gamtilde_LL_00*gamtilde_LL_12 + gamtilde_LL_01*gamtilde_LL_02)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_22 = (gamtilde_LL_00*gamtilde_LL_11 - std::pow(gamtilde_LL_01, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);

        amrex::Real gam_LL_00 = gamtilde_LL_00/chi;
        amrex::Real gam_LL_01 = gamtilde_LL_01/chi;
        amrex::Real gam_LL_02 = gamtilde_LL_02/chi;
        amrex::Real gam_LL_11 = gamtilde_LL_11/chi;
        amrex::Real gam_LL_12 = gamtilde_LL_12/chi;
        amrex::Real gam_LL_22 = gamtilde_LL_22/chi;

        amrex::Real invgam_UU_00 = chi*invgamtilde_UU_00;
        amrex::Real invgam_UU_01 = chi*invgamtilde_UU_01;
        amrex::Real invgam_UU_02 = chi*invgamtilde_UU_02;
        amrex::Real invgam_UU_11 = chi*invgamtilde_UU_11;
        amrex::Real invgam_UU_12 = chi*invgamtilde_UU_12;
        amrex::Real invgam_UU_22 = chi*invgamtilde_UU_22;

        amrex::Real n_L_0 = -alpha;
        amrex::Real n_L_1 = 0;
        amrex::Real n_L_2 = 0;
        amrex::Real n_L_3 = 0;

        amrex::Real n_U_0 = 1.0/alpha;
        amrex::Real n_U_1 = -beta_U_0/alpha;
        amrex::Real n_U_2 = -beta_U_1/alpha;
        amrex::Real n_U_3 = -beta_U_2/alpha;

        amrex::Real beta_L_0 = beta_U_0*gam_LL_00 + beta_U_1*gam_LL_01 + beta_U_2*gam_LL_02;
        amrex::Real beta_L_1 = beta_U_0*gam_LL_01 + beta_U_1*gam_LL_11 + beta_U_2*gam_LL_12;
        amrex::Real beta_L_2 = beta_U_0*gam_LL_02 + beta_U_1*gam_LL_12 + beta_U_2*gam_LL_22;

        amrex::Real g4_LL_00 = -std::pow(alpha, 2) + beta_L_0*beta_U_0 + beta_L_1*beta_U_1 + beta_L_2*beta_U_2;
        amrex::Real g4_LL_01 = beta_L_0;
        amrex::Real g4_LL_02 = beta_L_1;
        amrex::Real g4_LL_03 = beta_L_2;
        amrex::Real g4_LL_11 = gam_LL_00;
        amrex::Real g4_LL_12 = gam_LL_01;
        amrex::Real g4_LL_13 = gam_LL_02;
        amrex::Real g4_LL_22 = gam_LL_11;
        amrex::Real g4_LL_23 = gam_LL_12;
        amrex::Real g4_LL_33 = gam_LL_22;

        amrex::Real g4_UU_00 = -1/std::pow(alpha, 2);
        amrex::Real g4_UU_01 = beta_U_0/std::pow(alpha, 2);
        amrex::Real g4_UU_02 = beta_U_1/std::pow(alpha, 2);
        amrex::Real g4_UU_03 = beta_U_2/std::pow(alpha, 2);
        amrex::Real g4_UU_11 = invgam_UU_00 - std::pow(beta_U_0, 2)/std::pow(alpha, 2);
        amrex::Real g4_UU_12 = invgam_UU_01 - beta_U_0*beta_U_1/std::pow(alpha, 2);
        amrex::Real g4_UU_13 = invgam_UU_02 - beta_U_0*beta_U_2/std::pow(alpha, 2);
        amrex::Real g4_UU_22 = invgam_UU_11 - std::pow(beta_U_1, 2)/std::pow(alpha, 2);
        amrex::Real g4_UU_23 = invgam_UU_12 - beta_U_1*beta_U_2/std::pow(alpha, 2);
        amrex::Real g4_UU_33 = invgam_UU_22 - std::pow(beta_U_2, 2)/std::pow(alpha, 2);

        amrex::Real gam4_LL_00 = g4_LL_00 + std::pow(n_L_0, 2);
        amrex::Real gam4_LL_01 = g4_LL_01 + n_L_0*n_L_1;
        amrex::Real gam4_LL_02 = g4_LL_02 + n_L_0*n_L_2;
        amrex::Real gam4_LL_03 = g4_LL_03 + n_L_0*n_L_3;
        amrex::Real gam4_LL_11 = g4_LL_11 + std::pow(n_L_1, 2);
        amrex::Real gam4_LL_12 = g4_LL_12 + n_L_1*n_L_2;
        amrex::Real gam4_LL_13 = g4_LL_13 + n_L_1*n_L_3;
        amrex::Real gam4_LL_22 = g4_LL_22 + std::pow(n_L_2, 2);
        amrex::Real gam4_LL_23 = g4_LL_23 + n_L_2*n_L_3;
        amrex::Real gam4_LL_33 = g4_LL_33 + std::pow(n_L_3, 2);

        amrex::Real gam4_UU_00 = g4_UU_00 + std::pow(n_U_0, 2);
        amrex::Real gam4_UU_01 = g4_UU_01 + n_U_0*n_U_1;
        amrex::Real gam4_UU_02 = g4_UU_02 + n_U_0*n_U_2;
        amrex::Real gam4_UU_03 = g4_UU_03 + n_U_0*n_U_3;
        amrex::Real gam4_UU_11 = g4_UU_11 + std::pow(n_U_1, 2);
        amrex::Real gam4_UU_12 = g4_UU_12 + n_U_1*n_U_2;
        amrex::Real gam4_UU_13 = g4_UU_13 + n_U_1*n_U_3;
        amrex::Real gam4_UU_22 = g4_UU_22 + std::pow(n_U_2, 2);
        amrex::Real gam4_UU_23 = g4_UU_23 + n_U_2*n_U_3;
        amrex::Real gam4_UU_33 = g4_UU_33 + std::pow(n_U_3, 2);

        amrex::Real gam4_UL_00 = n_L_0*n_U_0 + 1;
        amrex::Real gam4_UL_01 = n_L_1*n_U_0;
        amrex::Real gam4_UL_02 = n_L_2*n_U_0;
        amrex::Real gam4_UL_03 = n_L_3*n_U_0;
        amrex::Real gam4_UL_10 = n_L_0*n_U_1;
        amrex::Real gam4_UL_11 = n_L_1*n_U_1 + 1;
        amrex::Real gam4_UL_12 = n_L_2*n_U_1;
        amrex::Real gam4_UL_13 = n_L_3*n_U_1;
        amrex::Real gam4_UL_20 = n_L_0*n_U_2;
        amrex::Real gam4_UL_21 = n_L_1*n_U_2;
        amrex::Real gam4_UL_22 = n_L_2*n_U_2 + 1;
        amrex::Real gam4_UL_23 = n_L_3*n_U_2;
        amrex::Real gam4_UL_30 = n_L_0*n_U_3;
        amrex::Real gam4_UL_31 = n_L_1*n_U_3;
        amrex::Real gam4_UL_32 = n_L_2*n_U_3;
        amrex::Real gam4_UL_33 = n_L_3*n_U_3 + 1;

        amrex::Real gam4_LU_00 = n_L_0*n_U_0 + 1;
        amrex::Real gam4_LU_01 = n_L_0*n_U_1;
        amrex::Real gam4_LU_02 = n_L_0*n_U_2;
        amrex::Real gam4_LU_03 = n_L_0*n_U_3;
        amrex::Real gam4_LU_10 = n_L_1*n_U_0;
        amrex::Real gam4_LU_11 = n_L_1*n_U_1 + 1;
        amrex::Real gam4_LU_12 = n_L_1*n_U_2;
        amrex::Real gam4_LU_13 = n_L_1*n_U_3;
        amrex::Real gam4_LU_20 = n_L_2*n_U_0;
        amrex::Real gam4_LU_21 = n_L_2*n_U_1;
        amrex::Real gam4_LU_22 = n_L_2*n_U_2 + 1;
        amrex::Real gam4_LU_23 = n_L_2*n_U_3;
        amrex::Real gam4_LU_30 = n_L_3*n_U_0;
        amrex::Real gam4_LU_31 = n_L_3*n_U_1;
        amrex::Real gam4_LU_32 = n_L_3*n_U_2;
        amrex::Real gam4_LU_33 = n_L_3*n_U_3 + 1;

        amrex::Real dtphi1 = AdvDbetaphi1 + KOSigma*dKODphi1 + Pi1*alpha;


        amrex::Real dtphi2 = AdvDbetaphi2 + KOSigma*dKODphi2 + Pi2*alpha;


        amrex::Real J_L_0 = -dtphi1*phi2 + dtphi2*phi1;
        amrex::Real J_L_1 = -dDphi1_L_0*phi2 + dDphi2_L_0*phi1;
        amrex::Real J_L_2 = -dDphi1_L_1*phi2 + dDphi2_L_1*phi1;
        amrex::Real J_L_3 = -dDphi1_L_2*phi2 + dDphi2_L_2*phi1;

        amrex::Real scrJ_L_0 = J_L_1;
        amrex::Real scrJ_L_1 = J_L_2;
        amrex::Real scrJ_L_2 = J_L_3;

        amrex::Real scrJ = -J_L_0*n_U_0 - J_L_1*n_U_1 - J_L_2*n_U_2 - J_L_3*n_U_3;

        amrex::Real F_LL_01 = -dDA_LL_01 + dDA_LL_10;
        amrex::Real F_LL_02 = -dDA_LL_02 + dDA_LL_20;
        amrex::Real F_LL_12 = -dDA_LL_12 + dDA_LL_21;

        amrex::Real dtA_L_0 = -A*dDalpha_L_0 + A_L_0*dDbeta_UL_00 + A_L_1*dDbeta_UL_10 + A_L_2*dDbeta_UL_20 + AdvDbetaA_L_0 - E_U_0*alpha*gamtilde_LL_00/chi - E_U_1*alpha*gamtilde_LL_01/chi - E_U_2*alpha*gamtilde_LL_02/chi + KOSigma*dKODA_L_0 - alpha*dDA_L_0;
        amrex::Real dtA_L_1 = -A*dDalpha_L_1 + A_L_0*dDbeta_UL_01 + A_L_1*dDbeta_UL_11 + A_L_2*dDbeta_UL_21 + AdvDbetaA_L_1 - E_U_0*alpha*gamtilde_LL_01/chi - E_U_1*alpha*gamtilde_LL_11/chi - E_U_2*alpha*gamtilde_LL_12/chi + KOSigma*dKODA_L_1 - alpha*dDA_L_1;
        amrex::Real dtA_L_2 = -A*dDalpha_L_2 + A_L_0*dDbeta_UL_02 + A_L_1*dDbeta_UL_12 + A_L_2*dDbeta_UL_22 + AdvDbetaA_L_2 - E_U_0*alpha*gamtilde_LL_02/chi - E_U_1*alpha*gamtilde_LL_12/chi - E_U_2*alpha*gamtilde_LL_22/chi + KOSigma*dKODA_L_2 - alpha*dDA_L_2;

        amrex::Real E_L_0 = E_U_0*gam_LL_00 + E_U_1*gam_LL_01 + E_U_2*gam_LL_02;
        amrex::Real E_L_1 = E_U_0*gam_LL_01 + E_U_1*gam_LL_11 + E_U_2*gam_LL_12;
        amrex::Real E_L_2 = E_U_0*gam_LL_02 + E_U_1*gam_LL_12 + E_U_2*gam_LL_22;

        amrex::Real Ft_L_0 = -A_L_0*dDbeta_UL_00 - A_L_1*dDbeta_UL_10 - A_L_2*dDbeta_UL_20 - E_L_0*alpha - beta_U_0*dDA_LL_00 - beta_U_1*dDA_LL_10 - beta_U_2*dDA_LL_20 + dtA_L_0;
        amrex::Real Ft_L_1 = -A_L_0*dDbeta_UL_01 - A_L_1*dDbeta_UL_11 - A_L_2*dDbeta_UL_21 - E_L_1*alpha - beta_U_0*dDA_LL_01 - beta_U_1*dDA_LL_11 - beta_U_2*dDA_LL_21 + dtA_L_1;
        amrex::Real Ft_L_2 = -A_L_0*dDbeta_UL_02 - A_L_1*dDbeta_UL_12 - A_L_2*dDbeta_UL_22 - E_L_2*alpha - beta_U_0*dDA_LL_02 - beta_U_1*dDA_LL_12 - beta_U_2*dDA_LL_22 + dtA_L_2;

        amrex::Real F4_LL_01 = Ft_L_0;
        amrex::Real F4_LL_02 = Ft_L_1;
        amrex::Real F4_LL_03 = Ft_L_2;
        amrex::Real F4_LL_12 = F_LL_01;
        amrex::Real F4_LL_13 = F_LL_02;
        amrex::Real F4_LL_23 = F_LL_12;

        amrex::Real F4_LU_00 = F4_LL_01*g4_UU_01 + F4_LL_02*g4_UU_02 + F4_LL_03*g4_UU_03;
        amrex::Real F4_LU_01 = F4_LL_01*g4_UU_11 + F4_LL_02*g4_UU_12 + F4_LL_03*g4_UU_13;
        amrex::Real F4_LU_02 = F4_LL_01*g4_UU_12 + F4_LL_02*g4_UU_22 + F4_LL_03*g4_UU_23;
        amrex::Real F4_LU_03 = F4_LL_01*g4_UU_13 + F4_LL_02*g4_UU_23 + F4_LL_03*g4_UU_33;
        amrex::Real F4_LU_10 = -F4_LL_01*g4_UU_00 + F4_LL_12*g4_UU_02 + F4_LL_13*g4_UU_03;
        amrex::Real F4_LU_11 = -F4_LL_01*g4_UU_01 + F4_LL_12*g4_UU_12 + F4_LL_13*g4_UU_13;
        amrex::Real F4_LU_12 = -F4_LL_01*g4_UU_02 + F4_LL_12*g4_UU_22 + F4_LL_13*g4_UU_23;
        amrex::Real F4_LU_13 = -F4_LL_01*g4_UU_03 + F4_LL_12*g4_UU_23 + F4_LL_13*g4_UU_33;
        amrex::Real F4_LU_20 = -F4_LL_02*g4_UU_00 - F4_LL_12*g4_UU_01 + F4_LL_23*g4_UU_03;
        amrex::Real F4_LU_21 = -F4_LL_02*g4_UU_01 - F4_LL_12*g4_UU_11 + F4_LL_23*g4_UU_13;
        amrex::Real F4_LU_22 = -F4_LL_02*g4_UU_02 - F4_LL_12*g4_UU_12 + F4_LL_23*g4_UU_23;
        amrex::Real F4_LU_23 = -F4_LL_02*g4_UU_03 - F4_LL_12*g4_UU_13 + F4_LL_23*g4_UU_33;
        amrex::Real F4_LU_30 = -F4_LL_03*g4_UU_00 - F4_LL_13*g4_UU_01 - F4_LL_23*g4_UU_02;
        amrex::Real F4_LU_31 = -F4_LL_03*g4_UU_01 - F4_LL_13*g4_UU_11 - F4_LL_23*g4_UU_12;
        amrex::Real F4_LU_32 = -F4_LL_03*g4_UU_02 - F4_LL_13*g4_UU_12 - F4_LL_23*g4_UU_22;
        amrex::Real F4_LU_33 = -F4_LL_03*g4_UU_03 - F4_LL_13*g4_UU_13 - F4_LL_23*g4_UU_23;

        amrex::Real F4_UU_01 = F4_LU_01*g4_UU_00 + F4_LU_11*g4_UU_01 + F4_LU_21*g4_UU_02 + F4_LU_31*g4_UU_03;
        amrex::Real F4_UU_02 = F4_LU_02*g4_UU_00 + F4_LU_12*g4_UU_01 + F4_LU_22*g4_UU_02 + F4_LU_32*g4_UU_03;
        amrex::Real F4_UU_03 = F4_LU_03*g4_UU_00 + F4_LU_13*g4_UU_01 + F4_LU_23*g4_UU_02 + F4_LU_33*g4_UU_03;
        amrex::Real F4_UU_12 = F4_LU_02*g4_UU_01 + F4_LU_12*g4_UU_11 + F4_LU_22*g4_UU_12 + F4_LU_32*g4_UU_13;
        amrex::Real F4_UU_13 = F4_LU_03*g4_UU_01 + F4_LU_13*g4_UU_11 + F4_LU_23*g4_UU_12 + F4_LU_33*g4_UU_13;
        amrex::Real F4_UU_23 = F4_LU_03*g4_UU_02 + F4_LU_13*g4_UU_12 + F4_LU_23*g4_UU_22 + F4_LU_33*g4_UU_23;

        amrex::Real a_L_0 = -A*alpha + A_L_0*beta_U_0 + A_L_1*beta_U_1 + A_L_2*beta_U_2;
        amrex::Real a_L_1 = A_L_0;
        amrex::Real a_L_2 = A_L_1;
        amrex::Real a_L_3 = A_L_2;

        amrex::Real a_U_0 = a_L_0*g4_UU_00 + a_L_1*g4_UU_01 + a_L_2*g4_UU_02 + a_L_3*g4_UU_03;
        amrex::Real a_U_1 = a_L_0*g4_UU_01 + a_L_1*g4_UU_11 + a_L_2*g4_UU_12 + a_L_3*g4_UU_13;
        amrex::Real a_U_2 = a_L_0*g4_UU_02 + a_L_1*g4_UU_12 + a_L_2*g4_UU_22 + a_L_3*g4_UU_23;
        amrex::Real a_U_3 = a_L_0*g4_UU_03 + a_L_1*g4_UU_13 + a_L_2*g4_UU_23 + a_L_3*g4_UU_33;

        amrex::Real Dphi1_L_0 = dtphi1;
        amrex::Real Dphi1_L_1 = dDphi1_L_0;
        amrex::Real Dphi1_L_2 = dDphi1_L_1;
        amrex::Real Dphi1_L_3 = dDphi1_L_2;

        amrex::Real Dphi2_L_0 = dtphi2;
        amrex::Real Dphi2_L_1 = dDphi2_L_0;
        amrex::Real Dphi2_L_2 = dDphi2_L_1;
        amrex::Real Dphi2_L_3 = dDphi2_L_2;

        amrex::Real V = (1.0/4.0)*lambda*std::pow((1.0/2.0)*std::pow(phi1, 2) + (1.0/2.0)*std::pow(phi2, 2) - std::pow(v, 2), 2);

        amrex::Real Kin_LL_00 = ((1.0/2.0)*Dphi1_L_0 + (1.0/2.0)*a_L_0*echarge*phi2)*(Dphi1_L_0 + a_L_0*echarge*phi2) + ((1.0/2.0)*Dphi2_L_0 - 1.0/2.0*a_L_0*echarge*phi1)*(Dphi2_L_0 - a_L_0*echarge*phi1);
        amrex::Real Kin_LL_01 = ((1.0/2.0)*Dphi1_L_0 + (1.0/2.0)*a_L_0*echarge*phi2)*(Dphi1_L_1 + a_L_1*echarge*phi2) + ((1.0/2.0)*Dphi2_L_0 - 1.0/2.0*a_L_0*echarge*phi1)*(Dphi2_L_1 - a_L_1*echarge*phi1);
        amrex::Real Kin_LL_02 = ((1.0/2.0)*Dphi1_L_0 + (1.0/2.0)*a_L_0*echarge*phi2)*(Dphi1_L_2 + a_L_2*echarge*phi2) + ((1.0/2.0)*Dphi2_L_0 - 1.0/2.0*a_L_0*echarge*phi1)*(Dphi2_L_2 - a_L_2*echarge*phi1);
        amrex::Real Kin_LL_03 = ((1.0/2.0)*Dphi1_L_0 + (1.0/2.0)*a_L_0*echarge*phi2)*(Dphi1_L_3 + a_L_3*echarge*phi2) + ((1.0/2.0)*Dphi2_L_0 - 1.0/2.0*a_L_0*echarge*phi1)*(Dphi2_L_3 - a_L_3*echarge*phi1);
        amrex::Real Kin_LL_11 = ((1.0/2.0)*Dphi1_L_1 + (1.0/2.0)*a_L_1*echarge*phi2)*(Dphi1_L_1 + a_L_1*echarge*phi2) + ((1.0/2.0)*Dphi2_L_1 - 1.0/2.0*a_L_1*echarge*phi1)*(Dphi2_L_1 - a_L_1*echarge*phi1);
        amrex::Real Kin_LL_12 = ((1.0/2.0)*Dphi1_L_1 + (1.0/2.0)*a_L_1*echarge*phi2)*(Dphi1_L_2 + a_L_2*echarge*phi2) + ((1.0/2.0)*Dphi2_L_1 - 1.0/2.0*a_L_1*echarge*phi1)*(Dphi2_L_2 - a_L_2*echarge*phi1);
        amrex::Real Kin_LL_13 = ((1.0/2.0)*Dphi1_L_1 + (1.0/2.0)*a_L_1*echarge*phi2)*(Dphi1_L_3 + a_L_3*echarge*phi2) + ((1.0/2.0)*Dphi2_L_1 - 1.0/2.0*a_L_1*echarge*phi1)*(Dphi2_L_3 - a_L_3*echarge*phi1);
        amrex::Real Kin_LL_22 = ((1.0/2.0)*Dphi1_L_2 + (1.0/2.0)*a_L_2*echarge*phi2)*(Dphi1_L_2 + a_L_2*echarge*phi2) + ((1.0/2.0)*Dphi2_L_2 - 1.0/2.0*a_L_2*echarge*phi1)*(Dphi2_L_2 - a_L_2*echarge*phi1);
        amrex::Real Kin_LL_23 = ((1.0/2.0)*Dphi1_L_2 + (1.0/2.0)*a_L_2*echarge*phi2)*(Dphi1_L_3 + a_L_3*echarge*phi2) + ((1.0/2.0)*Dphi2_L_2 - 1.0/2.0*a_L_2*echarge*phi1)*(Dphi2_L_3 - a_L_3*echarge*phi1);
        amrex::Real Kin_LL_33 = ((1.0/2.0)*Dphi1_L_3 + (1.0/2.0)*a_L_3*echarge*phi2)*(Dphi1_L_3 + a_L_3*echarge*phi2) + ((1.0/2.0)*Dphi2_L_3 - 1.0/2.0*a_L_3*echarge*phi1)*(Dphi2_L_3 - a_L_3*echarge*phi1);

        amrex::Real scrLm = -1.0/2.0*F4_LL_01*F4_UU_01 - 1.0/2.0*F4_LL_02*F4_UU_02 - 1.0/2.0*F4_LL_03*F4_UU_03 - 1.0/2.0*F4_LL_12*F4_UU_12 - 1.0/2.0*F4_LL_13*F4_UU_13 - 1.0/2.0*F4_LL_23*F4_UU_23 - Kin_LL_00*g4_UU_00 - 2*Kin_LL_01*g4_UU_01 - 2*Kin_LL_02*g4_UU_02 - 2*Kin_LL_03*g4_UU_03 - Kin_LL_11*g4_UU_11 - 2*Kin_LL_12*g4_UU_12 - 2*Kin_LL_13*g4_UU_13 - Kin_LL_22*g4_UU_22 - 2*Kin_LL_23*g4_UU_23 - Kin_LL_33*g4_UU_33 - V;

        amrex::Real T_LL_00 = F4_LL_01*F4_LU_01 + F4_LL_02*F4_LU_02 + F4_LL_03*F4_LU_03 + Kin_LL_00 + g4_LL_00*scrLm;
        amrex::Real T_LL_01 = F4_LL_01*F4_LU_11 + F4_LL_02*F4_LU_12 + F4_LL_03*F4_LU_13 + Kin_LL_01 + g4_LL_01*scrLm;
        amrex::Real T_LL_02 = F4_LL_01*F4_LU_21 + F4_LL_02*F4_LU_22 + F4_LL_03*F4_LU_23 + Kin_LL_02 + g4_LL_02*scrLm;
        amrex::Real T_LL_03 = F4_LL_01*F4_LU_31 + F4_LL_02*F4_LU_32 + F4_LL_03*F4_LU_33 + Kin_LL_03 + g4_LL_03*scrLm;
        amrex::Real T_LL_11 = -F4_LL_01*F4_LU_10 + F4_LL_12*F4_LU_12 + F4_LL_13*F4_LU_13 + Kin_LL_11 + g4_LL_11*scrLm;
        amrex::Real T_LL_12 = -F4_LL_01*F4_LU_20 + F4_LL_12*F4_LU_22 + F4_LL_13*F4_LU_23 + Kin_LL_12 + g4_LL_12*scrLm;
        amrex::Real T_LL_13 = -F4_LL_01*F4_LU_30 + F4_LL_12*F4_LU_32 + F4_LL_13*F4_LU_33 + Kin_LL_13 + g4_LL_13*scrLm;
        amrex::Real T_LL_22 = -F4_LL_02*F4_LU_20 - F4_LL_12*F4_LU_21 + F4_LL_23*F4_LU_23 + Kin_LL_22 + g4_LL_22*scrLm;
        amrex::Real T_LL_23 = -F4_LL_02*F4_LU_30 - F4_LL_12*F4_LU_31 + F4_LL_23*F4_LU_33 + Kin_LL_23 + g4_LL_23*scrLm;
        amrex::Real T_LL_33 = -F4_LL_03*F4_LU_30 - F4_LL_13*F4_LU_31 - F4_LL_23*F4_LU_32 + Kin_LL_33 + g4_LL_33*scrLm;

        amrex::Real T_UU_00 = T_LL_00*std::pow(g4_UU_00, 2) + 2*T_LL_01*g4_UU_00*g4_UU_01 + 2*T_LL_02*g4_UU_00*g4_UU_02 + 2*T_LL_03*g4_UU_00*g4_UU_03 + T_LL_11*std::pow(g4_UU_01, 2) + 2*T_LL_12*g4_UU_01*g4_UU_02 + 2*T_LL_13*g4_UU_01*g4_UU_03 + T_LL_22*std::pow(g4_UU_02, 2) + 2*T_LL_23*g4_UU_02*g4_UU_03 + T_LL_33*std::pow(g4_UU_03, 2);
        amrex::Real T_UU_01 = T_LL_00*g4_UU_00*g4_UU_01 + T_LL_01*g4_UU_00*g4_UU_11 + T_LL_01*std::pow(g4_UU_01, 2) + T_LL_02*g4_UU_00*g4_UU_12 + T_LL_02*g4_UU_01*g4_UU_02 + T_LL_03*g4_UU_00*g4_UU_13 + T_LL_03*g4_UU_01*g4_UU_03 + T_LL_11*g4_UU_01*g4_UU_11 + T_LL_12*g4_UU_01*g4_UU_12 + T_LL_12*g4_UU_02*g4_UU_11 + T_LL_13*g4_UU_01*g4_UU_13 + T_LL_13*g4_UU_03*g4_UU_11 + T_LL_22*g4_UU_02*g4_UU_12 + T_LL_23*g4_UU_02*g4_UU_13 + T_LL_23*g4_UU_03*g4_UU_12 + T_LL_33*g4_UU_03*g4_UU_13;
        amrex::Real T_UU_02 = T_LL_00*g4_UU_00*g4_UU_02 + T_LL_01*g4_UU_00*g4_UU_12 + T_LL_01*g4_UU_01*g4_UU_02 + T_LL_02*g4_UU_00*g4_UU_22 + T_LL_02*std::pow(g4_UU_02, 2) + T_LL_03*g4_UU_00*g4_UU_23 + T_LL_03*g4_UU_02*g4_UU_03 + T_LL_11*g4_UU_01*g4_UU_12 + T_LL_12*g4_UU_01*g4_UU_22 + T_LL_12*g4_UU_02*g4_UU_12 + T_LL_13*g4_UU_01*g4_UU_23 + T_LL_13*g4_UU_03*g4_UU_12 + T_LL_22*g4_UU_02*g4_UU_22 + T_LL_23*g4_UU_02*g4_UU_23 + T_LL_23*g4_UU_03*g4_UU_22 + T_LL_33*g4_UU_03*g4_UU_23;
        amrex::Real T_UU_03 = T_LL_00*g4_UU_00*g4_UU_03 + T_LL_01*g4_UU_00*g4_UU_13 + T_LL_01*g4_UU_01*g4_UU_03 + T_LL_02*g4_UU_00*g4_UU_23 + T_LL_02*g4_UU_02*g4_UU_03 + T_LL_03*g4_UU_00*g4_UU_33 + T_LL_03*std::pow(g4_UU_03, 2) + T_LL_11*g4_UU_01*g4_UU_13 + T_LL_12*g4_UU_01*g4_UU_23 + T_LL_12*g4_UU_02*g4_UU_13 + T_LL_13*g4_UU_01*g4_UU_33 + T_LL_13*g4_UU_03*g4_UU_13 + T_LL_22*g4_UU_02*g4_UU_23 + T_LL_23*g4_UU_02*g4_UU_33 + T_LL_23*g4_UU_03*g4_UU_23 + T_LL_33*g4_UU_03*g4_UU_33;
        amrex::Real T_UU_11 = T_LL_00*std::pow(g4_UU_01, 2) + 2*T_LL_01*g4_UU_01*g4_UU_11 + 2*T_LL_02*g4_UU_01*g4_UU_12 + 2*T_LL_03*g4_UU_01*g4_UU_13 + T_LL_11*std::pow(g4_UU_11, 2) + 2*T_LL_12*g4_UU_11*g4_UU_12 + 2*T_LL_13*g4_UU_11*g4_UU_13 + T_LL_22*std::pow(g4_UU_12, 2) + 2*T_LL_23*g4_UU_12*g4_UU_13 + T_LL_33*std::pow(g4_UU_13, 2);
        amrex::Real T_UU_12 = T_LL_00*g4_UU_01*g4_UU_02 + T_LL_01*g4_UU_01*g4_UU_12 + T_LL_01*g4_UU_02*g4_UU_11 + T_LL_02*g4_UU_01*g4_UU_22 + T_LL_02*g4_UU_02*g4_UU_12 + T_LL_03*g4_UU_01*g4_UU_23 + T_LL_03*g4_UU_02*g4_UU_13 + T_LL_11*g4_UU_11*g4_UU_12 + T_LL_12*g4_UU_11*g4_UU_22 + T_LL_12*std::pow(g4_UU_12, 2) + T_LL_13*g4_UU_11*g4_UU_23 + T_LL_13*g4_UU_12*g4_UU_13 + T_LL_22*g4_UU_12*g4_UU_22 + T_LL_23*g4_UU_12*g4_UU_23 + T_LL_23*g4_UU_13*g4_UU_22 + T_LL_33*g4_UU_13*g4_UU_23;
        amrex::Real T_UU_13 = T_LL_00*g4_UU_01*g4_UU_03 + T_LL_01*g4_UU_01*g4_UU_13 + T_LL_01*g4_UU_03*g4_UU_11 + T_LL_02*g4_UU_01*g4_UU_23 + T_LL_02*g4_UU_03*g4_UU_12 + T_LL_03*g4_UU_01*g4_UU_33 + T_LL_03*g4_UU_03*g4_UU_13 + T_LL_11*g4_UU_11*g4_UU_13 + T_LL_12*g4_UU_11*g4_UU_23 + T_LL_12*g4_UU_12*g4_UU_13 + T_LL_13*g4_UU_11*g4_UU_33 + T_LL_13*std::pow(g4_UU_13, 2) + T_LL_22*g4_UU_12*g4_UU_23 + T_LL_23*g4_UU_12*g4_UU_33 + T_LL_23*g4_UU_13*g4_UU_23 + T_LL_33*g4_UU_13*g4_UU_33;
        amrex::Real T_UU_22 = T_LL_00*std::pow(g4_UU_02, 2) + 2*T_LL_01*g4_UU_02*g4_UU_12 + 2*T_LL_02*g4_UU_02*g4_UU_22 + 2*T_LL_03*g4_UU_02*g4_UU_23 + T_LL_11*std::pow(g4_UU_12, 2) + 2*T_LL_12*g4_UU_12*g4_UU_22 + 2*T_LL_13*g4_UU_12*g4_UU_23 + T_LL_22*std::pow(g4_UU_22, 2) + 2*T_LL_23*g4_UU_22*g4_UU_23 + T_LL_33*std::pow(g4_UU_23, 2);
        amrex::Real T_UU_23 = T_LL_00*g4_UU_02*g4_UU_03 + T_LL_01*g4_UU_02*g4_UU_13 + T_LL_01*g4_UU_03*g4_UU_12 + T_LL_02*g4_UU_02*g4_UU_23 + T_LL_02*g4_UU_03*g4_UU_22 + T_LL_03*g4_UU_02*g4_UU_33 + T_LL_03*g4_UU_03*g4_UU_23 + T_LL_11*g4_UU_12*g4_UU_13 + T_LL_12*g4_UU_12*g4_UU_23 + T_LL_12*g4_UU_13*g4_UU_22 + T_LL_13*g4_UU_12*g4_UU_33 + T_LL_13*g4_UU_13*g4_UU_23 + T_LL_22*g4_UU_22*g4_UU_23 + T_LL_23*g4_UU_22*g4_UU_33 + T_LL_23*std::pow(g4_UU_23, 2) + T_LL_33*g4_UU_23*g4_UU_33;
        amrex::Real T_UU_33 = T_LL_00*std::pow(g4_UU_03, 2) + 2*T_LL_01*g4_UU_03*g4_UU_13 + 2*T_LL_02*g4_UU_03*g4_UU_23 + 2*T_LL_03*g4_UU_03*g4_UU_33 + T_LL_11*std::pow(g4_UU_13, 2) + 2*T_LL_12*g4_UU_13*g4_UU_23 + 2*T_LL_13*g4_UU_13*g4_UU_33 + T_LL_22*std::pow(g4_UU_23, 2) + 2*T_LL_23*g4_UU_23*g4_UU_33 + T_LL_33*std::pow(g4_UU_33, 2);

        amrex::Real rhoADM = T_UU_00*std::pow(n_L_0, 2) + 2*T_UU_01*n_L_0*n_L_1 + 2*T_UU_02*n_L_0*n_L_2 + 2*T_UU_03*n_L_0*n_L_3 + T_UU_11*std::pow(n_L_1, 2) + 2*T_UU_12*n_L_1*n_L_2 + 2*T_UU_13*n_L_1*n_L_3 + T_UU_22*std::pow(n_L_2, 2) + 2*T_UU_23*n_L_2*n_L_3 + T_UU_33*std::pow(n_L_3, 2);
        
        diag(i, j, k, Diag::rhoADM) = rhoADM;
        }
        
        {
        amrex::Real lambda = 2.0;
        amrex::Real eta = 0.05;
        amrex::Real e = std::sqrt(lambda/2.0);
        
        //amrex::Real phi1 = state_fab(i, j, k, Idx::phi1);

        //amrex::Real phi2 = state_fab(i, j, k, Idx::phi2);
    
        //amrex::Real V = 0.25*lambda*std::pow(0.5*(phi1*phi1 + phi2*phi2) - eta*eta,2);
        
        //amrex::Real rhoADM = v*v - 1.0/2.0*(phi1*phi1 + phi2*phi2);
        
        //diag(i, j, k, Diag::rhoADM) = V;

        amrex::Real chi = state_fab(i, j, k, Idx::chi);

        amrex::Real gamtilde_LL_00 = state_fab(i, j, k, Idx::gamtilde_LL_00);
        amrex::Real gamtilde_LL_01 = state_fab(i, j, k, Idx::gamtilde_LL_01);
        amrex::Real gamtilde_LL_02 = state_fab(i, j, k, Idx::gamtilde_LL_02);
        amrex::Real gamtilde_LL_11 = state_fab(i, j, k, Idx::gamtilde_LL_11);
        amrex::Real gamtilde_LL_12 = state_fab(i, j, k, Idx::gamtilde_LL_12);
        amrex::Real gamtilde_LL_22 = state_fab(i, j, k, Idx::gamtilde_LL_22);

        amrex::Real Khat = state_fab(i, j, k, Idx::Khat);

        amrex::Real Atilde_LL_00 = state_fab(i, j, k, Idx::Atilde_LL_00);
        amrex::Real Atilde_LL_01 = state_fab(i, j, k, Idx::Atilde_LL_01);
        amrex::Real Atilde_LL_02 = state_fab(i, j, k, Idx::Atilde_LL_02);
        amrex::Real Atilde_LL_11 = state_fab(i, j, k, Idx::Atilde_LL_11);
        amrex::Real Atilde_LL_12 = state_fab(i, j, k, Idx::Atilde_LL_12);
        amrex::Real Atilde_LL_22 = state_fab(i, j, k, Idx::Atilde_LL_22);

        amrex::Real theta = state_fab(i, j, k, Idx::theta);

        amrex::Real Gamtilde_U_0 = state_fab(i, j, k, Idx::Gamtilde_U_0);
        amrex::Real Gamtilde_U_1 = state_fab(i, j, k, Idx::Gamtilde_U_1);
        amrex::Real Gamtilde_U_2 = state_fab(i, j, k, Idx::Gamtilde_U_2);

        amrex::Real alpha = state_fab(i, j, k, Idx::alpha);

        amrex::Real beta_U_0 = state_fab(i, j, k, Idx::beta_U_0);
        amrex::Real beta_U_1 = state_fab(i, j, k, Idx::beta_U_1);
        amrex::Real beta_U_2 = state_fab(i, j, k, Idx::beta_U_2);
        
        amrex::Real dDchi_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) - 2.0/3.0*state_fab(i - 1, j, k, Idx::chi) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::chi))/dx[0];
        amrex::Real dDchi_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) - 2.0/3.0*state_fab(i, j - 1, k, Idx::chi) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::chi))/dx[1];
        amrex::Real dDchi_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) - 2.0/3.0*state_fab(i, j, k - 1, Idx::chi) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::chi))/dx[2];

        amrex::Real dDDchi_LL_00 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i + 2, j, k, Idx::chi) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::chi) - 1.0/12.0*state_fab(i - 2, j, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[0], 2);
        amrex::Real dDDchi_LL_01 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::chi) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::chi) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::chi) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::chi) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::chi) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::chi) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::chi) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::chi) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::chi))/(dx[0]*dx[1]);
        amrex::Real dDDchi_LL_02 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::chi) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::chi) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::chi) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::chi) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::chi) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::chi) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::chi) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::chi) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::chi))/(dx[0]*dx[2]);
        amrex::Real dDDchi_LL_11 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j + 2, k, Idx::chi) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::chi) - 1.0/12.0*state_fab(i, j - 2, k, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[1], 2);
        amrex::Real dDDchi_LL_12 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::chi) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::chi) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::chi) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::chi) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::chi) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::chi) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::chi) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::chi) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::chi) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::chi) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::chi) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::chi) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::chi) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::chi) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::chi) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::chi))/(dx[1]*dx[2]);
        amrex::Real dDDchi_LL_22 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k + 2, Idx::chi) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::chi) - 1.0/12.0*state_fab(i, j, k - 2, Idx::chi) - 5.0/2.0*state_fab(i, j, k, Idx::chi))/std::pow(dx[2], 2);

        amrex::Real dDgamtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_00))/dx[0];
        amrex::Real dDgamtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_00))/dx[1];
        amrex::Real dDgamtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_00))/dx[2];
        amrex::Real dDgamtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_01))/dx[0];
        amrex::Real dDgamtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_01))/dx[1];
        amrex::Real dDgamtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_01))/dx[2];
        amrex::Real dDgamtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_02))/dx[0];
        amrex::Real dDgamtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_02))/dx[1];
        amrex::Real dDgamtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_02))/dx[2];
        amrex::Real dDgamtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_11))/dx[0];
        amrex::Real dDgamtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_11))/dx[1];
        amrex::Real dDgamtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_11))/dx[2];
        amrex::Real dDgamtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_12))/dx[0];
        amrex::Real dDgamtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_12))/dx[1];
        amrex::Real dDgamtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_12))/dx[2];
        amrex::Real dDgamtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::gamtilde_LL_22))/dx[0];
        amrex::Real dDgamtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::gamtilde_LL_22))/dx[1];
        amrex::Real dDgamtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::gamtilde_LL_22))/dx[2];

        amrex::Real dDDgamtilde_LLLL_0000 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0001 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_00))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0002 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_00))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0011 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0012 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_00) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_00) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_00) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_00) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_00) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_00) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_00))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0022 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_00) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_00) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_00) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_00))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_01))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_01))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_01) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_01) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_01) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_01) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_01) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_01) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_01))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_01) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_01) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_01) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_01))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_0200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_0201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_02))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_0202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_02))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_0212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_02) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_02) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_02) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_02) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_02) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_02) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_02))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_0222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_02) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_02) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_02) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_02))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1100 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1101 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_11))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1102 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_11))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1111 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1112 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_11) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_11) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_11) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_11) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_11) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_11) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_11))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1122 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_11) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_11) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_11) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_11))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_1200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_1201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_12))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_1202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_12))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_1212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_12) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_12) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_12) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_12) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_12) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_12) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_12))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_1222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_12) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_12) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_12) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_12))/std::pow(dx[2], 2);
        amrex::Real dDDgamtilde_LLLL_2200 = ((4.0/3.0)*state_fab(i + 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i - 1, j, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i - 2, j, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[0], 2);
        amrex::Real dDDgamtilde_LLLL_2201 = ((4.0/9.0)*state_fab(i + 1, j + 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j + 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j - 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j - 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j + 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j + 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j - 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j - 2, k, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j + 1, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j + 2, k, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j - 1, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j - 2, k, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j + 1, k, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j + 2, k, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j - 1, k, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j - 2, k, Idx::gamtilde_LL_22))/(dx[0]*dx[1]);
        amrex::Real dDDgamtilde_LLLL_2202 = ((4.0/9.0)*state_fab(i + 1, j, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 1, j, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i + 1, j, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 1, j, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i + 2, j, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i + 2, j, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i + 2, j, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i + 2, j, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i - 1, j, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 1, j, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i - 1, j, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 1, j, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i - 2, j, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i - 2, j, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i - 2, j, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i - 2, j, k - 2, Idx::gamtilde_LL_22))/(dx[0]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2211 = ((4.0/3.0)*state_fab(i, j + 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j - 1, k, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j - 2, k, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[1], 2);
        amrex::Real dDDgamtilde_LLLL_2212 = ((4.0/9.0)*state_fab(i, j + 1, k + 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 1, k + 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j + 1, k - 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 1, k - 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j + 2, k + 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j + 2, k + 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j + 2, k - 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j + 2, k - 2, Idx::gamtilde_LL_22) - 4.0/9.0*state_fab(i, j - 1, k + 1, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 1, k + 2, Idx::gamtilde_LL_22) + (4.0/9.0)*state_fab(i, j - 1, k - 1, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 1, k - 2, Idx::gamtilde_LL_22) + (1.0/18.0)*state_fab(i, j - 2, k + 1, Idx::gamtilde_LL_22) - 1.0/144.0*state_fab(i, j - 2, k + 2, Idx::gamtilde_LL_22) - 1.0/18.0*state_fab(i, j - 2, k - 1, Idx::gamtilde_LL_22) + (1.0/144.0)*state_fab(i, j - 2, k - 2, Idx::gamtilde_LL_22))/(dx[1]*dx[2]);
        amrex::Real dDDgamtilde_LLLL_2222 = ((4.0/3.0)*state_fab(i, j, k + 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::gamtilde_LL_22) + (4.0/3.0)*state_fab(i, j, k - 1, Idx::gamtilde_LL_22) - 1.0/12.0*state_fab(i, j, k - 2, Idx::gamtilde_LL_22) - 5.0/2.0*state_fab(i, j, k, Idx::gamtilde_LL_22))/std::pow(dx[2], 2);

        amrex::Real dDAtilde_LLL_000 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_00))/dx[0];
        amrex::Real dDAtilde_LLL_001 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_00))/dx[1];
        amrex::Real dDAtilde_LLL_002 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_00) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_00) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_00) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_00))/dx[2];
        amrex::Real dDAtilde_LLL_010 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_01))/dx[0];
        amrex::Real dDAtilde_LLL_011 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_01))/dx[1];
        amrex::Real dDAtilde_LLL_012 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_01) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_01) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_01) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_01))/dx[2];
        amrex::Real dDAtilde_LLL_020 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_02))/dx[0];
        amrex::Real dDAtilde_LLL_021 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_02))/dx[1];
        amrex::Real dDAtilde_LLL_022 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_02) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_02) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_02) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_02))/dx[2];
        amrex::Real dDAtilde_LLL_110 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_11))/dx[0];
        amrex::Real dDAtilde_LLL_111 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_11))/dx[1];
        amrex::Real dDAtilde_LLL_112 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_11) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_11) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_11) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_11))/dx[2];
        amrex::Real dDAtilde_LLL_120 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_12))/dx[0];
        amrex::Real dDAtilde_LLL_121 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_12))/dx[1];
        amrex::Real dDAtilde_LLL_122 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_12) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_12) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_12) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_12))/dx[2];
        amrex::Real dDAtilde_LLL_220 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Atilde_LL_22))/dx[0];
        amrex::Real dDAtilde_LLL_221 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Atilde_LL_22))/dx[1];
        amrex::Real dDAtilde_LLL_222 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Atilde_LL_22) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Atilde_LL_22) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Atilde_LL_22) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Atilde_LL_22))/dx[2];

        amrex::Real dDKhat_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::Khat) - 1.0/12.0*state_fab(i + 2, j, k, Idx::Khat) - 2.0/3.0*state_fab(i - 1, j, k, Idx::Khat) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::Khat))/dx[0];
        amrex::Real dDKhat_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::Khat) - 1.0/12.0*state_fab(i, j + 2, k, Idx::Khat) - 2.0/3.0*state_fab(i, j - 1, k, Idx::Khat) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::Khat))/dx[1];
        amrex::Real dDKhat_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::Khat) - 1.0/12.0*state_fab(i, j, k + 2, Idx::Khat) - 2.0/3.0*state_fab(i, j, k - 1, Idx::Khat) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::Khat))/dx[2];

        amrex::Real dDtheta_L_0 = ((2.0/3.0)*state_fab(i + 1, j, k, Idx::theta) - 1.0/12.0*state_fab(i + 2, j, k, Idx::theta) - 2.0/3.0*state_fab(i - 1, j, k, Idx::theta) + (1.0/12.0)*state_fab(i - 2, j, k, Idx::theta))/dx[0];
        amrex::Real dDtheta_L_1 = ((2.0/3.0)*state_fab(i, j + 1, k, Idx::theta) - 1.0/12.0*state_fab(i, j + 2, k, Idx::theta) - 2.0/3.0*state_fab(i, j - 1, k, Idx::theta) + (1.0/12.0)*state_fab(i, j - 2, k, Idx::theta))/dx[1];
        amrex::Real dDtheta_L_2 = ((2.0/3.0)*state_fab(i, j, k + 1, Idx::theta) - 1.0/12.0*state_fab(i, j, k + 2, Idx::theta) - 2.0/3.0*state_fab(i, j, k - 1, Idx::theta) + (1.0/12.0)*state_fab(i, j, k - 2, Idx::theta))/dx[2];

        amrex::Real invgamtilde_UU_00 = (gamtilde_LL_11*gamtilde_LL_22 - std::pow(gamtilde_LL_12, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_01 = (-gamtilde_LL_01*gamtilde_LL_22 + gamtilde_LL_02*gamtilde_LL_12)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_02 = (gamtilde_LL_01*gamtilde_LL_12 - gamtilde_LL_02*gamtilde_LL_11)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_11 = (gamtilde_LL_00*gamtilde_LL_22 - std::pow(gamtilde_LL_02, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_12 = (-gamtilde_LL_00*gamtilde_LL_12 + gamtilde_LL_01*gamtilde_LL_02)/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);
        amrex::Real invgamtilde_UU_22 = (gamtilde_LL_00*gamtilde_LL_11 - std::pow(gamtilde_LL_01, 2))/(gamtilde_LL_00*gamtilde_LL_11*gamtilde_LL_22 - gamtilde_LL_00*std::pow(gamtilde_LL_12, 2) - std::pow(gamtilde_LL_01, 2)*gamtilde_LL_22 + 2*gamtilde_LL_01*gamtilde_LL_02*gamtilde_LL_12 - std::pow(gamtilde_LL_02, 2)*gamtilde_LL_11);

        amrex::Real Christoffelgamtilde_LLL_000 = 0.5*dDgamtilde_LLL_000;
        amrex::Real Christoffelgamtilde_LLL_001 = 0.5*dDgamtilde_LLL_001;
        amrex::Real Christoffelgamtilde_LLL_002 = 0.5*dDgamtilde_LLL_002;
        amrex::Real Christoffelgamtilde_LLL_011 = 1.0*dDgamtilde_LLL_011 - 0.5*dDgamtilde_LLL_110;
        amrex::Real Christoffelgamtilde_LLL_012 = 0.5*dDgamtilde_LLL_012 + 0.5*dDgamtilde_LLL_021 - 0.5*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_022 = 1.0*dDgamtilde_LLL_022 - 0.5*dDgamtilde_LLL_220;
        amrex::Real Christoffelgamtilde_LLL_100 = -0.5*dDgamtilde_LLL_001 + 1.0*dDgamtilde_LLL_010;
        amrex::Real Christoffelgamtilde_LLL_101 = 0.5*dDgamtilde_LLL_110;
        amrex::Real Christoffelgamtilde_LLL_102 = 0.5*dDgamtilde_LLL_012 - 0.5*dDgamtilde_LLL_021 + 0.5*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_111 = 0.5*dDgamtilde_LLL_111;
        amrex::Real Christoffelgamtilde_LLL_112 = 0.5*dDgamtilde_LLL_112;
        amrex::Real Christoffelgamtilde_LLL_122 = 1.0*dDgamtilde_LLL_122 - 0.5*dDgamtilde_LLL_221;
        amrex::Real Christoffelgamtilde_LLL_200 = -0.5*dDgamtilde_LLL_002 + 1.0*dDgamtilde_LLL_020;
        amrex::Real Christoffelgamtilde_LLL_201 = -0.5*dDgamtilde_LLL_012 + 0.5*dDgamtilde_LLL_021 + 0.5*dDgamtilde_LLL_120;
        amrex::Real Christoffelgamtilde_LLL_202 = 0.5*dDgamtilde_LLL_220;
        amrex::Real Christoffelgamtilde_LLL_211 = -0.5*dDgamtilde_LLL_112 + 1.0*dDgamtilde_LLL_121;
        amrex::Real Christoffelgamtilde_LLL_212 = 0.5*dDgamtilde_LLL_221;
        amrex::Real Christoffelgamtilde_LLL_222 = 0.5*dDgamtilde_LLL_222;

        amrex::Real Christoffelgamtilde_ULL_000 = Christoffelgamtilde_LLL_000*invgamtilde_UU_00 + Christoffelgamtilde_LLL_100*invgamtilde_UU_01 + Christoffelgamtilde_LLL_200*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_001 = Christoffelgamtilde_LLL_001*invgamtilde_UU_00 + Christoffelgamtilde_LLL_101*invgamtilde_UU_01 + Christoffelgamtilde_LLL_201*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_002 = Christoffelgamtilde_LLL_002*invgamtilde_UU_00 + Christoffelgamtilde_LLL_102*invgamtilde_UU_01 + Christoffelgamtilde_LLL_202*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_011 = Christoffelgamtilde_LLL_011*invgamtilde_UU_00 + Christoffelgamtilde_LLL_111*invgamtilde_UU_01 + Christoffelgamtilde_LLL_211*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_012 = Christoffelgamtilde_LLL_012*invgamtilde_UU_00 + Christoffelgamtilde_LLL_112*invgamtilde_UU_01 + Christoffelgamtilde_LLL_212*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_022 = Christoffelgamtilde_LLL_022*invgamtilde_UU_00 + Christoffelgamtilde_LLL_122*invgamtilde_UU_01 + Christoffelgamtilde_LLL_222*invgamtilde_UU_02;
        amrex::Real Christoffelgamtilde_ULL_100 = Christoffelgamtilde_LLL_000*invgamtilde_UU_01 + Christoffelgamtilde_LLL_100*invgamtilde_UU_11 + Christoffelgamtilde_LLL_200*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_101 = Christoffelgamtilde_LLL_001*invgamtilde_UU_01 + Christoffelgamtilde_LLL_101*invgamtilde_UU_11 + Christoffelgamtilde_LLL_201*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_102 = Christoffelgamtilde_LLL_002*invgamtilde_UU_01 + Christoffelgamtilde_LLL_102*invgamtilde_UU_11 + Christoffelgamtilde_LLL_202*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_111 = Christoffelgamtilde_LLL_011*invgamtilde_UU_01 + Christoffelgamtilde_LLL_111*invgamtilde_UU_11 + Christoffelgamtilde_LLL_211*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_112 = Christoffelgamtilde_LLL_012*invgamtilde_UU_01 + Christoffelgamtilde_LLL_112*invgamtilde_UU_11 + Christoffelgamtilde_LLL_212*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_122 = Christoffelgamtilde_LLL_022*invgamtilde_UU_01 + Christoffelgamtilde_LLL_122*invgamtilde_UU_11 + Christoffelgamtilde_LLL_222*invgamtilde_UU_12;
        amrex::Real Christoffelgamtilde_ULL_200 = Christoffelgamtilde_LLL_000*invgamtilde_UU_02 + Christoffelgamtilde_LLL_100*invgamtilde_UU_12 + Christoffelgamtilde_LLL_200*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_201 = Christoffelgamtilde_LLL_001*invgamtilde_UU_02 + Christoffelgamtilde_LLL_101*invgamtilde_UU_12 + Christoffelgamtilde_LLL_201*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_202 = Christoffelgamtilde_LLL_002*invgamtilde_UU_02 + Christoffelgamtilde_LLL_102*invgamtilde_UU_12 + Christoffelgamtilde_LLL_202*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_211 = Christoffelgamtilde_LLL_011*invgamtilde_UU_02 + Christoffelgamtilde_LLL_111*invgamtilde_UU_12 + Christoffelgamtilde_LLL_211*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_212 = Christoffelgamtilde_LLL_012*invgamtilde_UU_02 + Christoffelgamtilde_LLL_112*invgamtilde_UU_12 + Christoffelgamtilde_LLL_212*invgamtilde_UU_22;
        amrex::Real Christoffelgamtilde_ULL_222 = Christoffelgamtilde_LLL_022*invgamtilde_UU_02 + Christoffelgamtilde_LLL_122*invgamtilde_UU_12 + Christoffelgamtilde_LLL_222*invgamtilde_UU_22;

        amrex::Real ConformalChristoffelchigamtilde_ULL_000 = Christoffelgamtilde_ULL_000 + 0.5*dDchi_L_0*gamtilde_LL_00*invgamtilde_UU_00/chi - 1.0*dDchi_L_0/chi + 0.5*dDchi_L_1*gamtilde_LL_00*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_00*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_001 = Christoffelgamtilde_ULL_001 + 0.5*dDchi_L_0*gamtilde_LL_01*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_01*invgamtilde_UU_01/chi - 0.5*dDchi_L_1/chi + 0.5*dDchi_L_2*gamtilde_LL_01*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_002 = Christoffelgamtilde_ULL_002 + 0.5*dDchi_L_0*gamtilde_LL_02*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_02*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_02*invgamtilde_UU_02/chi - 0.5*dDchi_L_2/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_011 = Christoffelgamtilde_ULL_011 + 0.5*dDchi_L_0*gamtilde_LL_11*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_11*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_11*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_012 = Christoffelgamtilde_ULL_012 + 0.5*dDchi_L_0*gamtilde_LL_12*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_12*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_12*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_022 = Christoffelgamtilde_ULL_022 + 0.5*dDchi_L_0*gamtilde_LL_22*invgamtilde_UU_00/chi + 0.5*dDchi_L_1*gamtilde_LL_22*invgamtilde_UU_01/chi + 0.5*dDchi_L_2*gamtilde_LL_22*invgamtilde_UU_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_100 = Christoffelgamtilde_ULL_100 + 0.5*dDchi_L_0*gamtilde_LL_00*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_00*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_00*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_101 = Christoffelgamtilde_ULL_101 + 0.5*dDchi_L_0*gamtilde_LL_01*invgamtilde_UU_01/chi - 0.5*dDchi_L_0/chi + 0.5*dDchi_L_1*gamtilde_LL_01*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_01*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_102 = Christoffelgamtilde_ULL_102 + 0.5*dDchi_L_0*gamtilde_LL_02*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_02*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_02*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_111 = Christoffelgamtilde_ULL_111 + 0.5*dDchi_L_0*gamtilde_LL_11*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_11*invgamtilde_UU_11/chi - 1.0*dDchi_L_1/chi + 0.5*dDchi_L_2*gamtilde_LL_11*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_112 = Christoffelgamtilde_ULL_112 + 0.5*dDchi_L_0*gamtilde_LL_12*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_12*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_12*invgamtilde_UU_12/chi - 0.5*dDchi_L_2/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_122 = Christoffelgamtilde_ULL_122 + 0.5*dDchi_L_0*gamtilde_LL_22*invgamtilde_UU_01/chi + 0.5*dDchi_L_1*gamtilde_LL_22*invgamtilde_UU_11/chi + 0.5*dDchi_L_2*gamtilde_LL_22*invgamtilde_UU_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_200 = Christoffelgamtilde_ULL_200 + 0.5*dDchi_L_0*gamtilde_LL_00*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_00*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_00*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_201 = Christoffelgamtilde_ULL_201 + 0.5*dDchi_L_0*gamtilde_LL_01*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_01*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_01*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_202 = Christoffelgamtilde_ULL_202 + 0.5*dDchi_L_0*gamtilde_LL_02*invgamtilde_UU_02/chi - 0.5*dDchi_L_0/chi + 0.5*dDchi_L_1*gamtilde_LL_02*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_02*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_211 = Christoffelgamtilde_ULL_211 + 0.5*dDchi_L_0*gamtilde_LL_11*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_11*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_11*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_212 = Christoffelgamtilde_ULL_212 + 0.5*dDchi_L_0*gamtilde_LL_12*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_12*invgamtilde_UU_12/chi - 0.5*dDchi_L_1/chi + 0.5*dDchi_L_2*gamtilde_LL_12*invgamtilde_UU_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_ULL_222 = Christoffelgamtilde_ULL_222 + 0.5*dDchi_L_0*gamtilde_LL_22*invgamtilde_UU_02/chi + 0.5*dDchi_L_1*gamtilde_LL_22*invgamtilde_UU_12/chi + 0.5*dDchi_L_2*gamtilde_LL_22*invgamtilde_UU_22/chi - 1.0*dDchi_L_2/chi;

        amrex::Real ConformalChristoffelchigamtilde_LLL_000 = ConformalChristoffelchigamtilde_ULL_000*gamtilde_LL_00/chi + ConformalChristoffelchigamtilde_ULL_100*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_200*gamtilde_LL_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_001 = ConformalChristoffelchigamtilde_ULL_001*gamtilde_LL_00/chi + ConformalChristoffelchigamtilde_ULL_101*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_201*gamtilde_LL_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_002 = ConformalChristoffelchigamtilde_ULL_002*gamtilde_LL_00/chi + ConformalChristoffelchigamtilde_ULL_102*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_202*gamtilde_LL_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_011 = ConformalChristoffelchigamtilde_ULL_011*gamtilde_LL_00/chi + ConformalChristoffelchigamtilde_ULL_111*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_211*gamtilde_LL_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_012 = ConformalChristoffelchigamtilde_ULL_012*gamtilde_LL_00/chi + ConformalChristoffelchigamtilde_ULL_112*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_212*gamtilde_LL_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_022 = ConformalChristoffelchigamtilde_ULL_022*gamtilde_LL_00/chi + ConformalChristoffelchigamtilde_ULL_122*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_222*gamtilde_LL_02/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_100 = ConformalChristoffelchigamtilde_ULL_000*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_100*gamtilde_LL_11/chi + ConformalChristoffelchigamtilde_ULL_200*gamtilde_LL_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_101 = ConformalChristoffelchigamtilde_ULL_001*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_101*gamtilde_LL_11/chi + ConformalChristoffelchigamtilde_ULL_201*gamtilde_LL_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_102 = ConformalChristoffelchigamtilde_ULL_002*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_102*gamtilde_LL_11/chi + ConformalChristoffelchigamtilde_ULL_202*gamtilde_LL_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_111 = ConformalChristoffelchigamtilde_ULL_011*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_111*gamtilde_LL_11/chi + ConformalChristoffelchigamtilde_ULL_211*gamtilde_LL_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_112 = ConformalChristoffelchigamtilde_ULL_012*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_112*gamtilde_LL_11/chi + ConformalChristoffelchigamtilde_ULL_212*gamtilde_LL_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_122 = ConformalChristoffelchigamtilde_ULL_022*gamtilde_LL_01/chi + ConformalChristoffelchigamtilde_ULL_122*gamtilde_LL_11/chi + ConformalChristoffelchigamtilde_ULL_222*gamtilde_LL_12/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_200 = ConformalChristoffelchigamtilde_ULL_000*gamtilde_LL_02/chi + ConformalChristoffelchigamtilde_ULL_100*gamtilde_LL_12/chi + ConformalChristoffelchigamtilde_ULL_200*gamtilde_LL_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_201 = ConformalChristoffelchigamtilde_ULL_001*gamtilde_LL_02/chi + ConformalChristoffelchigamtilde_ULL_101*gamtilde_LL_12/chi + ConformalChristoffelchigamtilde_ULL_201*gamtilde_LL_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_202 = ConformalChristoffelchigamtilde_ULL_002*gamtilde_LL_02/chi + ConformalChristoffelchigamtilde_ULL_102*gamtilde_LL_12/chi + ConformalChristoffelchigamtilde_ULL_202*gamtilde_LL_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_211 = ConformalChristoffelchigamtilde_ULL_011*gamtilde_LL_02/chi + ConformalChristoffelchigamtilde_ULL_111*gamtilde_LL_12/chi + ConformalChristoffelchigamtilde_ULL_211*gamtilde_LL_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_212 = ConformalChristoffelchigamtilde_ULL_012*gamtilde_LL_02/chi + ConformalChristoffelchigamtilde_ULL_112*gamtilde_LL_12/chi + ConformalChristoffelchigamtilde_ULL_212*gamtilde_LL_22/chi;
        amrex::Real ConformalChristoffelchigamtilde_LLL_222 = ConformalChristoffelchigamtilde_ULL_022*gamtilde_LL_02/chi + ConformalChristoffelchigamtilde_ULL_122*gamtilde_LL_12/chi + ConformalChristoffelchigamtilde_ULL_222*gamtilde_LL_22/chi;

        amrex::Real gam_LL_00 = gamtilde_LL_00/chi;
        amrex::Real gam_LL_01 = gamtilde_LL_01/chi;
        amrex::Real gam_LL_02 = gamtilde_LL_02/chi;
        amrex::Real gam_LL_11 = gamtilde_LL_11/chi;
        amrex::Real gam_LL_12 = gamtilde_LL_12/chi;
        amrex::Real gam_LL_22 = gamtilde_LL_22/chi;

        amrex::Real invgam_UU_00 = chi*invgamtilde_UU_00;
        amrex::Real invgam_UU_01 = chi*invgamtilde_UU_01;
        amrex::Real invgam_UU_02 = chi*invgamtilde_UU_02;
        amrex::Real invgam_UU_11 = chi*invgamtilde_UU_11;
        amrex::Real invgam_UU_12 = chi*invgamtilde_UU_12;
        amrex::Real invgam_UU_22 = chi*invgamtilde_UU_22;

        amrex::Real dDDgam_LLLL_0000 = -dDDchi_LL_00*gamtilde_LL_00/std::pow(chi, 2) + dDDgamtilde_LLLL_0000/std::pow(chi, 2) - 2*dDchi_L_0*dDgamtilde_LLL_000/std::pow(chi, 2) + 2*std::pow(dDchi_L_0, 2)*gamtilde_LL_00/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0001 = -dDDchi_LL_01*gamtilde_LL_00/std::pow(chi, 2) + dDDgamtilde_LLLL_0001/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_001/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_000/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_1*gamtilde_LL_00/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0002 = -dDDchi_LL_02*gamtilde_LL_00/std::pow(chi, 2) + dDDgamtilde_LLLL_0002/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_002/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_000/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_2*gamtilde_LL_00/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0011 = -dDDchi_LL_11*gamtilde_LL_00/std::pow(chi, 2) + dDDgamtilde_LLLL_0011/std::pow(chi, 2) - 2*dDchi_L_1*dDgamtilde_LLL_001/std::pow(chi, 2) + 2*std::pow(dDchi_L_1, 2)*gamtilde_LL_00/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0012 = -dDDchi_LL_12*gamtilde_LL_00/std::pow(chi, 2) + dDDgamtilde_LLLL_0012/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_002/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_001/std::pow(chi, 2) + 2*dDchi_L_1*dDchi_L_2*gamtilde_LL_00/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0022 = -dDDchi_LL_22*gamtilde_LL_00/std::pow(chi, 2) + dDDgamtilde_LLLL_0022/std::pow(chi, 2) - 2*dDchi_L_2*dDgamtilde_LLL_002/std::pow(chi, 2) + 2*std::pow(dDchi_L_2, 2)*gamtilde_LL_00/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0100 = -dDDchi_LL_00*gamtilde_LL_01/std::pow(chi, 2) + dDDgamtilde_LLLL_0100/std::pow(chi, 2) - 2*dDchi_L_0*dDgamtilde_LLL_010/std::pow(chi, 2) + 2*std::pow(dDchi_L_0, 2)*gamtilde_LL_01/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0101 = -dDDchi_LL_01*gamtilde_LL_01/std::pow(chi, 2) + dDDgamtilde_LLLL_0101/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_011/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_010/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_1*gamtilde_LL_01/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0102 = -dDDchi_LL_02*gamtilde_LL_01/std::pow(chi, 2) + dDDgamtilde_LLLL_0102/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_012/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_010/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_2*gamtilde_LL_01/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0111 = -dDDchi_LL_11*gamtilde_LL_01/std::pow(chi, 2) + dDDgamtilde_LLLL_0111/std::pow(chi, 2) - 2*dDchi_L_1*dDgamtilde_LLL_011/std::pow(chi, 2) + 2*std::pow(dDchi_L_1, 2)*gamtilde_LL_01/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0112 = -dDDchi_LL_12*gamtilde_LL_01/std::pow(chi, 2) + dDDgamtilde_LLLL_0112/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_012/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_011/std::pow(chi, 2) + 2*dDchi_L_1*dDchi_L_2*gamtilde_LL_01/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0122 = -dDDchi_LL_22*gamtilde_LL_01/std::pow(chi, 2) + dDDgamtilde_LLLL_0122/std::pow(chi, 2) - 2*dDchi_L_2*dDgamtilde_LLL_012/std::pow(chi, 2) + 2*std::pow(dDchi_L_2, 2)*gamtilde_LL_01/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0200 = -dDDchi_LL_00*gamtilde_LL_02/std::pow(chi, 2) + dDDgamtilde_LLLL_0200/std::pow(chi, 2) - 2*dDchi_L_0*dDgamtilde_LLL_020/std::pow(chi, 2) + 2*std::pow(dDchi_L_0, 2)*gamtilde_LL_02/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0201 = -dDDchi_LL_01*gamtilde_LL_02/std::pow(chi, 2) + dDDgamtilde_LLLL_0201/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_021/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_020/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_1*gamtilde_LL_02/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0202 = -dDDchi_LL_02*gamtilde_LL_02/std::pow(chi, 2) + dDDgamtilde_LLLL_0202/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_022/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_020/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_2*gamtilde_LL_02/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0211 = -dDDchi_LL_11*gamtilde_LL_02/std::pow(chi, 2) + dDDgamtilde_LLLL_0211/std::pow(chi, 2) - 2*dDchi_L_1*dDgamtilde_LLL_021/std::pow(chi, 2) + 2*std::pow(dDchi_L_1, 2)*gamtilde_LL_02/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0212 = -dDDchi_LL_12*gamtilde_LL_02/std::pow(chi, 2) + dDDgamtilde_LLLL_0212/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_022/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_021/std::pow(chi, 2) + 2*dDchi_L_1*dDchi_L_2*gamtilde_LL_02/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_0222 = -dDDchi_LL_22*gamtilde_LL_02/std::pow(chi, 2) + dDDgamtilde_LLLL_0222/std::pow(chi, 2) - 2*dDchi_L_2*dDgamtilde_LLL_022/std::pow(chi, 2) + 2*std::pow(dDchi_L_2, 2)*gamtilde_LL_02/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1100 = -dDDchi_LL_00*gamtilde_LL_11/std::pow(chi, 2) + dDDgamtilde_LLLL_1100/std::pow(chi, 2) - 2*dDchi_L_0*dDgamtilde_LLL_110/std::pow(chi, 2) + 2*std::pow(dDchi_L_0, 2)*gamtilde_LL_11/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1101 = -dDDchi_LL_01*gamtilde_LL_11/std::pow(chi, 2) + dDDgamtilde_LLLL_1101/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_111/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_110/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_1*gamtilde_LL_11/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1102 = -dDDchi_LL_02*gamtilde_LL_11/std::pow(chi, 2) + dDDgamtilde_LLLL_1102/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_112/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_110/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_2*gamtilde_LL_11/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1111 = -dDDchi_LL_11*gamtilde_LL_11/std::pow(chi, 2) + dDDgamtilde_LLLL_1111/std::pow(chi, 2) - 2*dDchi_L_1*dDgamtilde_LLL_111/std::pow(chi, 2) + 2*std::pow(dDchi_L_1, 2)*gamtilde_LL_11/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1112 = -dDDchi_LL_12*gamtilde_LL_11/std::pow(chi, 2) + dDDgamtilde_LLLL_1112/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_112/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_111/std::pow(chi, 2) + 2*dDchi_L_1*dDchi_L_2*gamtilde_LL_11/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1122 = -dDDchi_LL_22*gamtilde_LL_11/std::pow(chi, 2) + dDDgamtilde_LLLL_1122/std::pow(chi, 2) - 2*dDchi_L_2*dDgamtilde_LLL_112/std::pow(chi, 2) + 2*std::pow(dDchi_L_2, 2)*gamtilde_LL_11/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1200 = -dDDchi_LL_00*gamtilde_LL_12/std::pow(chi, 2) + dDDgamtilde_LLLL_1200/std::pow(chi, 2) - 2*dDchi_L_0*dDgamtilde_LLL_120/std::pow(chi, 2) + 2*std::pow(dDchi_L_0, 2)*gamtilde_LL_12/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1201 = -dDDchi_LL_01*gamtilde_LL_12/std::pow(chi, 2) + dDDgamtilde_LLLL_1201/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_121/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_120/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_1*gamtilde_LL_12/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1202 = -dDDchi_LL_02*gamtilde_LL_12/std::pow(chi, 2) + dDDgamtilde_LLLL_1202/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_122/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_120/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_2*gamtilde_LL_12/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1211 = -dDDchi_LL_11*gamtilde_LL_12/std::pow(chi, 2) + dDDgamtilde_LLLL_1211/std::pow(chi, 2) - 2*dDchi_L_1*dDgamtilde_LLL_121/std::pow(chi, 2) + 2*std::pow(dDchi_L_1, 2)*gamtilde_LL_12/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1212 = -dDDchi_LL_12*gamtilde_LL_12/std::pow(chi, 2) + dDDgamtilde_LLLL_1212/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_122/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_121/std::pow(chi, 2) + 2*dDchi_L_1*dDchi_L_2*gamtilde_LL_12/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_1222 = -dDDchi_LL_22*gamtilde_LL_12/std::pow(chi, 2) + dDDgamtilde_LLLL_1222/std::pow(chi, 2) - 2*dDchi_L_2*dDgamtilde_LLL_122/std::pow(chi, 2) + 2*std::pow(dDchi_L_2, 2)*gamtilde_LL_12/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_2200 = -dDDchi_LL_00*gamtilde_LL_22/std::pow(chi, 2) + dDDgamtilde_LLLL_2200/std::pow(chi, 2) - 2*dDchi_L_0*dDgamtilde_LLL_220/std::pow(chi, 2) + 2*std::pow(dDchi_L_0, 2)*gamtilde_LL_22/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_2201 = -dDDchi_LL_01*gamtilde_LL_22/std::pow(chi, 2) + dDDgamtilde_LLLL_2201/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_221/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_220/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_1*gamtilde_LL_22/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_2202 = -dDDchi_LL_02*gamtilde_LL_22/std::pow(chi, 2) + dDDgamtilde_LLLL_2202/std::pow(chi, 2) - dDchi_L_0*dDgamtilde_LLL_222/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_220/std::pow(chi, 2) + 2*dDchi_L_0*dDchi_L_2*gamtilde_LL_22/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_2211 = -dDDchi_LL_11*gamtilde_LL_22/std::pow(chi, 2) + dDDgamtilde_LLLL_2211/std::pow(chi, 2) - 2*dDchi_L_1*dDgamtilde_LLL_221/std::pow(chi, 2) + 2*std::pow(dDchi_L_1, 2)*gamtilde_LL_22/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_2212 = -dDDchi_LL_12*gamtilde_LL_22/std::pow(chi, 2) + dDDgamtilde_LLLL_2212/std::pow(chi, 2) - dDchi_L_1*dDgamtilde_LLL_222/std::pow(chi, 2) - dDchi_L_2*dDgamtilde_LLL_221/std::pow(chi, 2) + 2*dDchi_L_1*dDchi_L_2*gamtilde_LL_22/std::pow(chi, 3);
        amrex::Real dDDgam_LLLL_2222 = -dDDchi_LL_22*gamtilde_LL_22/std::pow(chi, 2) + dDDgamtilde_LLLL_2222/std::pow(chi, 2) - 2*dDchi_L_2*dDgamtilde_LLL_222/std::pow(chi, 2) + 2*std::pow(dDchi_L_2, 2)*gamtilde_LL_22/std::pow(chi, 3);

        amrex::Real Riem_LLLL_0101 = ConformalChristoffelchigamtilde_LLL_001*ConformalChristoffelchigamtilde_ULL_001 - ConformalChristoffelchigamtilde_LLL_011*ConformalChristoffelchigamtilde_ULL_000 + ConformalChristoffelchigamtilde_LLL_101*ConformalChristoffelchigamtilde_ULL_101 - ConformalChristoffelchigamtilde_LLL_111*ConformalChristoffelchigamtilde_ULL_100 + ConformalChristoffelchigamtilde_LLL_201*ConformalChristoffelchigamtilde_ULL_201 - ConformalChristoffelchigamtilde_LLL_211*ConformalChristoffelchigamtilde_ULL_200 - 0.5*dDDgam_LLLL_0011 + 1.0*dDDgam_LLLL_0101 - 0.5*dDDgam_LLLL_1100;
        amrex::Real Riem_LLLL_0102 = ConformalChristoffelchigamtilde_LLL_001*ConformalChristoffelchigamtilde_ULL_002 - ConformalChristoffelchigamtilde_LLL_012*ConformalChristoffelchigamtilde_ULL_000 + ConformalChristoffelchigamtilde_LLL_101*ConformalChristoffelchigamtilde_ULL_102 - ConformalChristoffelchigamtilde_LLL_112*ConformalChristoffelchigamtilde_ULL_100 + ConformalChristoffelchigamtilde_LLL_201*ConformalChristoffelchigamtilde_ULL_202 - ConformalChristoffelchigamtilde_LLL_212*ConformalChristoffelchigamtilde_ULL_200 - 0.5*dDDgam_LLLL_0012 + 0.5*dDDgam_LLLL_0102 + 0.5*dDDgam_LLLL_0201 - 0.5*dDDgam_LLLL_1200;
        amrex::Real Riem_LLLL_0112 = ConformalChristoffelchigamtilde_LLL_011*ConformalChristoffelchigamtilde_ULL_002 - ConformalChristoffelchigamtilde_LLL_012*ConformalChristoffelchigamtilde_ULL_001 + ConformalChristoffelchigamtilde_LLL_111*ConformalChristoffelchigamtilde_ULL_102 - ConformalChristoffelchigamtilde_LLL_112*ConformalChristoffelchigamtilde_ULL_101 + ConformalChristoffelchigamtilde_LLL_211*ConformalChristoffelchigamtilde_ULL_202 - ConformalChristoffelchigamtilde_LLL_212*ConformalChristoffelchigamtilde_ULL_201 - 0.5*dDDgam_LLLL_0112 + 0.5*dDDgam_LLLL_0211 + 0.5*dDDgam_LLLL_1102 - 0.5*dDDgam_LLLL_1201;
        amrex::Real Riem_LLLL_0201 = ConformalChristoffelchigamtilde_LLL_002*ConformalChristoffelchigamtilde_ULL_001 - ConformalChristoffelchigamtilde_LLL_012*ConformalChristoffelchigamtilde_ULL_000 + ConformalChristoffelchigamtilde_LLL_102*ConformalChristoffelchigamtilde_ULL_101 - ConformalChristoffelchigamtilde_LLL_112*ConformalChristoffelchigamtilde_ULL_100 + ConformalChristoffelchigamtilde_LLL_202*ConformalChristoffelchigamtilde_ULL_201 - ConformalChristoffelchigamtilde_LLL_212*ConformalChristoffelchigamtilde_ULL_200 - 0.5*dDDgam_LLLL_0012 + 0.5*dDDgam_LLLL_0102 + 0.5*dDDgam_LLLL_0201 - 0.5*dDDgam_LLLL_1200;
        amrex::Real Riem_LLLL_0202 = ConformalChristoffelchigamtilde_LLL_002*ConformalChristoffelchigamtilde_ULL_002 - ConformalChristoffelchigamtilde_LLL_022*ConformalChristoffelchigamtilde_ULL_000 + ConformalChristoffelchigamtilde_LLL_102*ConformalChristoffelchigamtilde_ULL_102 - ConformalChristoffelchigamtilde_LLL_122*ConformalChristoffelchigamtilde_ULL_100 + ConformalChristoffelchigamtilde_LLL_202*ConformalChristoffelchigamtilde_ULL_202 - ConformalChristoffelchigamtilde_LLL_222*ConformalChristoffelchigamtilde_ULL_200 - 0.5*dDDgam_LLLL_0022 + 1.0*dDDgam_LLLL_0202 - 0.5*dDDgam_LLLL_2200;
        amrex::Real Riem_LLLL_0212 = ConformalChristoffelchigamtilde_LLL_012*ConformalChristoffelchigamtilde_ULL_002 - ConformalChristoffelchigamtilde_LLL_022*ConformalChristoffelchigamtilde_ULL_001 + ConformalChristoffelchigamtilde_LLL_112*ConformalChristoffelchigamtilde_ULL_102 - ConformalChristoffelchigamtilde_LLL_122*ConformalChristoffelchigamtilde_ULL_101 + ConformalChristoffelchigamtilde_LLL_212*ConformalChristoffelchigamtilde_ULL_202 - ConformalChristoffelchigamtilde_LLL_222*ConformalChristoffelchigamtilde_ULL_201 - 0.5*dDDgam_LLLL_0122 + 0.5*dDDgam_LLLL_0212 + 0.5*dDDgam_LLLL_1202 - 0.5*dDDgam_LLLL_2201;
        amrex::Real Riem_LLLL_1201 = ConformalChristoffelchigamtilde_LLL_002*ConformalChristoffelchigamtilde_ULL_011 - ConformalChristoffelchigamtilde_LLL_012*ConformalChristoffelchigamtilde_ULL_001 + ConformalChristoffelchigamtilde_LLL_102*ConformalChristoffelchigamtilde_ULL_111 - ConformalChristoffelchigamtilde_LLL_112*ConformalChristoffelchigamtilde_ULL_101 + ConformalChristoffelchigamtilde_LLL_202*ConformalChristoffelchigamtilde_ULL_211 - ConformalChristoffelchigamtilde_LLL_212*ConformalChristoffelchigamtilde_ULL_201 - 0.5*dDDgam_LLLL_0112 + 0.5*dDDgam_LLLL_0211 + 0.5*dDDgam_LLLL_1102 - 0.5*dDDgam_LLLL_1201;
        amrex::Real Riem_LLLL_1202 = ConformalChristoffelchigamtilde_LLL_002*ConformalChristoffelchigamtilde_ULL_012 - ConformalChristoffelchigamtilde_LLL_022*ConformalChristoffelchigamtilde_ULL_001 + ConformalChristoffelchigamtilde_LLL_102*ConformalChristoffelchigamtilde_ULL_112 - ConformalChristoffelchigamtilde_LLL_122*ConformalChristoffelchigamtilde_ULL_101 + ConformalChristoffelchigamtilde_LLL_202*ConformalChristoffelchigamtilde_ULL_212 - ConformalChristoffelchigamtilde_LLL_222*ConformalChristoffelchigamtilde_ULL_201 - 0.5*dDDgam_LLLL_0122 + 0.5*dDDgam_LLLL_0212 + 0.5*dDDgam_LLLL_1202 - 0.5*dDDgam_LLLL_2201;
        amrex::Real Riem_LLLL_1212 = ConformalChristoffelchigamtilde_LLL_012*ConformalChristoffelchigamtilde_ULL_012 - ConformalChristoffelchigamtilde_LLL_022*ConformalChristoffelchigamtilde_ULL_011 + ConformalChristoffelchigamtilde_LLL_112*ConformalChristoffelchigamtilde_ULL_112 - ConformalChristoffelchigamtilde_LLL_122*ConformalChristoffelchigamtilde_ULL_111 + ConformalChristoffelchigamtilde_LLL_212*ConformalChristoffelchigamtilde_ULL_212 - ConformalChristoffelchigamtilde_LLL_222*ConformalChristoffelchigamtilde_ULL_211 - 0.5*dDDgam_LLLL_1122 + 1.0*dDDgam_LLLL_1212 - 0.5*dDDgam_LLLL_2211;

        amrex::Real K_LL_00 = Atilde_LL_00/chi + 0.33333333333333331*gam_LL_00*(Khat + 2*theta);
        amrex::Real K_LL_01 = Atilde_LL_01/chi + 0.33333333333333331*gam_LL_01*(Khat + 2*theta);
        amrex::Real K_LL_02 = Atilde_LL_02/chi + 0.33333333333333331*gam_LL_02*(Khat + 2*theta);
        amrex::Real K_LL_11 = Atilde_LL_11/chi + 0.33333333333333331*gam_LL_11*(Khat + 2*theta);
        amrex::Real K_LL_12 = Atilde_LL_12/chi + 0.33333333333333331*gam_LL_12*(Khat + 2*theta);
        amrex::Real K_LL_22 = Atilde_LL_22/chi + 0.33333333333333331*gam_LL_22*(Khat + 2*theta);

        amrex::Real rank4term_LLLL_0101 = K_LL_00*K_LL_11 - std::pow(K_LL_01, 2) + Riem_LLLL_0101;
        amrex::Real rank4term_LLLL_0102 = K_LL_00*K_LL_12 - K_LL_01*K_LL_02 + Riem_LLLL_0102;
        amrex::Real rank4term_LLLL_0112 = K_LL_01*K_LL_12 - K_LL_02*K_LL_11 + Riem_LLLL_0112;
        amrex::Real rank4term_LLLL_0201 = K_LL_00*K_LL_12 - K_LL_01*K_LL_02 + Riem_LLLL_0201;
        amrex::Real rank4term_LLLL_0202 = K_LL_00*K_LL_22 - std::pow(K_LL_02, 2) + Riem_LLLL_0202;
        amrex::Real rank4term_LLLL_0212 = K_LL_01*K_LL_22 - K_LL_02*K_LL_12 + Riem_LLLL_0212;
        amrex::Real rank4term_LLLL_1201 = K_LL_01*K_LL_12 - K_LL_02*K_LL_11 + Riem_LLLL_1201;
        amrex::Real rank4term_LLLL_1202 = K_LL_01*K_LL_22 - K_LL_02*K_LL_12 + Riem_LLLL_1202;
        amrex::Real rank4term_LLLL_1212 = K_LL_11*K_LL_22 - std::pow(K_LL_12, 2) + Riem_LLLL_1212;

        amrex::Real dDK_LLL_000 = -K_LL_00*dDchi_L_0/chi + (dDAtilde_LLL_000 + 0.33333333333333331*dDgamtilde_LLL_000*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_00*(dDKhat_L_0 + 2*dDtheta_L_0))/chi;
        amrex::Real dDK_LLL_001 = -K_LL_00*dDchi_L_1/chi + (dDAtilde_LLL_001 + 0.33333333333333331*dDgamtilde_LLL_001*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_00*(dDKhat_L_1 + 2*dDtheta_L_1))/chi;
        amrex::Real dDK_LLL_002 = -K_LL_00*dDchi_L_2/chi + (dDAtilde_LLL_002 + 0.33333333333333331*dDgamtilde_LLL_002*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_00*(dDKhat_L_2 + 2*dDtheta_L_2))/chi;
        amrex::Real dDK_LLL_010 = -K_LL_01*dDchi_L_0/chi + (dDAtilde_LLL_010 + 0.33333333333333331*dDgamtilde_LLL_010*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_01*(dDKhat_L_0 + 2*dDtheta_L_0))/chi;
        amrex::Real dDK_LLL_011 = -K_LL_01*dDchi_L_1/chi + (dDAtilde_LLL_011 + 0.33333333333333331*dDgamtilde_LLL_011*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_01*(dDKhat_L_1 + 2*dDtheta_L_1))/chi;
        amrex::Real dDK_LLL_012 = -K_LL_01*dDchi_L_2/chi + (dDAtilde_LLL_012 + 0.33333333333333331*dDgamtilde_LLL_012*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_01*(dDKhat_L_2 + 2*dDtheta_L_2))/chi;
        amrex::Real dDK_LLL_020 = -K_LL_02*dDchi_L_0/chi + (dDAtilde_LLL_020 + 0.33333333333333331*dDgamtilde_LLL_020*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_02*(dDKhat_L_0 + 2*dDtheta_L_0))/chi;
        amrex::Real dDK_LLL_021 = -K_LL_02*dDchi_L_1/chi + (dDAtilde_LLL_021 + 0.33333333333333331*dDgamtilde_LLL_021*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_02*(dDKhat_L_1 + 2*dDtheta_L_1))/chi;
        amrex::Real dDK_LLL_022 = -K_LL_02*dDchi_L_2/chi + (dDAtilde_LLL_022 + 0.33333333333333331*dDgamtilde_LLL_022*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_02*(dDKhat_L_2 + 2*dDtheta_L_2))/chi;
        amrex::Real dDK_LLL_110 = -K_LL_11*dDchi_L_0/chi + (dDAtilde_LLL_110 + 0.33333333333333331*dDgamtilde_LLL_110*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_11*(dDKhat_L_0 + 2*dDtheta_L_0))/chi;
        amrex::Real dDK_LLL_111 = -K_LL_11*dDchi_L_1/chi + (dDAtilde_LLL_111 + 0.33333333333333331*dDgamtilde_LLL_111*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_11*(dDKhat_L_1 + 2*dDtheta_L_1))/chi;
        amrex::Real dDK_LLL_112 = -K_LL_11*dDchi_L_2/chi + (dDAtilde_LLL_112 + 0.33333333333333331*dDgamtilde_LLL_112*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_11*(dDKhat_L_2 + 2*dDtheta_L_2))/chi;
        amrex::Real dDK_LLL_120 = -K_LL_12*dDchi_L_0/chi + (dDAtilde_LLL_120 + 0.33333333333333331*dDgamtilde_LLL_120*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_12*(dDKhat_L_0 + 2*dDtheta_L_0))/chi;
        amrex::Real dDK_LLL_121 = -K_LL_12*dDchi_L_1/chi + (dDAtilde_LLL_121 + 0.33333333333333331*dDgamtilde_LLL_121*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_12*(dDKhat_L_1 + 2*dDtheta_L_1))/chi;
        amrex::Real dDK_LLL_122 = -K_LL_12*dDchi_L_2/chi + (dDAtilde_LLL_122 + 0.33333333333333331*dDgamtilde_LLL_122*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_12*(dDKhat_L_2 + 2*dDtheta_L_2))/chi;
        amrex::Real dDK_LLL_220 = -K_LL_22*dDchi_L_0/chi + (dDAtilde_LLL_220 + 0.33333333333333331*dDgamtilde_LLL_220*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_22*(dDKhat_L_0 + 2*dDtheta_L_0))/chi;
        amrex::Real dDK_LLL_221 = -K_LL_22*dDchi_L_1/chi + (dDAtilde_LLL_221 + 0.33333333333333331*dDgamtilde_LLL_221*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_22*(dDKhat_L_1 + 2*dDtheta_L_1))/chi;
        amrex::Real dDK_LLL_222 = -K_LL_22*dDchi_L_2/chi + (dDAtilde_LLL_222 + 0.33333333333333331*dDgamtilde_LLL_222*(Khat + 2*theta) + 0.33333333333333331*gamtilde_LL_22*(dDKhat_L_2 + 2*dDtheta_L_2))/chi;

        amrex::Real rank3term_LLL_001 = -4*ConformalChristoffelchigamtilde_ULL_000*K_LL_01 + 4*ConformalChristoffelchigamtilde_ULL_001*K_LL_00 - 4*ConformalChristoffelchigamtilde_ULL_100*K_LL_11 + 4*ConformalChristoffelchigamtilde_ULL_101*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_200*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_201*K_LL_02 - 4*dDK_LLL_001 + 4*dDK_LLL_010;
        amrex::Real rank3term_LLL_002 = -4*ConformalChristoffelchigamtilde_ULL_000*K_LL_02 + 4*ConformalChristoffelchigamtilde_ULL_002*K_LL_00 - 4*ConformalChristoffelchigamtilde_ULL_100*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_102*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_200*K_LL_22 + 4*ConformalChristoffelchigamtilde_ULL_202*K_LL_02 - 4*dDK_LLL_002 + 4*dDK_LLL_020;
        amrex::Real rank3term_LLL_012 = -4*ConformalChristoffelchigamtilde_ULL_001*K_LL_02 + 4*ConformalChristoffelchigamtilde_ULL_002*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_101*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_102*K_LL_11 - 4*ConformalChristoffelchigamtilde_ULL_201*K_LL_22 + 4*ConformalChristoffelchigamtilde_ULL_202*K_LL_12 - 4*dDK_LLL_012 + 4*dDK_LLL_021;
        amrex::Real rank3term_LLL_101 = -4*ConformalChristoffelchigamtilde_ULL_001*K_LL_01 + 4*ConformalChristoffelchigamtilde_ULL_011*K_LL_00 - 4*ConformalChristoffelchigamtilde_ULL_101*K_LL_11 + 4*ConformalChristoffelchigamtilde_ULL_111*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_201*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_211*K_LL_02 - 4*dDK_LLL_011 + 4*dDK_LLL_110;
        amrex::Real rank3term_LLL_102 = -4*ConformalChristoffelchigamtilde_ULL_001*K_LL_02 + 4*ConformalChristoffelchigamtilde_ULL_012*K_LL_00 - 4*ConformalChristoffelchigamtilde_ULL_101*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_112*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_201*K_LL_22 + 4*ConformalChristoffelchigamtilde_ULL_212*K_LL_02 - 4*dDK_LLL_012 + 4*dDK_LLL_120;
        amrex::Real rank3term_LLL_112 = -4*ConformalChristoffelchigamtilde_ULL_011*K_LL_02 + 4*ConformalChristoffelchigamtilde_ULL_012*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_111*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_112*K_LL_11 - 4*ConformalChristoffelchigamtilde_ULL_211*K_LL_22 + 4*ConformalChristoffelchigamtilde_ULL_212*K_LL_12 - 4*dDK_LLL_112 + 4*dDK_LLL_121;
        amrex::Real rank3term_LLL_201 = -4*ConformalChristoffelchigamtilde_ULL_002*K_LL_01 + 4*ConformalChristoffelchigamtilde_ULL_012*K_LL_00 - 4*ConformalChristoffelchigamtilde_ULL_102*K_LL_11 + 4*ConformalChristoffelchigamtilde_ULL_112*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_202*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_212*K_LL_02 - 4*dDK_LLL_021 + 4*dDK_LLL_120;
        amrex::Real rank3term_LLL_202 = -4*ConformalChristoffelchigamtilde_ULL_002*K_LL_02 + 4*ConformalChristoffelchigamtilde_ULL_022*K_LL_00 - 4*ConformalChristoffelchigamtilde_ULL_102*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_122*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_202*K_LL_22 + 4*ConformalChristoffelchigamtilde_ULL_222*K_LL_02 - 4*dDK_LLL_022 + 4*dDK_LLL_220;
        amrex::Real rank3term_LLL_212 = -4*ConformalChristoffelchigamtilde_ULL_012*K_LL_02 + 4*ConformalChristoffelchigamtilde_ULL_022*K_LL_01 - 4*ConformalChristoffelchigamtilde_ULL_112*K_LL_12 + 4*ConformalChristoffelchigamtilde_ULL_122*K_LL_11 - 4*ConformalChristoffelchigamtilde_ULL_212*K_LL_22 + 4*ConformalChristoffelchigamtilde_ULL_222*K_LL_12 - 4*dDK_LLL_122 + 4*dDK_LLL_221;

        amrex::Real Ricci_LL_00 = Riem_LLLL_0101*invgam_UU_11 + Riem_LLLL_0102*invgam_UU_12 + Riem_LLLL_0201*invgam_UU_12 + Riem_LLLL_0202*invgam_UU_22;
        amrex::Real Ricci_LL_01 = -Riem_LLLL_0101*invgam_UU_01 + Riem_LLLL_0112*invgam_UU_12 - Riem_LLLL_0201*invgam_UU_02 + Riem_LLLL_0212*invgam_UU_22;
        amrex::Real Ricci_LL_02 = -Riem_LLLL_0102*invgam_UU_01 - Riem_LLLL_0112*invgam_UU_11 - Riem_LLLL_0202*invgam_UU_02 - Riem_LLLL_0212*invgam_UU_12;
        amrex::Real Ricci_LL_11 = Riem_LLLL_0101*invgam_UU_00 - Riem_LLLL_0112*invgam_UU_02 - Riem_LLLL_1201*invgam_UU_02 + Riem_LLLL_1212*invgam_UU_22;
        amrex::Real Ricci_LL_12 = Riem_LLLL_0102*invgam_UU_00 + Riem_LLLL_0112*invgam_UU_01 - Riem_LLLL_1202*invgam_UU_02 - Riem_LLLL_1212*invgam_UU_12;
        amrex::Real Ricci_LL_22 = Riem_LLLL_0202*invgam_UU_00 + Riem_LLLL_0212*invgam_UU_01 + Riem_LLLL_1202*invgam_UU_01 + Riem_LLLL_1212*invgam_UU_11;

        amrex::Real rank2term_LL_00 = -4*std::pow(K_LL_00, 2)*invgam_UU_00 - 8*K_LL_00*K_LL_01*invgam_UU_01 - 8*K_LL_00*K_LL_02*invgam_UU_02 + 4*K_LL_00*(Khat + 2*theta) - 4*std::pow(K_LL_01, 2)*invgam_UU_11 - 8*K_LL_01*K_LL_02*invgam_UU_12 - 4*std::pow(K_LL_02, 2)*invgam_UU_22 + 4*Ricci_LL_00;
        amrex::Real rank2term_LL_01 = -4*K_LL_00*K_LL_01*invgam_UU_00 - 4*K_LL_00*K_LL_11*invgam_UU_01 - 4*K_LL_00*K_LL_12*invgam_UU_02 - 4*std::pow(K_LL_01, 2)*invgam_UU_01 - 4*K_LL_01*K_LL_02*invgam_UU_02 - 4*K_LL_01*K_LL_11*invgam_UU_11 - 4*K_LL_01*K_LL_12*invgam_UU_12 + 4*K_LL_01*(Khat + 2*theta) - 4*K_LL_02*K_LL_11*invgam_UU_12 - 4*K_LL_02*K_LL_12*invgam_UU_22 + 4*Ricci_LL_01;
        amrex::Real rank2term_LL_02 = -4*K_LL_00*K_LL_02*invgam_UU_00 - 4*K_LL_00*K_LL_12*invgam_UU_01 - 4*K_LL_00*K_LL_22*invgam_UU_02 - 4*K_LL_01*K_LL_02*invgam_UU_01 - 4*K_LL_01*K_LL_12*invgam_UU_11 - 4*K_LL_01*K_LL_22*invgam_UU_12 - 4*std::pow(K_LL_02, 2)*invgam_UU_02 - 4*K_LL_02*K_LL_12*invgam_UU_12 - 4*K_LL_02*K_LL_22*invgam_UU_22 + 4*K_LL_02*(Khat + 2*theta) + 4*Ricci_LL_02;
        amrex::Real rank2term_LL_11 = -4*std::pow(K_LL_01, 2)*invgam_UU_00 - 8*K_LL_01*K_LL_11*invgam_UU_01 - 8*K_LL_01*K_LL_12*invgam_UU_02 - 4*std::pow(K_LL_11, 2)*invgam_UU_11 - 8*K_LL_11*K_LL_12*invgam_UU_12 + 4*K_LL_11*(Khat + 2*theta) - 4*std::pow(K_LL_12, 2)*invgam_UU_22 + 4*Ricci_LL_11;
        amrex::Real rank2term_LL_12 = -4*K_LL_01*K_LL_02*invgam_UU_00 - 4*K_LL_01*K_LL_12*invgam_UU_01 - 4*K_LL_01*K_LL_22*invgam_UU_02 - 4*K_LL_02*K_LL_11*invgam_UU_01 - 4*K_LL_02*K_LL_12*invgam_UU_02 - 4*K_LL_11*K_LL_12*invgam_UU_11 - 4*K_LL_11*K_LL_22*invgam_UU_12 - 4*std::pow(K_LL_12, 2)*invgam_UU_12 - 4*K_LL_12*K_LL_22*invgam_UU_22 + 4*K_LL_12*(Khat + 2*theta) + 4*Ricci_LL_12;
        amrex::Real rank2term_LL_22 = -4*std::pow(K_LL_02, 2)*invgam_UU_00 - 8*K_LL_02*K_LL_12*invgam_UU_01 - 8*K_LL_02*K_LL_22*invgam_UU_02 - 4*std::pow(K_LL_12, 2)*invgam_UU_11 - 8*K_LL_12*K_LL_22*invgam_UU_12 - 4*std::pow(K_LL_22, 2)*invgam_UU_22 + 4*K_LL_22*(Khat + 2*theta) + 4*Ricci_LL_22;

        amrex::Real v1_U_0 = -x_U_1;
        amrex::Real v1_U_1 = x_U_0;
        amrex::Real v1_U_2 = 0;

        amrex::Real v2_U_0 = x_U_0;
        amrex::Real v2_U_1 = x_U_1;
        amrex::Real v2_U_2 = x_U_2;

        amrex::Real v3_U_0 = std::pow(chi, -1.5)*invgam_UU_00*v1_U_1*v2_U_2 - std::pow(chi, -1.5)*invgam_UU_00*v1_U_2*v2_U_1 - std::pow(chi, -1.5)*invgam_UU_01*v1_U_0*v2_U_2 + std::pow(chi, -1.5)*invgam_UU_01*v1_U_2*v2_U_0 + std::pow(chi, -1.5)*invgam_UU_02*v1_U_0*v2_U_1 - std::pow(chi, -1.5)*invgam_UU_02*v1_U_1*v2_U_0;
        amrex::Real v3_U_1 = std::pow(chi, -1.5)*invgam_UU_01*v1_U_1*v2_U_2 - std::pow(chi, -1.5)*invgam_UU_01*v1_U_2*v2_U_1 - std::pow(chi, -1.5)*invgam_UU_11*v1_U_0*v2_U_2 + std::pow(chi, -1.5)*invgam_UU_11*v1_U_2*v2_U_0 + std::pow(chi, -1.5)*invgam_UU_12*v1_U_0*v2_U_1 - std::pow(chi, -1.5)*invgam_UU_12*v1_U_1*v2_U_0;
        amrex::Real v3_U_2 = std::pow(chi, -1.5)*invgam_UU_02*v1_U_1*v2_U_2 - std::pow(chi, -1.5)*invgam_UU_02*v1_U_2*v2_U_1 - std::pow(chi, -1.5)*invgam_UU_12*v1_U_0*v2_U_2 + std::pow(chi, -1.5)*invgam_UU_12*v1_U_2*v2_U_0 + std::pow(chi, -1.5)*invgam_UU_22*v1_U_0*v2_U_1 - std::pow(chi, -1.5)*invgam_UU_22*v1_U_1*v2_U_0;

        amrex::Real v1prime_U_0 = v1_U_0;
        amrex::Real v1prime_U_1 = v1_U_1;
        amrex::Real v1prime_U_2 = v1_U_2;

        amrex::Real omega11 = gam_LL_00*std::pow(v1prime_U_0, 2) + 2*gam_LL_01*v1prime_U_0*v1prime_U_1 + 2*gam_LL_02*v1prime_U_0*v1prime_U_2 + gam_LL_11*std::pow(v1prime_U_1, 2) + 2*gam_LL_12*v1prime_U_1*v1prime_U_2 + gam_LL_22*std::pow(v1prime_U_2, 2);

        amrex::Real e1_U_0 = v1prime_U_0/std::sqrt(omega11);
        amrex::Real e1_U_1 = v1prime_U_1/std::sqrt(omega11);
        amrex::Real e1_U_2 = v1prime_U_2/std::sqrt(omega11);

        amrex::Real omega12 = e1_U_0*gam_LL_00*v2_U_0 + e1_U_0*gam_LL_01*v2_U_1 + e1_U_0*gam_LL_02*v2_U_2 + e1_U_1*gam_LL_01*v2_U_0 + e1_U_1*gam_LL_11*v2_U_1 + e1_U_1*gam_LL_12*v2_U_2 + e1_U_2*gam_LL_02*v2_U_0 + e1_U_2*gam_LL_12*v2_U_1 + e1_U_2*gam_LL_22*v2_U_2;

        amrex::Real v2prime_U_0 = -e1_U_0*omega12 + v2_U_0;
        amrex::Real v2prime_U_1 = -e1_U_1*omega12 + v2_U_1;
        amrex::Real v2prime_U_2 = -e1_U_2*omega12 + v2_U_2;

        amrex::Real omega22 = gam_LL_00*std::pow(v2prime_U_0, 2) + 2*gam_LL_01*v2prime_U_0*v2prime_U_1 + 2*gam_LL_02*v2prime_U_0*v2prime_U_2 + gam_LL_11*std::pow(v2prime_U_1, 2) + 2*gam_LL_12*v2prime_U_1*v2prime_U_2 + gam_LL_22*std::pow(v2prime_U_2, 2);

        amrex::Real e2_U_0 = v2prime_U_0/std::sqrt(omega22);
        amrex::Real e2_U_1 = v2prime_U_1/std::sqrt(omega22);
        amrex::Real e2_U_2 = v2prime_U_2/std::sqrt(omega22);

        amrex::Real omega13 = e1_U_0*gam_LL_00*v3_U_0 + e1_U_0*gam_LL_01*v3_U_1 + e1_U_0*gam_LL_02*v3_U_2 + e1_U_1*gam_LL_01*v3_U_0 + e1_U_1*gam_LL_11*v3_U_1 + e1_U_1*gam_LL_12*v3_U_2 + e1_U_2*gam_LL_02*v3_U_0 + e1_U_2*gam_LL_12*v3_U_1 + e1_U_2*gam_LL_22*v3_U_2;

        amrex::Real omega23 = e2_U_0*gam_LL_00*v3_U_0 + e2_U_0*gam_LL_01*v3_U_1 + e2_U_0*gam_LL_02*v3_U_2 + e2_U_1*gam_LL_01*v3_U_0 + e2_U_1*gam_LL_11*v3_U_1 + e2_U_1*gam_LL_12*v3_U_2 + e2_U_2*gam_LL_02*v3_U_0 + e2_U_2*gam_LL_12*v3_U_1 + e2_U_2*gam_LL_22*v3_U_2;

        amrex::Real v3prime_U_0 = -e1_U_0*omega13 - e2_U_0*omega23 + v3_U_0;
        amrex::Real v3prime_U_1 = -e1_U_1*omega13 - e2_U_1*omega23 + v3_U_1;
        amrex::Real v3prime_U_2 = -e1_U_2*omega13 - e2_U_2*omega23 + v3_U_2;

        amrex::Real omega33 = gam_LL_00*std::pow(v3prime_U_0, 2) + 2*gam_LL_01*v3prime_U_0*v3prime_U_1 + 2*gam_LL_02*v3prime_U_0*v3prime_U_2 + gam_LL_11*std::pow(v3prime_U_1, 2) + 2*gam_LL_12*v3prime_U_1*v3prime_U_2 + gam_LL_22*std::pow(v3prime_U_2, 2);

        amrex::Real e3_U_0 = v3prime_U_0/std::sqrt(omega33);
        amrex::Real e3_U_1 = v3prime_U_1/std::sqrt(omega33);
        amrex::Real e3_U_2 = v3prime_U_2/std::sqrt(omega33);

        amrex::Real u_U_0 = -beta_U_0/alpha;
        amrex::Real u_U_1 = -beta_U_1/alpha;
        amrex::Real u_U_2 = -beta_U_2/alpha;
        amrex::Real u_U_3 = 1.0/alpha;

        amrex::Real r_U_0 = e2_U_0;
        amrex::Real r_U_1 = e2_U_1;
        amrex::Real r_U_2 = e2_U_2;
        amrex::Real r_U_3 = 0;

        amrex::Real theta_U_0 = e3_U_0;
        amrex::Real theta_U_1 = e3_U_1;
        amrex::Real theta_U_2 = e3_U_2;
        amrex::Real theta_U_3 = 0;

        amrex::Real phi_U_0 = e1_U_0;
        amrex::Real phi_U_1 = e1_U_1;
        amrex::Real phi_U_2 = e1_U_2;
        amrex::Real phi_U_3 = 0;

        amrex::Real l_U_0 = (1.0/2.0)*M_SQRT2*(r_U_0 + u_U_0);
        amrex::Real l_U_1 = (1.0/2.0)*M_SQRT2*(r_U_1 + u_U_1);
        amrex::Real l_U_2 = (1.0/2.0)*M_SQRT2*(r_U_2 + u_U_2);
        amrex::Real l_U_3 = (1.0/2.0)*M_SQRT2*(r_U_3 + u_U_3);

        amrex::Real n_U_0 = (1.0/2.0)*M_SQRT2*(-r_U_0 + u_U_0);
        amrex::Real n_U_1 = (1.0/2.0)*M_SQRT2*(-r_U_1 + u_U_1);
        amrex::Real n_U_2 = (1.0/2.0)*M_SQRT2*(-r_U_2 + u_U_2);
        amrex::Real n_U_3 = (1.0/2.0)*M_SQRT2*(-r_U_3 + u_U_3);

        amrex::Real mre_U_0 = (1.0/2.0)*M_SQRT2*theta_U_0;
        amrex::Real mre_U_1 = (1.0/2.0)*M_SQRT2*theta_U_1;
        amrex::Real mre_U_2 = (1.0/2.0)*M_SQRT2*theta_U_2;
        amrex::Real mre_U_3 = (1.0/2.0)*M_SQRT2*theta_U_3;

        amrex::Real mim_U_0 = (1.0/2.0)*M_SQRT2*phi_U_0;
        amrex::Real mim_U_1 = (1.0/2.0)*M_SQRT2*phi_U_1;
        amrex::Real mim_U_2 = (1.0/2.0)*M_SQRT2*phi_U_2;
        amrex::Real mim_U_3 = (1.0/2.0)*M_SQRT2*phi_U_3;

        amrex::Real nmnmre_UUUU_0000 = -std::pow(mim_U_0, 2)*std::pow(n_U_0, 2) + std::pow(mre_U_0, 2)*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0001 = -mim_U_0*mim_U_1*std::pow(n_U_0, 2) + mre_U_0*mre_U_1*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0002 = -mim_U_0*mim_U_2*std::pow(n_U_0, 2) + mre_U_0*mre_U_2*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0003 = -mim_U_0*mim_U_3*std::pow(n_U_0, 2) + mre_U_0*mre_U_3*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0010 = -std::pow(mim_U_0, 2)*n_U_0*n_U_1 + std::pow(mre_U_0, 2)*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0011 = -mim_U_0*mim_U_1*n_U_0*n_U_1 + mre_U_0*mre_U_1*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0012 = -mim_U_0*mim_U_2*n_U_0*n_U_1 + mre_U_0*mre_U_2*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0013 = -mim_U_0*mim_U_3*n_U_0*n_U_1 + mre_U_0*mre_U_3*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0020 = -std::pow(mim_U_0, 2)*n_U_0*n_U_2 + std::pow(mre_U_0, 2)*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0021 = -mim_U_0*mim_U_1*n_U_0*n_U_2 + mre_U_0*mre_U_1*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0022 = -mim_U_0*mim_U_2*n_U_0*n_U_2 + mre_U_0*mre_U_2*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0023 = -mim_U_0*mim_U_3*n_U_0*n_U_2 + mre_U_0*mre_U_3*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0030 = -std::pow(mim_U_0, 2)*n_U_0*n_U_3 + std::pow(mre_U_0, 2)*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0031 = -mim_U_0*mim_U_1*n_U_0*n_U_3 + mre_U_0*mre_U_1*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0032 = -mim_U_0*mim_U_2*n_U_0*n_U_3 + mre_U_0*mre_U_2*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0033 = -mim_U_0*mim_U_3*n_U_0*n_U_3 + mre_U_0*mre_U_3*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0101 = -std::pow(mim_U_1, 2)*std::pow(n_U_0, 2) + std::pow(mre_U_1, 2)*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0102 = -mim_U_1*mim_U_2*std::pow(n_U_0, 2) + mre_U_1*mre_U_2*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0103 = -mim_U_1*mim_U_3*std::pow(n_U_0, 2) + mre_U_1*mre_U_3*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0111 = -std::pow(mim_U_1, 2)*n_U_0*n_U_1 + std::pow(mre_U_1, 2)*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0112 = -mim_U_1*mim_U_2*n_U_0*n_U_1 + mre_U_1*mre_U_2*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0113 = -mim_U_1*mim_U_3*n_U_0*n_U_1 + mre_U_1*mre_U_3*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0121 = -std::pow(mim_U_1, 2)*n_U_0*n_U_2 + std::pow(mre_U_1, 2)*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0122 = -mim_U_1*mim_U_2*n_U_0*n_U_2 + mre_U_1*mre_U_2*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0123 = -mim_U_1*mim_U_3*n_U_0*n_U_2 + mre_U_1*mre_U_3*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0131 = -std::pow(mim_U_1, 2)*n_U_0*n_U_3 + std::pow(mre_U_1, 2)*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0132 = -mim_U_1*mim_U_2*n_U_0*n_U_3 + mre_U_1*mre_U_2*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0133 = -mim_U_1*mim_U_3*n_U_0*n_U_3 + mre_U_1*mre_U_3*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0202 = -std::pow(mim_U_2, 2)*std::pow(n_U_0, 2) + std::pow(mre_U_2, 2)*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0203 = -mim_U_2*mim_U_3*std::pow(n_U_0, 2) + mre_U_2*mre_U_3*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0212 = -std::pow(mim_U_2, 2)*n_U_0*n_U_1 + std::pow(mre_U_2, 2)*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0213 = -mim_U_2*mim_U_3*n_U_0*n_U_1 + mre_U_2*mre_U_3*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0222 = -std::pow(mim_U_2, 2)*n_U_0*n_U_2 + std::pow(mre_U_2, 2)*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0223 = -mim_U_2*mim_U_3*n_U_0*n_U_2 + mre_U_2*mre_U_3*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0232 = -std::pow(mim_U_2, 2)*n_U_0*n_U_3 + std::pow(mre_U_2, 2)*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0233 = -mim_U_2*mim_U_3*n_U_0*n_U_3 + mre_U_2*mre_U_3*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_0303 = -std::pow(mim_U_3, 2)*std::pow(n_U_0, 2) + std::pow(mre_U_3, 2)*std::pow(n_U_0, 2);
        amrex::Real nmnmre_UUUU_0313 = -std::pow(mim_U_3, 2)*n_U_0*n_U_1 + std::pow(mre_U_3, 2)*n_U_0*n_U_1;
        amrex::Real nmnmre_UUUU_0323 = -std::pow(mim_U_3, 2)*n_U_0*n_U_2 + std::pow(mre_U_3, 2)*n_U_0*n_U_2;
        amrex::Real nmnmre_UUUU_0333 = -std::pow(mim_U_3, 2)*n_U_0*n_U_3 + std::pow(mre_U_3, 2)*n_U_0*n_U_3;
        amrex::Real nmnmre_UUUU_1010 = -std::pow(mim_U_0, 2)*std::pow(n_U_1, 2) + std::pow(mre_U_0, 2)*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1011 = -mim_U_0*mim_U_1*std::pow(n_U_1, 2) + mre_U_0*mre_U_1*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1012 = -mim_U_0*mim_U_2*std::pow(n_U_1, 2) + mre_U_0*mre_U_2*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1013 = -mim_U_0*mim_U_3*std::pow(n_U_1, 2) + mre_U_0*mre_U_3*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1020 = -std::pow(mim_U_0, 2)*n_U_1*n_U_2 + std::pow(mre_U_0, 2)*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1021 = -mim_U_0*mim_U_1*n_U_1*n_U_2 + mre_U_0*mre_U_1*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1022 = -mim_U_0*mim_U_2*n_U_1*n_U_2 + mre_U_0*mre_U_2*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1023 = -mim_U_0*mim_U_3*n_U_1*n_U_2 + mre_U_0*mre_U_3*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1030 = -std::pow(mim_U_0, 2)*n_U_1*n_U_3 + std::pow(mre_U_0, 2)*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1031 = -mim_U_0*mim_U_1*n_U_1*n_U_3 + mre_U_0*mre_U_1*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1032 = -mim_U_0*mim_U_2*n_U_1*n_U_3 + mre_U_0*mre_U_2*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1033 = -mim_U_0*mim_U_3*n_U_1*n_U_3 + mre_U_0*mre_U_3*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1111 = -std::pow(mim_U_1, 2)*std::pow(n_U_1, 2) + std::pow(mre_U_1, 2)*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1112 = -mim_U_1*mim_U_2*std::pow(n_U_1, 2) + mre_U_1*mre_U_2*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1113 = -mim_U_1*mim_U_3*std::pow(n_U_1, 2) + mre_U_1*mre_U_3*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1121 = -std::pow(mim_U_1, 2)*n_U_1*n_U_2 + std::pow(mre_U_1, 2)*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1122 = -mim_U_1*mim_U_2*n_U_1*n_U_2 + mre_U_1*mre_U_2*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1123 = -mim_U_1*mim_U_3*n_U_1*n_U_2 + mre_U_1*mre_U_3*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1131 = -std::pow(mim_U_1, 2)*n_U_1*n_U_3 + std::pow(mre_U_1, 2)*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1132 = -mim_U_1*mim_U_2*n_U_1*n_U_3 + mre_U_1*mre_U_2*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1133 = -mim_U_1*mim_U_3*n_U_1*n_U_3 + mre_U_1*mre_U_3*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1212 = -std::pow(mim_U_2, 2)*std::pow(n_U_1, 2) + std::pow(mre_U_2, 2)*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1213 = -mim_U_2*mim_U_3*std::pow(n_U_1, 2) + mre_U_2*mre_U_3*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1222 = -std::pow(mim_U_2, 2)*n_U_1*n_U_2 + std::pow(mre_U_2, 2)*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1223 = -mim_U_2*mim_U_3*n_U_1*n_U_2 + mre_U_2*mre_U_3*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1232 = -std::pow(mim_U_2, 2)*n_U_1*n_U_3 + std::pow(mre_U_2, 2)*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1233 = -mim_U_2*mim_U_3*n_U_1*n_U_3 + mre_U_2*mre_U_3*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_1313 = -std::pow(mim_U_3, 2)*std::pow(n_U_1, 2) + std::pow(mre_U_3, 2)*std::pow(n_U_1, 2);
        amrex::Real nmnmre_UUUU_1323 = -std::pow(mim_U_3, 2)*n_U_1*n_U_2 + std::pow(mre_U_3, 2)*n_U_1*n_U_2;
        amrex::Real nmnmre_UUUU_1333 = -std::pow(mim_U_3, 2)*n_U_1*n_U_3 + std::pow(mre_U_3, 2)*n_U_1*n_U_3;
        amrex::Real nmnmre_UUUU_2020 = -std::pow(mim_U_0, 2)*std::pow(n_U_2, 2) + std::pow(mre_U_0, 2)*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2021 = -mim_U_0*mim_U_1*std::pow(n_U_2, 2) + mre_U_0*mre_U_1*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2022 = -mim_U_0*mim_U_2*std::pow(n_U_2, 2) + mre_U_0*mre_U_2*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2023 = -mim_U_0*mim_U_3*std::pow(n_U_2, 2) + mre_U_0*mre_U_3*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2030 = -std::pow(mim_U_0, 2)*n_U_2*n_U_3 + std::pow(mre_U_0, 2)*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2031 = -mim_U_0*mim_U_1*n_U_2*n_U_3 + mre_U_0*mre_U_1*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2032 = -mim_U_0*mim_U_2*n_U_2*n_U_3 + mre_U_0*mre_U_2*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2033 = -mim_U_0*mim_U_3*n_U_2*n_U_3 + mre_U_0*mre_U_3*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2121 = -std::pow(mim_U_1, 2)*std::pow(n_U_2, 2) + std::pow(mre_U_1, 2)*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2122 = -mim_U_1*mim_U_2*std::pow(n_U_2, 2) + mre_U_1*mre_U_2*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2123 = -mim_U_1*mim_U_3*std::pow(n_U_2, 2) + mre_U_1*mre_U_3*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2131 = -std::pow(mim_U_1, 2)*n_U_2*n_U_3 + std::pow(mre_U_1, 2)*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2132 = -mim_U_1*mim_U_2*n_U_2*n_U_3 + mre_U_1*mre_U_2*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2133 = -mim_U_1*mim_U_3*n_U_2*n_U_3 + mre_U_1*mre_U_3*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2222 = -std::pow(mim_U_2, 2)*std::pow(n_U_2, 2) + std::pow(mre_U_2, 2)*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2223 = -mim_U_2*mim_U_3*std::pow(n_U_2, 2) + mre_U_2*mre_U_3*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2232 = -std::pow(mim_U_2, 2)*n_U_2*n_U_3 + std::pow(mre_U_2, 2)*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2233 = -mim_U_2*mim_U_3*n_U_2*n_U_3 + mre_U_2*mre_U_3*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_2323 = -std::pow(mim_U_3, 2)*std::pow(n_U_2, 2) + std::pow(mre_U_3, 2)*std::pow(n_U_2, 2);
        amrex::Real nmnmre_UUUU_2333 = -std::pow(mim_U_3, 2)*n_U_2*n_U_3 + std::pow(mre_U_3, 2)*n_U_2*n_U_3;
        amrex::Real nmnmre_UUUU_3030 = -std::pow(mim_U_0, 2)*std::pow(n_U_3, 2) + std::pow(mre_U_0, 2)*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3031 = -mim_U_0*mim_U_1*std::pow(n_U_3, 2) + mre_U_0*mre_U_1*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3032 = -mim_U_0*mim_U_2*std::pow(n_U_3, 2) + mre_U_0*mre_U_2*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3033 = -mim_U_0*mim_U_3*std::pow(n_U_3, 2) + mre_U_0*mre_U_3*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3131 = -std::pow(mim_U_1, 2)*std::pow(n_U_3, 2) + std::pow(mre_U_1, 2)*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3132 = -mim_U_1*mim_U_2*std::pow(n_U_3, 2) + mre_U_1*mre_U_2*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3133 = -mim_U_1*mim_U_3*std::pow(n_U_3, 2) + mre_U_1*mre_U_3*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3232 = -std::pow(mim_U_2, 2)*std::pow(n_U_3, 2) + std::pow(mre_U_2, 2)*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3233 = -mim_U_2*mim_U_3*std::pow(n_U_3, 2) + mre_U_2*mre_U_3*std::pow(n_U_3, 2);
        amrex::Real nmnmre_UUUU_3333 = -std::pow(mim_U_3, 2)*std::pow(n_U_3, 2) + std::pow(mre_U_3, 2)*std::pow(n_U_3, 2);

        amrex::Real nmnmim_UUUU_0000 = -2*mim_U_0*mre_U_0*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0001 = -mim_U_0*mre_U_1*std::pow(n_U_0, 2) - mim_U_1*mre_U_0*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0002 = -mim_U_0*mre_U_2*std::pow(n_U_0, 2) - mim_U_2*mre_U_0*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0003 = -mim_U_0*mre_U_3*std::pow(n_U_0, 2) - mim_U_3*mre_U_0*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0010 = -2*mim_U_0*mre_U_0*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0011 = -mim_U_0*mre_U_1*n_U_0*n_U_1 - mim_U_1*mre_U_0*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0012 = -mim_U_0*mre_U_2*n_U_0*n_U_1 - mim_U_2*mre_U_0*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0013 = -mim_U_0*mre_U_3*n_U_0*n_U_1 - mim_U_3*mre_U_0*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0020 = -2*mim_U_0*mre_U_0*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0021 = -mim_U_0*mre_U_1*n_U_0*n_U_2 - mim_U_1*mre_U_0*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0022 = -mim_U_0*mre_U_2*n_U_0*n_U_2 - mim_U_2*mre_U_0*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0023 = -mim_U_0*mre_U_3*n_U_0*n_U_2 - mim_U_3*mre_U_0*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0030 = -2*mim_U_0*mre_U_0*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0031 = -mim_U_0*mre_U_1*n_U_0*n_U_3 - mim_U_1*mre_U_0*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0032 = -mim_U_0*mre_U_2*n_U_0*n_U_3 - mim_U_2*mre_U_0*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0033 = -mim_U_0*mre_U_3*n_U_0*n_U_3 - mim_U_3*mre_U_0*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0101 = -2*mim_U_1*mre_U_1*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0102 = -mim_U_1*mre_U_2*std::pow(n_U_0, 2) - mim_U_2*mre_U_1*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0103 = -mim_U_1*mre_U_3*std::pow(n_U_0, 2) - mim_U_3*mre_U_1*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0111 = -2*mim_U_1*mre_U_1*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0112 = -mim_U_1*mre_U_2*n_U_0*n_U_1 - mim_U_2*mre_U_1*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0113 = -mim_U_1*mre_U_3*n_U_0*n_U_1 - mim_U_3*mre_U_1*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0121 = -2*mim_U_1*mre_U_1*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0122 = -mim_U_1*mre_U_2*n_U_0*n_U_2 - mim_U_2*mre_U_1*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0123 = -mim_U_1*mre_U_3*n_U_0*n_U_2 - mim_U_3*mre_U_1*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0131 = -2*mim_U_1*mre_U_1*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0132 = -mim_U_1*mre_U_2*n_U_0*n_U_3 - mim_U_2*mre_U_1*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0133 = -mim_U_1*mre_U_3*n_U_0*n_U_3 - mim_U_3*mre_U_1*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0202 = -2*mim_U_2*mre_U_2*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0203 = -mim_U_2*mre_U_3*std::pow(n_U_0, 2) - mim_U_3*mre_U_2*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0212 = -2*mim_U_2*mre_U_2*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0213 = -mim_U_2*mre_U_3*n_U_0*n_U_1 - mim_U_3*mre_U_2*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0222 = -2*mim_U_2*mre_U_2*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0223 = -mim_U_2*mre_U_3*n_U_0*n_U_2 - mim_U_3*mre_U_2*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0232 = -2*mim_U_2*mre_U_2*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0233 = -mim_U_2*mre_U_3*n_U_0*n_U_3 - mim_U_3*mre_U_2*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_0303 = -2*mim_U_3*mre_U_3*std::pow(n_U_0, 2);
        amrex::Real nmnmim_UUUU_0313 = -2*mim_U_3*mre_U_3*n_U_0*n_U_1;
        amrex::Real nmnmim_UUUU_0323 = -2*mim_U_3*mre_U_3*n_U_0*n_U_2;
        amrex::Real nmnmim_UUUU_0333 = -2*mim_U_3*mre_U_3*n_U_0*n_U_3;
        amrex::Real nmnmim_UUUU_1010 = -2*mim_U_0*mre_U_0*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1011 = -mim_U_0*mre_U_1*std::pow(n_U_1, 2) - mim_U_1*mre_U_0*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1012 = -mim_U_0*mre_U_2*std::pow(n_U_1, 2) - mim_U_2*mre_U_0*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1013 = -mim_U_0*mre_U_3*std::pow(n_U_1, 2) - mim_U_3*mre_U_0*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1020 = -2*mim_U_0*mre_U_0*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1021 = -mim_U_0*mre_U_1*n_U_1*n_U_2 - mim_U_1*mre_U_0*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1022 = -mim_U_0*mre_U_2*n_U_1*n_U_2 - mim_U_2*mre_U_0*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1023 = -mim_U_0*mre_U_3*n_U_1*n_U_2 - mim_U_3*mre_U_0*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1030 = -2*mim_U_0*mre_U_0*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1031 = -mim_U_0*mre_U_1*n_U_1*n_U_3 - mim_U_1*mre_U_0*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1032 = -mim_U_0*mre_U_2*n_U_1*n_U_3 - mim_U_2*mre_U_0*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1033 = -mim_U_0*mre_U_3*n_U_1*n_U_3 - mim_U_3*mre_U_0*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1111 = -2*mim_U_1*mre_U_1*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1112 = -mim_U_1*mre_U_2*std::pow(n_U_1, 2) - mim_U_2*mre_U_1*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1113 = -mim_U_1*mre_U_3*std::pow(n_U_1, 2) - mim_U_3*mre_U_1*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1121 = -2*mim_U_1*mre_U_1*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1122 = -mim_U_1*mre_U_2*n_U_1*n_U_2 - mim_U_2*mre_U_1*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1123 = -mim_U_1*mre_U_3*n_U_1*n_U_2 - mim_U_3*mre_U_1*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1131 = -2*mim_U_1*mre_U_1*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1132 = -mim_U_1*mre_U_2*n_U_1*n_U_3 - mim_U_2*mre_U_1*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1133 = -mim_U_1*mre_U_3*n_U_1*n_U_3 - mim_U_3*mre_U_1*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1212 = -2*mim_U_2*mre_U_2*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1213 = -mim_U_2*mre_U_3*std::pow(n_U_1, 2) - mim_U_3*mre_U_2*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1222 = -2*mim_U_2*mre_U_2*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1223 = -mim_U_2*mre_U_3*n_U_1*n_U_2 - mim_U_3*mre_U_2*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1232 = -2*mim_U_2*mre_U_2*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1233 = -mim_U_2*mre_U_3*n_U_1*n_U_3 - mim_U_3*mre_U_2*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_1313 = -2*mim_U_3*mre_U_3*std::pow(n_U_1, 2);
        amrex::Real nmnmim_UUUU_1323 = -2*mim_U_3*mre_U_3*n_U_1*n_U_2;
        amrex::Real nmnmim_UUUU_1333 = -2*mim_U_3*mre_U_3*n_U_1*n_U_3;
        amrex::Real nmnmim_UUUU_2020 = -2*mim_U_0*mre_U_0*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2021 = -mim_U_0*mre_U_1*std::pow(n_U_2, 2) - mim_U_1*mre_U_0*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2022 = -mim_U_0*mre_U_2*std::pow(n_U_2, 2) - mim_U_2*mre_U_0*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2023 = -mim_U_0*mre_U_3*std::pow(n_U_2, 2) - mim_U_3*mre_U_0*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2030 = -2*mim_U_0*mre_U_0*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2031 = -mim_U_0*mre_U_1*n_U_2*n_U_3 - mim_U_1*mre_U_0*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2032 = -mim_U_0*mre_U_2*n_U_2*n_U_3 - mim_U_2*mre_U_0*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2033 = -mim_U_0*mre_U_3*n_U_2*n_U_3 - mim_U_3*mre_U_0*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2121 = -2*mim_U_1*mre_U_1*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2122 = -mim_U_1*mre_U_2*std::pow(n_U_2, 2) - mim_U_2*mre_U_1*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2123 = -mim_U_1*mre_U_3*std::pow(n_U_2, 2) - mim_U_3*mre_U_1*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2131 = -2*mim_U_1*mre_U_1*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2132 = -mim_U_1*mre_U_2*n_U_2*n_U_3 - mim_U_2*mre_U_1*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2133 = -mim_U_1*mre_U_3*n_U_2*n_U_3 - mim_U_3*mre_U_1*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2222 = -2*mim_U_2*mre_U_2*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2223 = -mim_U_2*mre_U_3*std::pow(n_U_2, 2) - mim_U_3*mre_U_2*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2232 = -2*mim_U_2*mre_U_2*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2233 = -mim_U_2*mre_U_3*n_U_2*n_U_3 - mim_U_3*mre_U_2*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_2323 = -2*mim_U_3*mre_U_3*std::pow(n_U_2, 2);
        amrex::Real nmnmim_UUUU_2333 = -2*mim_U_3*mre_U_3*n_U_2*n_U_3;
        amrex::Real nmnmim_UUUU_3030 = -2*mim_U_0*mre_U_0*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3031 = -mim_U_0*mre_U_1*std::pow(n_U_3, 2) - mim_U_1*mre_U_0*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3032 = -mim_U_0*mre_U_2*std::pow(n_U_3, 2) - mim_U_2*mre_U_0*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3033 = -mim_U_0*mre_U_3*std::pow(n_U_3, 2) - mim_U_3*mre_U_0*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3131 = -2*mim_U_1*mre_U_1*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3132 = -mim_U_1*mre_U_2*std::pow(n_U_3, 2) - mim_U_2*mre_U_1*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3133 = -mim_U_1*mre_U_3*std::pow(n_U_3, 2) - mim_U_3*mre_U_1*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3232 = -2*mim_U_2*mre_U_2*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3233 = -mim_U_2*mre_U_3*std::pow(n_U_3, 2) - mim_U_3*mre_U_2*std::pow(n_U_3, 2);
        amrex::Real nmnmim_UUUU_3333 = -2*mim_U_3*mre_U_3*std::pow(n_U_3, 2);
        
        amrex::Real radius = std::sqrt(x_U_0*x_U_0 + x_U_1*x_U_1 + x_U_2*x_U_2);
        amrex::Real radius_filter = 150.0;
        amrex::Real delta = 10.0;

         amrex::Real Psi4re = -2*nmnmre_UUUU_0011*rank4term_LLLL_0101 - nmnmre_UUUU_0012*rank4term_LLLL_0102 - nmnmre_UUUU_0012*rank4term_LLLL_0201 - nmnmre_UUUU_0021*rank4term_LLLL_0102 - nmnmre_UUUU_0021*rank4term_LLLL_0201 - 2*nmnmre_UUUU_0022*rank4term_LLLL_0202 + nmnmre_UUUU_0101*rank4term_LLLL_0101 + nmnmre_UUUU_0102*rank4term_LLLL_0102 + nmnmre_UUUU_0102*rank4term_LLLL_0201 + nmnmre_UUUU_0112*rank4term_LLLL_0112 + nmnmre_UUUU_0112*rank4term_LLLL_1201 - nmnmre_UUUU_0121*rank4term_LLLL_0112 - nmnmre_UUUU_0121*rank4term_LLLL_1201 - nmnmre_UUUU_0122*rank4term_LLLL_0212 - nmnmre_UUUU_0122*rank4term_LLLL_1202 + nmnmre_UUUU_0202*rank4term_LLLL_0202 + nmnmre_UUUU_0212*rank4term_LLLL_0212 + nmnmre_UUUU_0212*rank4term_LLLL_1202 + nmnmre_UUUU_1010*rank4term_LLLL_0101 - nmnmre_UUUU_1012*rank4term_LLLL_0112 - nmnmre_UUUU_1012*rank4term_LLLL_1201 + nmnmre_UUUU_1020*rank4term_LLLL_0102 + nmnmre_UUUU_1020*rank4term_LLLL_0201 + nmnmre_UUUU_1021*rank4term_LLLL_0112 + nmnmre_UUUU_1021*rank4term_LLLL_1201 - nmnmre_UUUU_1022*rank4term_LLLL_0212 - nmnmre_UUUU_1022*rank4term_LLLL_1202 - 2*nmnmre_UUUU_1122*rank4term_LLLL_1212 + nmnmre_UUUU_1212*rank4term_LLLL_1212 + nmnmre_UUUU_2020*rank4term_LLLL_0202 + nmnmre_UUUU_2021*rank4term_LLLL_0212 + nmnmre_UUUU_2021*rank4term_LLLL_1202 + nmnmre_UUUU_2121*rank4term_LLLL_1212 + 0.25*rank2term_LL_00*(-2*nmnmre_UUUU_0033 + nmnmre_UUUU_0303 + nmnmre_UUUU_3030) + 0.25*rank2term_LL_01*(-2*nmnmre_UUUU_0133 + nmnmre_UUUU_0313 + nmnmre_UUUU_3031) + 0.25*rank2term_LL_01*(nmnmre_UUUU_0313 - 2*nmnmre_UUUU_1033 + nmnmre_UUUU_3031) + 0.25*rank2term_LL_02*(-2*nmnmre_UUUU_0233 + nmnmre_UUUU_0323 + nmnmre_UUUU_3032) + 0.25*rank2term_LL_02*(nmnmre_UUUU_0323 - 2*nmnmre_UUUU_2033 + nmnmre_UUUU_3032) + 0.25*rank2term_LL_11*(-2*nmnmre_UUUU_1133 + nmnmre_UUUU_1313 + nmnmre_UUUU_3131) + 0.25*rank2term_LL_12*(-2*nmnmre_UUUU_1233 + nmnmre_UUUU_1323 + nmnmre_UUUU_3132) + 0.25*rank2term_LL_12*(nmnmre_UUUU_1323 - 2*nmnmre_UUUU_2133 + nmnmre_UUUU_3132) + 0.25*rank2term_LL_22*(-2*nmnmre_UUUU_2233 + nmnmre_UUUU_2323 + nmnmre_UUUU_3232) - 0.5*rank3term_LLL_001*(-nmnmre_UUUU_0013 + nmnmre_UUUU_1030) + 0.5*rank3term_LLL_001*(nmnmre_UUUU_0031 - nmnmre_UUUU_0103) - 0.5*rank3term_LLL_002*(-nmnmre_UUUU_0023 + nmnmre_UUUU_2030) + 0.5*rank3term_LLL_002*(nmnmre_UUUU_0032 - nmnmre_UUUU_0203) - 0.5*rank3term_LLL_012*(-nmnmre_UUUU_0123 + nmnmre_UUUU_2031) + 0.5*rank3term_LLL_012*(-nmnmre_UUUU_0213 + nmnmre_UUUU_1032) + 0.5*rank3term_LLL_101*(-nmnmre_UUUU_0113 + nmnmre_UUUU_0131) - 0.5*rank3term_LLL_101*(-nmnmre_UUUU_1013 + nmnmre_UUUU_1031) + 0.5*rank3term_LLL_102*(nmnmre_UUUU_0132 - nmnmre_UUUU_0213) - 0.5*rank3term_LLL_102*(-nmnmre_UUUU_1023 + nmnmre_UUUU_2031) - 0.5*rank3term_LLL_112*(-nmnmre_UUUU_1123 + nmnmre_UUUU_2131) + 0.5*rank3term_LLL_112*(nmnmre_UUUU_1132 - nmnmre_UUUU_1213) + 0.5*rank3term_LLL_201*(-nmnmre_UUUU_0123 + nmnmre_UUUU_0132) - 0.5*rank3term_LLL_201*(-nmnmre_UUUU_1023 + nmnmre_UUUU_1032) + 0.5*rank3term_LLL_202*(-nmnmre_UUUU_0223 + nmnmre_UUUU_0232) - 0.5*rank3term_LLL_202*(-nmnmre_UUUU_2023 + nmnmre_UUUU_2032) + 0.5*rank3term_LLL_212*(-nmnmre_UUUU_1223 + nmnmre_UUUU_1232) - 0.5*rank3term_LLL_212*(-nmnmre_UUUU_2123 + nmnmre_UUUU_2132);
         
        diag(i, j, k, Diag::Psi4re) = Psi4re;

        amrex::Real Psi4im = -2*nmnmim_UUUU_0011*rank4term_LLLL_0101 - nmnmim_UUUU_0012*rank4term_LLLL_0102 - nmnmim_UUUU_0012*rank4term_LLLL_0201 - nmnmim_UUUU_0021*rank4term_LLLL_0102 - nmnmim_UUUU_0021*rank4term_LLLL_0201 - 2*nmnmim_UUUU_0022*rank4term_LLLL_0202 + nmnmim_UUUU_0101*rank4term_LLLL_0101 + nmnmim_UUUU_0102*rank4term_LLLL_0102 + nmnmim_UUUU_0102*rank4term_LLLL_0201 + nmnmim_UUUU_0112*rank4term_LLLL_0112 + nmnmim_UUUU_0112*rank4term_LLLL_1201 - nmnmim_UUUU_0121*rank4term_LLLL_0112 - nmnmim_UUUU_0121*rank4term_LLLL_1201 - nmnmim_UUUU_0122*rank4term_LLLL_0212 - nmnmim_UUUU_0122*rank4term_LLLL_1202 + nmnmim_UUUU_0202*rank4term_LLLL_0202 + nmnmim_UUUU_0212*rank4term_LLLL_0212 + nmnmim_UUUU_0212*rank4term_LLLL_1202 + nmnmim_UUUU_1010*rank4term_LLLL_0101 - nmnmim_UUUU_1012*rank4term_LLLL_0112 - nmnmim_UUUU_1012*rank4term_LLLL_1201 + nmnmim_UUUU_1020*rank4term_LLLL_0102 + nmnmim_UUUU_1020*rank4term_LLLL_0201 + nmnmim_UUUU_1021*rank4term_LLLL_0112 + nmnmim_UUUU_1021*rank4term_LLLL_1201 - nmnmim_UUUU_1022*rank4term_LLLL_0212 - nmnmim_UUUU_1022*rank4term_LLLL_1202 - 2*nmnmim_UUUU_1122*rank4term_LLLL_1212 + nmnmim_UUUU_1212*rank4term_LLLL_1212 + nmnmim_UUUU_2020*rank4term_LLLL_0202 + nmnmim_UUUU_2021*rank4term_LLLL_0212 + nmnmim_UUUU_2021*rank4term_LLLL_1202 + nmnmim_UUUU_2121*rank4term_LLLL_1212 + 0.25*rank2term_LL_00*(-2*nmnmim_UUUU_0033 + nmnmim_UUUU_0303 + nmnmim_UUUU_3030) + 0.25*rank2term_LL_01*(-2*nmnmim_UUUU_0133 + nmnmim_UUUU_0313 + nmnmim_UUUU_3031) + 0.25*rank2term_LL_01*(nmnmim_UUUU_0313 - 2*nmnmim_UUUU_1033 + nmnmim_UUUU_3031) + 0.25*rank2term_LL_02*(-2*nmnmim_UUUU_0233 + nmnmim_UUUU_0323 + nmnmim_UUUU_3032) + 0.25*rank2term_LL_02*(nmnmim_UUUU_0323 - 2*nmnmim_UUUU_2033 + nmnmim_UUUU_3032) + 0.25*rank2term_LL_11*(-2*nmnmim_UUUU_1133 + nmnmim_UUUU_1313 + nmnmim_UUUU_3131) + 0.25*rank2term_LL_12*(-2*nmnmim_UUUU_1233 + nmnmim_UUUU_1323 + nmnmim_UUUU_3132) + 0.25*rank2term_LL_12*(nmnmim_UUUU_1323 - 2*nmnmim_UUUU_2133 + nmnmim_UUUU_3132) + 0.25*rank2term_LL_22*(-2*nmnmim_UUUU_2233 + nmnmim_UUUU_2323 + nmnmim_UUUU_3232) - 0.5*rank3term_LLL_001*(-nmnmim_UUUU_0013 + nmnmim_UUUU_1030) + 0.5*rank3term_LLL_001*(nmnmim_UUUU_0031 - nmnmim_UUUU_0103) - 0.5*rank3term_LLL_002*(-nmnmim_UUUU_0023 + nmnmim_UUUU_2030) + 0.5*rank3term_LLL_002*(nmnmim_UUUU_0032 - nmnmim_UUUU_0203) - 0.5*rank3term_LLL_012*(-nmnmim_UUUU_0123 + nmnmim_UUUU_2031) + 0.5*rank3term_LLL_012*(-nmnmim_UUUU_0213 + nmnmim_UUUU_1032) + 0.5*rank3term_LLL_101*(-nmnmim_UUUU_0113 + nmnmim_UUUU_0131) - 0.5*rank3term_LLL_101*(-nmnmim_UUUU_1013 + nmnmim_UUUU_1031) + 0.5*rank3term_LLL_102*(nmnmim_UUUU_0132 - nmnmim_UUUU_0213) - 0.5*rank3term_LLL_102*(-nmnmim_UUUU_1023 + nmnmim_UUUU_2031) - 0.5*rank3term_LLL_112*(-nmnmim_UUUU_1123 + nmnmim_UUUU_2131) + 0.5*rank3term_LLL_112*(nmnmim_UUUU_1132 - nmnmim_UUUU_1213) + 0.5*rank3term_LLL_201*(-nmnmim_UUUU_0123 + nmnmim_UUUU_0132) - 0.5*rank3term_LLL_201*(-nmnmim_UUUU_1023 + nmnmim_UUUU_1032) + 0.5*rank3term_LLL_202*(-nmnmim_UUUU_0223 + nmnmim_UUUU_0232) - 0.5*rank3term_LLL_202*(-nmnmim_UUUU_2023 + nmnmim_UUUU_2032) + 0.5*rank3term_LLL_212*(-nmnmim_UUUU_1223 + nmnmim_UUUU_1232) - 0.5*rank3term_LLL_212*(-nmnmim_UUUU_2123 + nmnmim_UUUU_2132);
        
        diag(i, j, k, Diag::Psi4im) = Psi4im;
        
        amrex::Real ModPsi4 = std::sqrt(Psi4re*Psi4re + Psi4im*Psi4im);
        
        diag(i, j, k, Diag::ModPsi4) = ModPsi4;
        }
             
}

AMREX_GPU_DEVICE 
inline 
amrex::Real
sum_C_constraint(const int i, const int j, const int k, 
        amrex::Array4<amrex::Real> const& state_fab,
        amrex::GpuArray<amrex::Real,AMREX_SPACEDIM> const& dx, 
        const amrex::GeometryData& geom) noexcept 
{
        return 0;
}
#endif